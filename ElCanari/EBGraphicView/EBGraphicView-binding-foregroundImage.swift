//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGraphicView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBGraphicView {

  //····················································································································

  final func bind_foregroundImageData (_ model : EBReadOnlyProperty_Data) {
    self.mForegroundImageDataController = EBObservablePropertyController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateForegroundImageData (from: model) }
    )
  }

  //····················································································································

  final func unbind_foregroundImageData () {
    self.mForegroundImageDataController?.unregister ()
    self.mForegroundImageDataController = nil
  }

  //····················································································································

  final private func updateForegroundImageData (from model : EBReadOnlyProperty_Data) {
    if self.mForegroundImage != nil {
      self.mForegroundImage = nil
      self.setNeedsDisplayAndUpdateViewBounds ()
    }
    switch model.selection {
    case .empty :
      break
    case .single (let v) :
      if let ciImage = CIImage (data: v) {
        self.mForegroundImage = ciImage
        self.setNeedsDisplayAndUpdateViewBounds ()
      }
    case .multiple :
      break
    }
  }

  //····················································································································

  final func bind_foregroundImageOpacity (_ model : EBReadOnlyProperty_Double) {
    self.mForegroundImageOpacityController = EBObservablePropertyController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateForegroundImageOpacity (from: model) }
    )
  }

  //····················································································································

  final func unbind_foregroundImageOpacity () {
    self.mForegroundImageOpacityController?.unregister ()
    self.mForegroundImageOpacityController = nil
  }

  //····················································································································

  final private func updateForegroundImageOpacity (from model : EBReadOnlyProperty_Double) {
    switch model.selection {
    case .empty :
      break
    case .single (let v) :
      self.mForegroundImageOpacity = CGFloat (v)
      self.needsDisplay = true
    case .multiple :
      break
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
