//
//  AutoLayoutCheckbox.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 06/02/2021.
//
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class AutoLayoutCheckbox : AutoLayoutBase_NSButton {

  //····················································································································

  override init (title inTitle : String, size inSize : EBControlSize) {
    super.init (title: inTitle, size: inSize)

    self.setButtonType (.switch)
    self.title = inTitle
    self.controlSize = inSize.cocoaControlSize
    self.font = NSFont.systemFont (ofSize: NSFont.systemFontSize (for: self.controlSize))
  }

  //····················································································································

  required init? (coder inCoder : NSCoder) {
    fatalError ("init(coder:) has not been implemented")
  }

  //····················································································································

  private var mWidth : CGFloat? = nil

  //····················································································································

  func set (width inWidth : Int, multiline inMultiLine : Bool) -> Self {
    self.mWidth = CGFloat (inWidth)
//    self.usesSingleLineMode = !inMultiLine
//    self.cell?.truncatesLastVisibleLine = !inMultiLine
    return self
  }

  //····················································································································

  func set (toolTip inToolTip : String) -> Self {
    self.toolTip = inToolTip
    return self
  }

  //····················································································································

  override var intrinsicContentSize : NSSize {
    var s = super.intrinsicContentSize
    if let w = self.mWidth {
      s.width = w
    }
    return s
  }

  //····················································································································

  override func sendAction (_ action : Selector?, to : Any?) -> Bool {
    self.mValueController?.updateModel (withValue: self.state == NSControl.StateValue.on)
    return super.sendAction (action, to: to)
  }

  //····················································································································
  //  value binding
  //····················································································································

  fileprivate func updateValue (from inObject : EBReadOnlyProperty_Bool) {
    switch inObject.selection {
    case .empty :
      self.state = NSControl.StateValue.off
      self.enable (fromValueBinding: false, self.enabledBindingController)
    case .multiple :
      self.allowsMixedState = true
      self.state = NSControl.StateValue.mixed
      self.enable (fromValueBinding: true, self.enabledBindingController)
    case .single (let v) :
      self.allowsMixedState = false
      self.state = v ? NSControl.StateValue.on : NSControl.StateValue.off
      self.enable (fromValueBinding: true, self.enabledBindingController)
    }
  }

  //····················································································································

  fileprivate var mValueController : EBGenericReadWritePropertyController <Bool>? = nil

  //····················································································································

  final func bind_value (_ inObject : EBReadWriteProperty_Bool) -> Self {
    self.mValueController = EBGenericReadWritePropertyController <Bool> (
      observedObject: inObject,
      callBack: { [weak self] in self?.updateValue (from: inObject) }
    )
    return self
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
