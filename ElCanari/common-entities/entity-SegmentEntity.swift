//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SegmentEntity_y1 : AnyObject {
  var y1 : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SegmentEntity_x2 : AnyObject {
  var x2 : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SegmentEntity_y2 : AnyObject {
  var y2 : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SegmentEntity_width : AnyObject {
  var width : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SegmentEntity_x1 : AnyObject {
  var x1 : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: SegmentEntity
//——————————————————————————————————————————————————————————————————————————————————————————————————

final class SegmentEntity : EBManagedObject,
         SegmentEntity_y1,
         SegmentEntity_x2,
         SegmentEntity_y2,
         SegmentEntity_width,
         SegmentEntity_x1 {

  //································································································
  //   Atomic property: y1
  //································································································

  final let y1_property : EBStoredProperty_Int

  //································································································

  final var y1 : Int {
    get { return self.y1_property.propval }
    set { self.y1_property.setProp (newValue) }
  }

  //································································································
  //   Atomic property: x2
  //································································································

  final let x2_property : EBStoredProperty_Int

  //································································································

  final var x2 : Int {
    get { return self.x2_property.propval }
    set { self.x2_property.setProp (newValue) }
  }

  //································································································
  //   Atomic property: y2
  //································································································

  final let y2_property : EBStoredProperty_Int

  //································································································

  final var y2 : Int {
    get { return self.y2_property.propval }
    set { self.y2_property.setProp (newValue) }
  }

  //································································································
  //   Atomic property: width
  //································································································

  final let width_property : EBStoredProperty_Int

  //································································································

  final var width : Int {
    get { return self.width_property.propval }
    set { self.width_property.setProp (newValue) }
  }

  //································································································
  //   Atomic property: x1
  //································································································

  final let x1_property : EBStoredProperty_Int

  //································································································

  final var x1 : Int {
    get { return self.x1_property.propval }
    set { self.x1_property.setProp (newValue) }
  }

  //································································································
  //    init
  //································································································

  required init (_ inUndoManager : UndoManager?) {
    self.y1_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "y1")
    self.x2_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "x2")
    self.y2_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "y2")
    self.width_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "width")
    self.x1_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "x1")
    super.init (inUndoManager)
  //--- Install undoers and opposite setter for relationships
  //--- Register properties for handling signature
  //--- Extern delegates
   }
  
  //································································································
  //    Extern delegates
  //································································································


  //································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————

