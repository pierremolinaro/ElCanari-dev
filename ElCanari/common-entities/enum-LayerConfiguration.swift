//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum LayerConfiguration : Int, EnumPropertyProtocol, Hashable, CaseIterable {
  case oneLayer = 0
  case twoLayers = 1
  case fourLayers = 2
  case sixLayers = 3


  //····················································································································

  init? (string : String) {
    switch string {
      case "oneLayer" : self = .oneLayer // 0
      case "twoLayers" : self = .twoLayers // 1
      case "fourLayers" : self = .fourLayers // 2
      case "sixLayers" : self = .sixLayers // 3
      case _ : return nil
    }
  }

  //····················································································································

  func descriptionForExplorer () -> String {
    switch self {
      case .oneLayer : return "oneLayer" // 0
      case .twoLayers : return "twoLayers" // 1
      case .fourLayers : return "fourLayers" // 2
      case .sixLayers : return "sixLayers" // 3
    }
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> LayerConfiguration? {
    if let v = LayerConfiguration (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> LayerConfiguration {
    var result = self
    let v : LayerConfiguration? = LayerConfiguration (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> LayerConfiguration {
    var result = LayerConfiguration.oneLayer
    if let number = object as? NSNumber, let v = LayerConfiguration (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> LayerConfiguration? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = LayerConfiguration (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_LayerConfiguration = EBReadOnlyEnumProperty <LayerConfiguration>
typealias EBTransientProperty_LayerConfiguration = EBTransientEnumProperty <LayerConfiguration>
typealias EBReadWriteProperty_LayerConfiguration = EBReadWriteEnumProperty <LayerConfiguration>
typealias EBStoredProperty_LayerConfiguration = EBStoredEnumProperty <LayerConfiguration>
typealias EBPropertyProxy_LayerConfiguration = EBPropertyEnumProxy <LayerConfiguration>
typealias EBPreferencesProperty_LayerConfiguration = EBStoredEnumProperty <LayerConfiguration>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
