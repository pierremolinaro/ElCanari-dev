//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum PadSide : Int, EnumPropertyProtocol, Hashable, CaseIterable {
  case traversing = 0
  case front = 1
  case back = 2


  //····················································································································

/*  init? (string : String) {
    switch string {
      case "traversing" : self = .traversing // 0
      case "front" : self = .front // 1
      case "back" : self = .back // 2
      case _ : return nil
    }
  } */

  //····················································································································

  func descriptionForExplorer () -> String {
    switch self {
      case .traversing : return "traversing" // 0
      case .front : return "front" // 1
      case .back : return "back" // 2
    }
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> PadSide? {
    if let v = PadSide (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> PadSide {
    var result = self
    let v : PadSide? = PadSide (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> PadSide {
    var result = PadSide.traversing
    if let number = object as? NSNumber, let v = PadSide (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> PadSide? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = PadSide (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_PadSide = EBReadOnlyEnumProperty <PadSide>
typealias EBTransientProperty_PadSide = EBTransientEnumProperty <PadSide>
typealias EBReadWriteProperty_PadSide = EBReadWriteEnumProperty <PadSide>
typealias EBStoredProperty_PadSide = EBStoredEnumProperty <PadSide>
typealias EBPropertyProxy_PadSide = EBPropertyEnumProxy <PadSide>
typealias EBPreferencesProperty_PadSide = EBStoredEnumProperty <PadSide>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
