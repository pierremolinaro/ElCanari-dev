//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawBoardLimits : AnyObject {
  var drawBoardLimits : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawInternalBoardLimits : AnyObject {
  var drawInternalBoardLimits : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawComponentNamesTopSide : AnyObject {
  var drawComponentNamesTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawComponentNamesBottomSide : AnyObject {
  var drawComponentNamesBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawComponentValuesTopSide : AnyObject {
  var drawComponentValuesTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawComponentValuesBottomSide : AnyObject {
  var drawComponentValuesBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawPackageLegendTopSide : AnyObject {
  var drawPackageLegendTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawPackageLegendBottomSide : AnyObject {
  var drawPackageLegendBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawPadHolesInPDF : AnyObject {
  var drawPadHolesInPDF : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawPadsTopSide : AnyObject {
  var drawPadsTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawPadsBottomSide : AnyObject {
  var drawPadsBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTextsLayoutTopSide : AnyObject {
  var drawTextsLayoutTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTextsLayoutBottomSide : AnyObject {
  var drawTextsLayoutBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTextsLegendTopSide : AnyObject {
  var drawTextsLegendTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTextsLegendBottomSide : AnyObject {
  var drawTextsLegendBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksTopSide : AnyObject {
  var drawTracksTopSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksInner1Layer : AnyObject {
  var drawTracksInner1Layer : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksInner2Layer : AnyObject {
  var drawTracksInner2Layer : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksInner3Layer : AnyObject {
  var drawTracksInner3Layer : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksInner4Layer : AnyObject {
  var drawTracksInner4Layer : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTracksBottomSide : AnyObject {
  var drawTracksBottomSide : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawTraversingPads : AnyObject {
  var drawTraversingPads : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_drawVias : AnyObject {
  var drawVias : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_fileExtension : AnyObject {
  var fileExtension : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_horizontalMirror : AnyObject {
  var horizontalMirror : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_name : AnyObject {
  var name : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_measurementUnitForPadHoleInPDF : AnyObject {
  var measurementUnitForPadHoleInPDF : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_padHoleDiameterInPDF : AnyObject {
  var padHoleDiameterInPDF : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_hasNoData : AnyObject {
  var hasNoData : Bool? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_parameterStatusImage : AnyObject {
  var parameterStatusImage : NSImage? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkFileGenerationParameters_emptyFileExtensionImage : AnyObject {
  var emptyFileExtensionImage : NSImage? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: ArtworkFileGenerationParameters
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class ArtworkFileGenerationParameters : EBManagedObject,
         ArtworkFileGenerationParameters_drawBoardLimits,
         ArtworkFileGenerationParameters_drawInternalBoardLimits,
         ArtworkFileGenerationParameters_drawComponentNamesTopSide,
         ArtworkFileGenerationParameters_drawComponentNamesBottomSide,
         ArtworkFileGenerationParameters_drawComponentValuesTopSide,
         ArtworkFileGenerationParameters_drawComponentValuesBottomSide,
         ArtworkFileGenerationParameters_drawPackageLegendTopSide,
         ArtworkFileGenerationParameters_drawPackageLegendBottomSide,
         ArtworkFileGenerationParameters_drawPadHolesInPDF,
         ArtworkFileGenerationParameters_drawPadsTopSide,
         ArtworkFileGenerationParameters_drawPadsBottomSide,
         ArtworkFileGenerationParameters_drawTextsLayoutTopSide,
         ArtworkFileGenerationParameters_drawTextsLayoutBottomSide,
         ArtworkFileGenerationParameters_drawTextsLegendTopSide,
         ArtworkFileGenerationParameters_drawTextsLegendBottomSide,
         ArtworkFileGenerationParameters_drawTracksTopSide,
         ArtworkFileGenerationParameters_drawTracksInner1Layer,
         ArtworkFileGenerationParameters_drawTracksInner2Layer,
         ArtworkFileGenerationParameters_drawTracksInner3Layer,
         ArtworkFileGenerationParameters_drawTracksInner4Layer,
         ArtworkFileGenerationParameters_drawTracksBottomSide,
         ArtworkFileGenerationParameters_drawTraversingPads,
         ArtworkFileGenerationParameters_drawVias,
         ArtworkFileGenerationParameters_fileExtension,
         ArtworkFileGenerationParameters_horizontalMirror,
         ArtworkFileGenerationParameters_name,
         ArtworkFileGenerationParameters_measurementUnitForPadHoleInPDF,
         ArtworkFileGenerationParameters_padHoleDiameterInPDF,
         ArtworkFileGenerationParameters_hasNoData,
         ArtworkFileGenerationParameters_parameterStatusImage,
         ArtworkFileGenerationParameters_emptyFileExtensionImage {

  //····················································································································
  //   Atomic property: drawBoardLimits
  //····················································································································

  final let drawBoardLimits_property : EBStoredProperty_Bool

  //····················································································································

  final var drawBoardLimits : Bool {
    get { return self.drawBoardLimits_property.propval }
  }

  //····················································································································
  //   Atomic property: drawInternalBoardLimits
  //····················································································································

  final let drawInternalBoardLimits_property : EBStoredProperty_Bool

  //····················································································································

  final var drawInternalBoardLimits : Bool {
    get { return self.drawInternalBoardLimits_property.propval }
  }

  //····················································································································
  //   Atomic property: drawComponentNamesTopSide
  //····················································································································

  final let drawComponentNamesTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawComponentNamesTopSide : Bool {
    get { return self.drawComponentNamesTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawComponentNamesBottomSide
  //····················································································································

  final let drawComponentNamesBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawComponentNamesBottomSide : Bool {
    get { return self.drawComponentNamesBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawComponentValuesTopSide
  //····················································································································

  final let drawComponentValuesTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawComponentValuesTopSide : Bool {
    get { return self.drawComponentValuesTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawComponentValuesBottomSide
  //····················································································································

  final let drawComponentValuesBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawComponentValuesBottomSide : Bool {
    get { return self.drawComponentValuesBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawPackageLegendTopSide
  //····················································································································

  final let drawPackageLegendTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawPackageLegendTopSide : Bool {
    get { return self.drawPackageLegendTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawPackageLegendBottomSide
  //····················································································································

  final let drawPackageLegendBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawPackageLegendBottomSide : Bool {
    get { return self.drawPackageLegendBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawPadHolesInPDF
  //····················································································································

  final let drawPadHolesInPDF_property : EBStoredProperty_Bool

  //····················································································································

  final var drawPadHolesInPDF : Bool {
    get { return self.drawPadHolesInPDF_property.propval }
  }

  //····················································································································
  //   Atomic property: drawPadsTopSide
  //····················································································································

  final let drawPadsTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawPadsTopSide : Bool {
    get { return self.drawPadsTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawPadsBottomSide
  //····················································································································

  final let drawPadsBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawPadsBottomSide : Bool {
    get { return self.drawPadsBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTextsLayoutTopSide
  //····················································································································

  final let drawTextsLayoutTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTextsLayoutTopSide : Bool {
    get { return self.drawTextsLayoutTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTextsLayoutBottomSide
  //····················································································································

  final let drawTextsLayoutBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTextsLayoutBottomSide : Bool {
    get { return self.drawTextsLayoutBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTextsLegendTopSide
  //····················································································································

  final let drawTextsLegendTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTextsLegendTopSide : Bool {
    get { return self.drawTextsLegendTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTextsLegendBottomSide
  //····················································································································

  final let drawTextsLegendBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTextsLegendBottomSide : Bool {
    get { return self.drawTextsLegendBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksTopSide
  //····················································································································

  final let drawTracksTopSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksTopSide : Bool {
    get { return self.drawTracksTopSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksInner1Layer
  //····················································································································

  final let drawTracksInner1Layer_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksInner1Layer : Bool {
    get { return self.drawTracksInner1Layer_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksInner2Layer
  //····················································································································

  final let drawTracksInner2Layer_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksInner2Layer : Bool {
    get { return self.drawTracksInner2Layer_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksInner3Layer
  //····················································································································

  final let drawTracksInner3Layer_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksInner3Layer : Bool {
    get { return self.drawTracksInner3Layer_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksInner4Layer
  //····················································································································

  final let drawTracksInner4Layer_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksInner4Layer : Bool {
    get { return self.drawTracksInner4Layer_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTracksBottomSide
  //····················································································································

  final let drawTracksBottomSide_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTracksBottomSide : Bool {
    get { return self.drawTracksBottomSide_property.propval }
  }

  //····················································································································
  //   Atomic property: drawTraversingPads
  //····················································································································

  final let drawTraversingPads_property : EBStoredProperty_Bool

  //····················································································································

  final var drawTraversingPads : Bool {
    get { return self.drawTraversingPads_property.propval }
  }

  //····················································································································
  //   Atomic property: drawVias
  //····················································································································

  final let drawVias_property : EBStoredProperty_Bool

  //····················································································································

  final var drawVias : Bool {
    get { return self.drawVias_property.propval }
  }

  //····················································································································
  //   Atomic property: fileExtension
  //····················································································································

  final let fileExtension_property : EBStoredProperty_String

  //····················································································································

  final var fileExtension : String {
    get { return self.fileExtension_property.propval }
  }

  //····················································································································
  //   Atomic property: horizontalMirror
  //····················································································································

  final let horizontalMirror_property : EBStoredProperty_Bool

  //····················································································································

  final var horizontalMirror : Bool {
    get { return self.horizontalMirror_property.propval }
  }

  //····················································································································
  //   Atomic property: name
  //····················································································································

  final let name_property : EBStoredProperty_String

  //····················································································································

  final var name : String {
    get { return self.name_property.propval }
    set { self.name_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: measurementUnitForPadHoleInPDF
  //····················································································································

  final let measurementUnitForPadHoleInPDF_property : EBStoredProperty_Int

  //····················································································································

  final var measurementUnitForPadHoleInPDF : Int {
    get { return self.measurementUnitForPadHoleInPDF_property.propval }
  }

  //····················································································································
  //   Atomic property: padHoleDiameterInPDF
  //····················································································································

  final let padHoleDiameterInPDF_property : EBStoredProperty_Int

  //····················································································································

  final var padHoleDiameterInPDF : Int {
    get { return self.padHoleDiameterInPDF_property.propval }
  }

  //····················································································································
  //   To one property: mArtwork
  //····················································································································

  final let mArtwork_property = StoredObject_ArtworkRoot (usedForSignature: false, strongRef: false, key: "mArtwork")

  //····················································································································

  final var mArtwork : ArtworkRoot? {
    get {
      return self.mArtwork_property.propval
    }
    set {
      if self.mArtwork_property.propval !== newValue {
        if self.mArtwork_property.propval != nil {
          self.mArtwork_property.setProp (nil)
        }
        if newValue != nil {
          self.mArtwork_property.setProp (newValue)
        }
      }
    }
  }

  //····················································································································

  final let mArtwork_none = EBTransientProperty <Bool> ()

  //····················································································································
  //   Transient property: hasNoData
  //····················································································································

  final let hasNoData_property = EBTransientProperty_Bool ()

  //····················································································································

  final var hasNoData : Bool? {
    return self.hasNoData_property.optionalValue
  }

  //····················································································································
  //   Transient property: parameterStatusImage
  //····················································································································

  final let parameterStatusImage_property = EBTransientProperty_NSImage ()

  //····················································································································

  final var parameterStatusImage : NSImage? {
    return self.parameterStatusImage_property.optionalValue
  }

  //····················································································································
  //   Transient property: emptyFileExtensionImage
  //····················································································································

  final let emptyFileExtensionImage_property = EBTransientProperty_NSImage ()

  //····················································································································

  final var emptyFileExtensionImage : NSImage? {
    return self.emptyFileExtensionImage_property.optionalValue
  }

  //····················································································································
  //    init
  //····················································································································

  required init (_ inUndoManager : UndoManager?) {
    self.drawBoardLimits_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawBoardLimits")
    self.drawInternalBoardLimits_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawInternalBoardLimits")
    self.drawComponentNamesTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawComponentNamesTopSide")
    self.drawComponentNamesBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawComponentNamesBottomSide")
    self.drawComponentValuesTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawComponentValuesTopSide")
    self.drawComponentValuesBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawComponentValuesBottomSide")
    self.drawPackageLegendTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawPackageLegendTopSide")
    self.drawPackageLegendBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawPackageLegendBottomSide")
    self.drawPadHolesInPDF_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawPadHolesInPDF")
    self.drawPadsTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawPadsTopSide")
    self.drawPadsBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawPadsBottomSide")
    self.drawTextsLayoutTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTextsLayoutTopSide")
    self.drawTextsLayoutBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTextsLayoutBottomSide")
    self.drawTextsLegendTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTextsLegendTopSide")
    self.drawTextsLegendBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTextsLegendBottomSide")
    self.drawTracksTopSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksTopSide")
    self.drawTracksInner1Layer_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksInner1Layer")
    self.drawTracksInner2Layer_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksInner2Layer")
    self.drawTracksInner3Layer_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksInner3Layer")
    self.drawTracksInner4Layer_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksInner4Layer")
    self.drawTracksBottomSide_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTracksBottomSide")
    self.drawTraversingPads_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawTraversingPads")
    self.drawVias_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "drawVias")
    self.fileExtension_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "fileExtension")
    self.horizontalMirror_property = EBStoredProperty_Bool (defaultValue: false, undoManager: inUndoManager, key: "horizontalMirror")
    self.name_property = EBStoredProperty_String (defaultValue: "Unnamed", undoManager: inUndoManager, key: "name")
    self.measurementUnitForPadHoleInPDF_property = EBStoredProperty_Int (defaultValue: 90000, undoManager: inUndoManager, key: "measurementUnitForPadHoleInPDF")
    self.padHoleDiameterInPDF_property = EBStoredProperty_Int (defaultValue: 90000, undoManager: inUndoManager, key: "padHoleDiameterInPDF")
    super.init (inUndoManager)
    self.mArtwork_none.mReadModelFunction = { [weak self] in
      if let uwSelf = self {
        return .single (uwSelf.mArtwork_property.propval == nil)
      }else{
        return .empty
      }
    }
    self.mArtwork_property.startsToBeObserved (by: self.mArtwork_none)
  //--- To one property: mArtwork (has opposite to many relationship: fileGenerationParameterArray)
    self.mArtwork_property.undoManager = inUndoManager
    self.mArtwork_property.setOppositeRelationShipFunctions (
      setter: { [weak self] inObject in if let me = self { inObject.fileGenerationParameterArray_property.add (me) } },
      resetter: { [weak self] inObject in if let me = self { inObject.fileGenerationParameterArray_property.remove (me) } }
    )
  //--- Atomic property: hasNoData
    self.hasNoData_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.mArtwork_property.layerConfiguration_property.selection
        let s1 = unwSelf.drawBoardLimits_property.selection
        let s2 = unwSelf.drawInternalBoardLimits_property.selection
        let s3 = unwSelf.drawComponentNamesTopSide_property.selection
        let s4 = unwSelf.drawComponentNamesBottomSide_property.selection
        let s5 = unwSelf.drawComponentValuesTopSide_property.selection
        let s6 = unwSelf.drawComponentValuesBottomSide_property.selection
        let s7 = unwSelf.drawPackageLegendTopSide_property.selection
        let s8 = unwSelf.drawPackageLegendBottomSide_property.selection
        let s9 = unwSelf.drawPadHolesInPDF_property.selection
        let s10 = unwSelf.drawPadsTopSide_property.selection
        let s11 = unwSelf.drawPadsBottomSide_property.selection
        let s12 = unwSelf.drawTextsLayoutTopSide_property.selection
        let s13 = unwSelf.drawTextsLayoutBottomSide_property.selection
        let s14 = unwSelf.drawTextsLegendTopSide_property.selection
        let s15 = unwSelf.drawTextsLegendBottomSide_property.selection
        let s16 = unwSelf.drawTracksTopSide_property.selection
        let s17 = unwSelf.drawTracksInner1Layer_property.selection
        let s18 = unwSelf.drawTracksInner2Layer_property.selection
        let s19 = unwSelf.drawTracksInner3Layer_property.selection
        let s20 = unwSelf.drawTracksInner4Layer_property.selection
        let s21 = unwSelf.drawTracksBottomSide_property.selection
        let s22 = unwSelf.drawTraversingPads_property.selection
        let s23 = unwSelf.drawVias_property.selection
        switch (s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23) {
        case (.single (let v0),
              .single (let v1),
              .single (let v2),
              .single (let v3),
              .single (let v4),
              .single (let v5),
              .single (let v6),
              .single (let v7),
              .single (let v8),
              .single (let v9),
              .single (let v10),
              .single (let v11),
              .single (let v12),
              .single (let v13),
              .single (let v14),
              .single (let v15),
              .single (let v16),
              .single (let v17),
              .single (let v18),
              .single (let v19),
              .single (let v20),
              .single (let v21),
              .single (let v22),
              .single (let v23)) :
          return .single (transient_ArtworkFileGenerationParameters_hasNoData (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23))
        case (.multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.mArtwork_property.layerConfiguration_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawBoardLimits_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawInternalBoardLimits_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawComponentNamesTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawComponentNamesBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawComponentValuesTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawComponentValuesBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawPackageLegendTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawPackageLegendBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawPadHolesInPDF_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawPadsTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawPadsBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTextsLayoutTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTextsLayoutBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTextsLegendTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTextsLegendBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksTopSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksInner1Layer_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksInner2Layer_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksInner3Layer_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksInner4Layer_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTracksBottomSide_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawTraversingPads_property.startsToBeObserved (by: self.hasNoData_property)
    self.drawVias_property.startsToBeObserved (by: self.hasNoData_property)
  //--- Atomic property: parameterStatusImage
    self.parameterStatusImage_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.name_property.selection
        let s1 = unwSelf.fileExtension_property.selection
        let s2 = unwSelf.hasNoData_property.selection
        switch (s0, s1, s2) {
        case (.single (let v0),
              .single (let v1),
              .single (let v2)) :
          return .single (transient_ArtworkFileGenerationParameters_parameterStatusImage (v0, v1, v2))
        case (.multiple,
              .multiple,
              .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.name_property.startsToBeObserved (by: self.parameterStatusImage_property)
    self.fileExtension_property.startsToBeObserved (by: self.parameterStatusImage_property)
    self.hasNoData_property.startsToBeObserved (by: self.parameterStatusImage_property)
  //--- Atomic property: emptyFileExtensionImage
    self.emptyFileExtensionImage_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.fileExtension_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_ArtworkFileGenerationParameters_emptyFileExtensionImage (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.fileExtension_property.startsToBeObserved (by: self.emptyFileExtensionImage_property)
  //--- Install undoers and opposite setter for relationships
  //--- Register properties for handling signature
    self.drawBoardLimits_property.setSignatureObserver (observer: self)
    self.drawComponentNamesBottomSide_property.setSignatureObserver (observer: self)
    self.drawComponentNamesTopSide_property.setSignatureObserver (observer: self)
    self.drawComponentValuesBottomSide_property.setSignatureObserver (observer: self)
    self.drawComponentValuesTopSide_property.setSignatureObserver (observer: self)
    self.drawInternalBoardLimits_property.setSignatureObserver (observer: self)
    self.drawPackageLegendBottomSide_property.setSignatureObserver (observer: self)
    self.drawPackageLegendTopSide_property.setSignatureObserver (observer: self)
    self.drawPadHolesInPDF_property.setSignatureObserver (observer: self)
    self.drawPadsBottomSide_property.setSignatureObserver (observer: self)
    self.drawPadsTopSide_property.setSignatureObserver (observer: self)
    self.drawTextsLayoutBottomSide_property.setSignatureObserver (observer: self)
    self.drawTextsLayoutTopSide_property.setSignatureObserver (observer: self)
    self.drawTextsLegendBottomSide_property.setSignatureObserver (observer: self)
    self.drawTextsLegendTopSide_property.setSignatureObserver (observer: self)
    self.drawTracksBottomSide_property.setSignatureObserver (observer: self)
    self.drawTracksInner1Layer_property.setSignatureObserver (observer: self)
    self.drawTracksInner2Layer_property.setSignatureObserver (observer: self)
    self.drawTracksInner3Layer_property.setSignatureObserver (observer: self)
    self.drawTracksInner4Layer_property.setSignatureObserver (observer: self)
    self.drawTracksTopSide_property.setSignatureObserver (observer: self)
    self.drawTraversingPads_property.setSignatureObserver (observer: self)
    self.drawVias_property.setSignatureObserver (observer: self)
    self.fileExtension_property.setSignatureObserver (observer: self)
    self.horizontalMirror_property.setSignatureObserver (observer: self)
    self.measurementUnitForPadHoleInPDF_property.setSignatureObserver (observer: self)
    self.name_property.setSignatureObserver (observer: self)
    self.padHoleDiameterInPDF_property.setSignatureObserver (observer: self)
  //--- Extern delegates
   }
  
  //····················································································································
  //    Extern delegates
  //····················································································································


  //····················································································································
  //   computeSignature
  //····················································································································

  override func computeSignature () -> UInt32 {
    var crc = super.computeSignature ()
    crc.accumulate (u32: self.drawBoardLimits_property.signature ())
    crc.accumulate (u32: self.drawComponentNamesBottomSide_property.signature ())
    crc.accumulate (u32: self.drawComponentNamesTopSide_property.signature ())
    crc.accumulate (u32: self.drawComponentValuesBottomSide_property.signature ())
    crc.accumulate (u32: self.drawComponentValuesTopSide_property.signature ())
    crc.accumulate (u32: self.drawInternalBoardLimits_property.signature ())
    crc.accumulate (u32: self.drawPackageLegendBottomSide_property.signature ())
    crc.accumulate (u32: self.drawPackageLegendTopSide_property.signature ())
    crc.accumulate (u32: self.drawPadHolesInPDF_property.signature ())
    crc.accumulate (u32: self.drawPadsBottomSide_property.signature ())
    crc.accumulate (u32: self.drawPadsTopSide_property.signature ())
    crc.accumulate (u32: self.drawTextsLayoutBottomSide_property.signature ())
    crc.accumulate (u32: self.drawTextsLayoutTopSide_property.signature ())
    crc.accumulate (u32: self.drawTextsLegendBottomSide_property.signature ())
    crc.accumulate (u32: self.drawTextsLegendTopSide_property.signature ())
    crc.accumulate (u32: self.drawTracksBottomSide_property.signature ())
    crc.accumulate (u32: self.drawTracksInner1Layer_property.signature ())
    crc.accumulate (u32: self.drawTracksInner2Layer_property.signature ())
    crc.accumulate (u32: self.drawTracksInner3Layer_property.signature ())
    crc.accumulate (u32: self.drawTracksInner4Layer_property.signature ())
    crc.accumulate (u32: self.drawTracksTopSide_property.signature ())
    crc.accumulate (u32: self.drawTraversingPads_property.signature ())
    crc.accumulate (u32: self.drawVias_property.signature ())
    crc.accumulate (u32: self.fileExtension_property.signature ())
    crc.accumulate (u32: self.horizontalMirror_property.signature ())
    crc.accumulate (u32: self.measurementUnitForPadHoleInPDF_property.signature ())
    crc.accumulate (u32: self.name_property.signature ())
    crc.accumulate (u32: self.padHoleDiameterInPDF_property.signature ())
    return crc
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

