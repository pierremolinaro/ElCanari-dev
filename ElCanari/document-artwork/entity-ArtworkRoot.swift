//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_layerConfiguration : AnyObject {
  var layerConfiguration : LayerConfiguration { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_selectedTab : AnyObject {
  var selectedTab : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_comments : AnyObject {
  var comments : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minPPTPTTTWdisplayUnit : AnyObject {
  var minPPTPTTTWdisplayUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minPPTPTTTW : AnyObject {
  var minPPTPTTTW : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForOARdisplayUnit : AnyObject {
  var minValueForOARdisplayUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForOARinEBUnit : AnyObject {
  var minValueForOARinEBUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForPHDdisplayUnit : AnyObject {
  var minValueForPHDdisplayUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForPHDinEBUnit : AnyObject {
  var minValueForPHDinEBUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForBoardLimitWidthDisplayUnit : AnyObject {
  var minValueForBoardLimitWidthDisplayUnit : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_minValueForBoardLimitWidth : AnyObject {
  var minValueForBoardLimitWidth : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_title : AnyObject {
  var title : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_drillDataFileExtension : AnyObject {
  var drillDataFileExtension : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_hasInnerElements : AnyObject {
  var hasInnerElements : Bool? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_hasSixLayers : AnyObject {
  var hasSixLayers : Bool? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_hasDataWarning : AnyObject {
  var hasDataWarning : Bool? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_emptyDrillFileExtension : AnyObject {
  var emptyDrillFileExtension : Bool? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol ArtworkRoot_signatureForERCChecking : AnyObject {
  var signatureForERCChecking : UInt32? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: ArtworkRoot
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class ArtworkRoot : EBManagedObject,
         ArtworkRoot_layerConfiguration,
         ArtworkRoot_selectedTab,
         ArtworkRoot_comments,
         ArtworkRoot_minPPTPTTTWdisplayUnit,
         ArtworkRoot_minPPTPTTTW,
         ArtworkRoot_minValueForOARdisplayUnit,
         ArtworkRoot_minValueForOARinEBUnit,
         ArtworkRoot_minValueForPHDdisplayUnit,
         ArtworkRoot_minValueForPHDinEBUnit,
         ArtworkRoot_minValueForBoardLimitWidthDisplayUnit,
         ArtworkRoot_minValueForBoardLimitWidth,
         ArtworkRoot_title,
         ArtworkRoot_drillDataFileExtension,
         ArtworkRoot_hasInnerElements,
         ArtworkRoot_hasSixLayers,
         ArtworkRoot_hasDataWarning,
         ArtworkRoot_emptyDrillFileExtension,
         ArtworkRoot_signatureForERCChecking {

  //····················································································································
  //   Atomic property: layerConfiguration
  //····················································································································

  final let layerConfiguration_property : EBStoredProperty_LayerConfiguration

  //····················································································································

  final func reset_layerConfiguration_toDefaultValue () {
    self.layerConfiguration = LayerConfiguration.twoLayers
  }

  //····················································································································

  final var layerConfiguration : LayerConfiguration {
    get { return self.layerConfiguration_property.propval }
    set { self.layerConfiguration_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: selectedTab
  //····················································································································

  final let selectedTab_property : EBStoredProperty_Int

  //····················································································································

  final func reset_selectedTab_toDefaultValue () {
    self.selectedTab = 0
  }

  //····················································································································

  final var selectedTab : Int {
    get { return self.selectedTab_property.propval }
    set { self.selectedTab_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: comments
  //····················································································································

  final let comments_property : EBStoredProperty_String

  //····················································································································

  final func reset_comments_toDefaultValue () {
    self.comments = ""
  }

  //····················································································································

  final var comments : String {
    get { return self.comments_property.propval }
    set { self.comments_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minPPTPTTTWdisplayUnit
  //····················································································································

  final let minPPTPTTTWdisplayUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minPPTPTTTWdisplayUnit_toDefaultValue () {
    self.minPPTPTTTWdisplayUnit = 90
  }

  //····················································································································

  final var minPPTPTTTWdisplayUnit : Int {
    get { return self.minPPTPTTTWdisplayUnit_property.propval }
    set { self.minPPTPTTTWdisplayUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minPPTPTTTW
  //····················································································································

  final let minPPTPTTTW_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minPPTPTTTW_toDefaultValue () {
    self.minPPTPTTTW = 18000
  }

  //····················································································································

  final var minPPTPTTTW : Int {
    get { return self.minPPTPTTTW_property.propval }
    set { self.minPPTPTTTW_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForOARdisplayUnit
  //····················································································································

  final let minValueForOARdisplayUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForOARdisplayUnit_toDefaultValue () {
    self.minValueForOARdisplayUnit = 90
  }

  //····················································································································

  final var minValueForOARdisplayUnit : Int {
    get { return self.minValueForOARdisplayUnit_property.propval }
    set { self.minValueForOARdisplayUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForOARinEBUnit
  //····················································································································

  final let minValueForOARinEBUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForOARinEBUnit_toDefaultValue () {
    self.minValueForOARinEBUnit = 18000
  }

  //····················································································································

  final var minValueForOARinEBUnit : Int {
    get { return self.minValueForOARinEBUnit_property.propval }
    set { self.minValueForOARinEBUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForPHDdisplayUnit
  //····················································································································

  final let minValueForPHDdisplayUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForPHDdisplayUnit_toDefaultValue () {
    self.minValueForPHDdisplayUnit = 90
  }

  //····················································································································

  final var minValueForPHDdisplayUnit : Int {
    get { return self.minValueForPHDdisplayUnit_property.propval }
    set { self.minValueForPHDdisplayUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForPHDinEBUnit
  //····················································································································

  final let minValueForPHDinEBUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForPHDinEBUnit_toDefaultValue () {
    self.minValueForPHDinEBUnit = 18000
  }

  //····················································································································

  final var minValueForPHDinEBUnit : Int {
    get { return self.minValueForPHDinEBUnit_property.propval }
    set { self.minValueForPHDinEBUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForBoardLimitWidthDisplayUnit
  //····················································································································

  final let minValueForBoardLimitWidthDisplayUnit_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForBoardLimitWidthDisplayUnit_toDefaultValue () {
    self.minValueForBoardLimitWidthDisplayUnit = 90000
  }

  //····················································································································

  final var minValueForBoardLimitWidthDisplayUnit : Int {
    get { return self.minValueForBoardLimitWidthDisplayUnit_property.propval }
    set { self.minValueForBoardLimitWidthDisplayUnit_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: minValueForBoardLimitWidth
  //····················································································································

  final let minValueForBoardLimitWidth_property : EBStoredProperty_Int

  //····················································································································

  final func reset_minValueForBoardLimitWidth_toDefaultValue () {
    self.minValueForBoardLimitWidth = 90000
  }

  //····················································································································

  final var minValueForBoardLimitWidth : Int {
    get { return self.minValueForBoardLimitWidth_property.propval }
    set { self.minValueForBoardLimitWidth_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: title
  //····················································································································

  final let title_property : EBStoredProperty_String

  //····················································································································

  final func reset_title_toDefaultValue () {
    self.title = ""
  }

  //····················································································································

  final var title : String {
    get { return self.title_property.propval }
    set { self.title_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: drillDataFileExtension
  //····················································································································

  final let drillDataFileExtension_property : EBStoredProperty_String

  //····················································································································

  final func reset_drillDataFileExtension_toDefaultValue () {
    self.drillDataFileExtension = "DRF"
  }

  //····················································································································

  final var drillDataFileExtension : String {
    get { return self.drillDataFileExtension_property.propval }
    set { self.drillDataFileExtension_property.setProp (newValue) }
  }

  //····················································································································
  //   To many property: fileGenerationParameterArray
  //····················································································································

  final let fileGenerationParameterArray_property = StoredArrayOf_ArtworkFileGenerationParameters (usedForSignature: true, key: "fileGenerationParameterArray")

  //····················································································································

  //····················································································································

  final var fileGenerationParameterArray : EBReferenceArray <ArtworkFileGenerationParameters> {
    get { return self.fileGenerationParameterArray_property.propval }
    set { self.fileGenerationParameterArray_property.setProp (newValue) }
  }

  //····················································································································
  //   Transient property: hasInnerElements
  //····················································································································

  final let hasInnerElements_property = EBTransientProperty_Bool ()

  //····················································································································

  final var hasInnerElements : Bool? {
    return self.hasInnerElements_property.optionalValue
  }

  //····················································································································
  //   Transient property: hasSixLayers
  //····················································································································

  final let hasSixLayers_property = EBTransientProperty_Bool ()

  //····················································································································

  final var hasSixLayers : Bool? {
    return self.hasSixLayers_property.optionalValue
  }

  //····················································································································
  //   Transient property: hasDataWarning
  //····················································································································

  final let hasDataWarning_property = EBTransientProperty_Bool ()

  //····················································································································

  final var hasDataWarning : Bool? {
    return self.hasDataWarning_property.optionalValue
  }

  //····················································································································
  //   Transient property: emptyDrillFileExtension
  //····················································································································

  final let emptyDrillFileExtension_property = EBTransientProperty_Bool ()

  //····················································································································

  final var emptyDrillFileExtension : Bool? {
    return self.emptyDrillFileExtension_property.optionalValue
  }

  //····················································································································
  //   Transient property: signatureForERCChecking
  //····················································································································

  final let signatureForERCChecking_property = EBTransientProperty_UInt32 ()

  //····················································································································

  final var signatureForERCChecking : UInt32? {
    return self.signatureForERCChecking_property.optionalValue
  }

  //····················································································································
  //    init
  //····················································································································

  required init (_ inUndoManager : UndoManager?) {
    self.layerConfiguration_property = EBStoredProperty_LayerConfiguration (defaultValue: LayerConfiguration.twoLayers, undoManager: inUndoManager, key: "layerConfiguration")
    self.selectedTab_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "selectedTab")
    self.comments_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "comments")
    self.minPPTPTTTWdisplayUnit_property = EBStoredProperty_Int (defaultValue: 90, undoManager: inUndoManager, key: "minPPTPTTTWdisplayUnit")
    self.minPPTPTTTW_property = EBStoredProperty_Int (defaultValue: 18000, undoManager: inUndoManager, key: "minPPTPTTTW")
    self.minValueForOARdisplayUnit_property = EBStoredProperty_Int (defaultValue: 90, undoManager: inUndoManager, key: "minValueForOARdisplayUnit")
    self.minValueForOARinEBUnit_property = EBStoredProperty_Int (defaultValue: 18000, undoManager: inUndoManager, key: "minValueForOARinEBUnit")
    self.minValueForPHDdisplayUnit_property = EBStoredProperty_Int (defaultValue: 90, undoManager: inUndoManager, key: "minValueForPHDdisplayUnit")
    self.minValueForPHDinEBUnit_property = EBStoredProperty_Int (defaultValue: 18000, undoManager: inUndoManager, key: "minValueForPHDinEBUnit")
    self.minValueForBoardLimitWidthDisplayUnit_property = EBStoredProperty_Int (defaultValue: 90000, undoManager: inUndoManager, key: "minValueForBoardLimitWidthDisplayUnit")
    self.minValueForBoardLimitWidth_property = EBStoredProperty_Int (defaultValue: 90000, undoManager: inUndoManager, key: "minValueForBoardLimitWidth")
    self.title_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "title")
    self.drillDataFileExtension_property = EBStoredProperty_String (defaultValue: "DRF", undoManager: inUndoManager, key: "drillDataFileExtension")
    super.init (inUndoManager)
//    gInitSemaphore.wait ()
  //--- To many property: fileGenerationParameterArray (has opposite relationship)
    self.fileGenerationParameterArray_property.undoManager = inUndoManager
    self.fileGenerationParameterArray_property.setOppositeRelationShipFunctions (
      setter: { [weak self] inObject in if let me = self { inObject.mArtwork_property.setProp (me) } },
      resetter: { inObject in inObject.mArtwork_property.setProp (nil) }
    )
  //--- Atomic property: hasInnerElements
    self.hasInnerElements_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.layerConfiguration_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_ArtworkRoot_hasInnerElements (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.layerConfiguration_property.startsToBeObserved (by: self.hasInnerElements_property)
  //--- Atomic property: hasSixLayers
    self.hasSixLayers_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.layerConfiguration_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_ArtworkRoot_hasSixLayers (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.layerConfiguration_property.startsToBeObserved (by: self.hasSixLayers_property)
  //--- Atomic property: hasDataWarning
    self.hasDataWarning_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.fileGenerationParameterArray_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_ArtworkRoot_hasDataWarning (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.fileGenerationParameterArray_property.toMany_hasNoData_StartsToBeObserved (by: self.hasDataWarning_property)
  //--- Atomic property: emptyDrillFileExtension
    self.emptyDrillFileExtension_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.drillDataFileExtension_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_ArtworkRoot_emptyDrillFileExtension (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.drillDataFileExtension_property.startsToBeObserved (by: self.emptyDrillFileExtension_property)
  //--- Atomic property: signatureForERCChecking
    self.signatureForERCChecking_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.minPPTPTTTW_property.selection
        let s1 = unwSelf.minValueForOARinEBUnit_property.selection
        let s2 = unwSelf.minValueForBoardLimitWidth_property.selection
        let s3 = unwSelf.minValueForPHDinEBUnit_property.selection
        switch (s0, s1, s2, s3) {
        case (.single (let v0),
              .single (let v1),
              .single (let v2),
              .single (let v3)) :
          return .single (transient_ArtworkRoot_signatureForERCChecking (v0, v1, v2, v3))
        case (.multiple,
              .multiple,
              .multiple,
              .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.minPPTPTTTW_property.startsToBeObserved (by: self.signatureForERCChecking_property)
    self.minValueForOARinEBUnit_property.startsToBeObserved (by: self.signatureForERCChecking_property)
    self.minValueForBoardLimitWidth_property.startsToBeObserved (by: self.signatureForERCChecking_property)
    self.minValueForPHDinEBUnit_property.startsToBeObserved (by: self.signatureForERCChecking_property)
//    gInitSemaphore.signal ()
  //--- Install undoers and opposite setter for relationships
    self.fileGenerationParameterArray_property.setOppositeRelationShipFunctions (
      setter: { [weak self] inObject in if let me = self { inObject.mArtwork_property.setProp (me) } },
      resetter: { inObject in inObject.mArtwork_property.setProp (nil) }
    )
  //--- Register properties for handling signature
    self.comments_property.setSignatureObserver (observer: self)
    self.drillDataFileExtension_property.setSignatureObserver (observer: self)
    self.fileGenerationParameterArray_property.setSignatureObserver (observer: self)
    self.layerConfiguration_property.setSignatureObserver (observer: self)
    self.minPPTPTTTW_property.setSignatureObserver (observer: self)
    self.minValueForBoardLimitWidth_property.setSignatureObserver (observer: self)
    self.minValueForOARinEBUnit_property.setSignatureObserver (observer: self)
    self.minValueForPHDinEBUnit_property.setSignatureObserver (observer: self)
    self.title_property.setSignatureObserver (observer: self)
  //--- Extern delegates
   }
  
  //····················································································································
  //    Extern delegates
  //····················································································································


  //····················································································································
  //   computeSignature
  //····················································································································

  override func computeSignature () -> UInt32 {
    var crc = super.computeSignature ()
    crc.accumulate (u32: self.comments_property.signature ())
    crc.accumulate (u32: self.drillDataFileExtension_property.signature ())
    crc.accumulate (u32: self.fileGenerationParameterArray_property.signature ())
    crc.accumulate (u32: self.layerConfiguration_property.signature ())
    crc.accumulate (u32: self.minPPTPTTTW_property.signature ())
    crc.accumulate (u32: self.minValueForBoardLimitWidth_property.signature ())
    crc.accumulate (u32: self.minValueForOARinEBUnit_property.signature ())
    crc.accumulate (u32: self.minValueForPHDinEBUnit_property.signature ())
    crc.accumulate (u32: self.title_property.signature ())
    return crc
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

