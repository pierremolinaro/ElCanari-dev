//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutDeviceDocument {
  final func configure_documentationTableView (_ inOutlet : AutoLayoutTableView) {
//--- START OF USER ZONE 2
      //  NSPasteboard.PasteboardType.fileURL is available from 10.13
        let myFileURL =  NSPasteboard.PasteboardType (kUTTypeFileURL as String)
        inOutlet.set (
          draggedTypes: [myFileURL],
          dragFilterCallBack: { (urls : [URL]) -> Bool in
            var idx = 0
            var ok = false
            while (idx < urls.count) && !ok {
              ok = urls [idx].pathExtension == "pdf"
              idx += 1
            }
            return ok
          },
          dragConcludeCallBack: { [weak self] (urls : [URL]) in
            for sourceURL in urls {
              if let data = try? Data (contentsOf: sourceURL) {
                // NSLog ("sourceFileURL \(sourceFileURL), size \(data.count.stringWithSeparator) bytes") ;
                let doc = DeviceDocumentation (self?.undoManager)
                doc.mFileData = data
                doc.mFileName = sourceURL.path.lastPathComponent.deletingPathExtension
                self?.rootObject.mDocs_property.add (doc)
              }
            }
          }
        )
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
