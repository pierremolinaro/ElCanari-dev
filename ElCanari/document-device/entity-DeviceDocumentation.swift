//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DeviceDocumentation_mFileName : AnyObject {
  var mFileName : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DeviceDocumentation_mFileData : AnyObject {
  var mFileData : Data { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DeviceDocumentation_fileSize : AnyObject {
  var fileSize : Int? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: DeviceDocumentation
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class DeviceDocumentation : EBManagedObject,
         DeviceDocumentation_mFileName,
         DeviceDocumentation_mFileData,
         DeviceDocumentation_fileSize {

  //····················································································································
  //   Atomic property: mFileName
  //····················································································································

  final let mFileName_property : EBStoredProperty_String

  //····················································································································

  final func reset_mFileName_toDefaultValue () {
    self.mFileName = ""
  }

  //····················································································································

  final var mFileName : String {
    get { return self.mFileName_property.propval }
    set { self.mFileName_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mFileData
  //····················································································································

  final let mFileData_property : EBStoredProperty_Data

  //····················································································································

  final func reset_mFileData_toDefaultValue () {
    self.mFileData = Data ()
  }

  //····················································································································

  final var mFileData : Data {
    get { return self.mFileData_property.propval }
    set { self.mFileData_property.setProp (newValue) }
  }

  //····················································································································
  //   Transient property: fileSize
  //····················································································································

  final let fileSize_property = EBTransientProperty_Int ()

  //····················································································································

  final var fileSize : Int? {
    switch self.fileSize_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //    init
  //····················································································································

  required init (_ inUndoManager : UndoManager?) {
    self.mFileName_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "mFileName")
    self.mFileData_property = EBStoredProperty_Data (defaultValue: Data (), undoManager: inUndoManager, key: "mFileData")
    super.init (inUndoManager)
//    gInitSemaphore.wait ()
  //--- Atomic property: fileSize
    self.fileSize_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.mFileData_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_DeviceDocumentation_fileSize (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.mFileData_property.startsToBeObserved (by: self.fileSize_property)
//    gInitSemaphore.signal ()
  //--- Install undoers and opposite setter for relationships
  //--- Register properties for handling signature
    self.mFileData_property.setSignatureObserver (observer: self)
    self.mFileName_property.setSignatureObserver (observer: self)
  //--- Extern delegates
   }
  
  //····················································································································
  //    Extern delegates
  //····················································································································


  //····················································································································
  //   computeSignature
  //····················································································································

  override func computeSignature () -> UInt32 {
    var crc = super.computeSignature ()
    crc.accumulate (u32: self.mFileData_property.signature ())
    crc.accumulate (u32: self.mFileName_property.signature ())
    return crc
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

