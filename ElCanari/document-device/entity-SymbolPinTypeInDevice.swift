//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mPinX : AnyObject {
  var mPinX : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mPinY : AnyObject {
  var mPinY : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mXName : AnyObject {
  var mXName : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mYName : AnyObject {
  var mYName : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mName : AnyObject {
  var mName : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mNameHorizontalAlignment : AnyObject {
  var mNameHorizontalAlignment : HorizontalAlignment { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mPinNameIsDisplayedInSchematics : AnyObject {
  var mPinNameIsDisplayedInSchematics : Bool { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mXNumber : AnyObject {
  var mXNumber : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mYNumber : AnyObject {
  var mYNumber : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_mNumberHorizontalAlignment : AnyObject {
  var mNumberHorizontalAlignment : HorizontalAlignment { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol SymbolPinTypeInDevice_nameShape : AnyObject {
  var nameShape : EBShape? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: SymbolPinTypeInDevice
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class SymbolPinTypeInDevice : EBManagedObject,
         SymbolPinTypeInDevice_mPinX,
         SymbolPinTypeInDevice_mPinY,
         SymbolPinTypeInDevice_mXName,
         SymbolPinTypeInDevice_mYName,
         SymbolPinTypeInDevice_mName,
         SymbolPinTypeInDevice_mNameHorizontalAlignment,
         SymbolPinTypeInDevice_mPinNameIsDisplayedInSchematics,
         SymbolPinTypeInDevice_mXNumber,
         SymbolPinTypeInDevice_mYNumber,
         SymbolPinTypeInDevice_mNumberHorizontalAlignment,
         SymbolPinTypeInDevice_nameShape {

  //····················································································································
  //   Atomic property: mPinX
  //····················································································································

  final let mPinX_property : EBStoredProperty_Int

  //····················································································································

  final var mPinX : Int {
    get { return self.mPinX_property.propval }
    set { self.mPinX_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mPinY
  //····················································································································

  final let mPinY_property : EBStoredProperty_Int

  //····················································································································

  final var mPinY : Int {
    get { return self.mPinY_property.propval }
    set { self.mPinY_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mXName
  //····················································································································

  final let mXName_property : EBStoredProperty_Int

  //····················································································································

  final var mXName : Int {
    get { return self.mXName_property.propval }
    set { self.mXName_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mYName
  //····················································································································

  final let mYName_property : EBStoredProperty_Int

  //····················································································································

  final var mYName : Int {
    get { return self.mYName_property.propval }
    set { self.mYName_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mName
  //····················································································································

  final let mName_property : EBStoredProperty_String

  //····················································································································

  final var mName : String {
    get { return self.mName_property.propval }
    set { self.mName_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mNameHorizontalAlignment
  //····················································································································

  final let mNameHorizontalAlignment_property : EBStoredProperty_HorizontalAlignment

  //····················································································································

  final var mNameHorizontalAlignment : HorizontalAlignment {
    get { return self.mNameHorizontalAlignment_property.propval }
    set { self.mNameHorizontalAlignment_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mPinNameIsDisplayedInSchematics
  //····················································································································

  final let mPinNameIsDisplayedInSchematics_property : EBStoredProperty_Bool

  //····················································································································

  final var mPinNameIsDisplayedInSchematics : Bool {
    get { return self.mPinNameIsDisplayedInSchematics_property.propval }
    set { self.mPinNameIsDisplayedInSchematics_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mXNumber
  //····················································································································

  final let mXNumber_property : EBStoredProperty_Int

  //····················································································································

  final var mXNumber : Int {
    get { return self.mXNumber_property.propval }
    set { self.mXNumber_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mYNumber
  //····················································································································

  final let mYNumber_property : EBStoredProperty_Int

  //····················································································································

  final var mYNumber : Int {
    get { return self.mYNumber_property.propval }
    set { self.mYNumber_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mNumberHorizontalAlignment
  //····················································································································

  final let mNumberHorizontalAlignment_property : EBStoredProperty_HorizontalAlignment

  //····················································································································

  final var mNumberHorizontalAlignment : HorizontalAlignment {
    get { return self.mNumberHorizontalAlignment_property.propval }
    set { self.mNumberHorizontalAlignment_property.setProp (newValue) }
  }

  //····················································································································
  //   To many property: mInstances
  //····················································································································

  final let mInstances_property = StoredArrayOf_SymbolPinInstanceInDevice (usedForSignature: false, key: "mInstances")

  //····················································································································

  final var mInstances : EBReferenceArray <SymbolPinInstanceInDevice> {
    get { return self.mInstances_property.propval }
    set { self.mInstances_property.setProp (newValue) }
  }

  //····················································································································
  //   Transient property: nameShape
  //····················································································································

  final let nameShape_property = EBTransientProperty_EBShape ()

  //····················································································································

  final var nameShape : EBShape? {
    return self.nameShape_property.optionalValue
  }

  //····················································································································
  //    init
  //····················································································································

  required init (_ inUndoManager : UndoManager?) {
    self.mPinX_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mPinX")
    self.mPinY_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mPinY")
    self.mXName_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mXName")
    self.mYName_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mYName")
    self.mName_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "mName")
    self.mNameHorizontalAlignment_property = EBStoredProperty_HorizontalAlignment (defaultValue: HorizontalAlignment.center, undoManager: inUndoManager, key: "mNameHorizontalAlignment")
    self.mPinNameIsDisplayedInSchematics_property = EBStoredProperty_Bool (defaultValue: true, undoManager: inUndoManager, key: "mPinNameIsDisplayedInSchematics")
    self.mXNumber_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mXNumber")
    self.mYNumber_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "mYNumber")
    self.mNumberHorizontalAlignment_property = EBStoredProperty_HorizontalAlignment (defaultValue: HorizontalAlignment.center, undoManager: inUndoManager, key: "mNumberHorizontalAlignment")
    super.init (inUndoManager)
  //--- To many property: mInstances (has opposite relationship)
    self.mInstances_property.undoManager = inUndoManager
    self.mInstances_property.setOppositeRelationShipFunctions (
      setter: { [weak self] inObject in if let me = self { inObject.mType_property.setProp (me) } },
      resetter: { inObject in inObject.mType_property.setProp (nil) }
    )
  //--- Atomic property: nameShape
    self.nameShape_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.mXName_property.selection
        let s1 = unwSelf.mYName_property.selection
        let s2 = unwSelf.mName_property.selection
        let s3 = unwSelf.mNameHorizontalAlignment_property.selection
        let s4 = unwSelf.mPinNameIsDisplayedInSchematics_property.selection
        let s5 = preferences_pinNameFont_property.selection
        switch (s0, s1, s2, s3, s4, s5) {
        case (.single (let v0),
              .single (let v1),
              .single (let v2),
              .single (let v3),
              .single (let v4),
              .single (let v5)) :
          return .single (transient_SymbolPinTypeInDevice_nameShape (v0, v1, v2, v3, v4, v5))
        case (.multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple,
              .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.mXName_property.startsToBeObserved (by: self.nameShape_property)
    self.mYName_property.startsToBeObserved (by: self.nameShape_property)
    self.mName_property.startsToBeObserved (by: self.nameShape_property)
    self.mNameHorizontalAlignment_property.startsToBeObserved (by: self.nameShape_property)
    self.mPinNameIsDisplayedInSchematics_property.startsToBeObserved (by: self.nameShape_property)
    preferences_pinNameFont_property.startsToBeObserved (by: self.nameShape_property)
  //--- Install undoers and opposite setter for relationships
    self.mInstances_property.setOppositeRelationShipFunctions (
      setter: { [weak self] inObject in if let me = self { inObject.mType_property.setProp (me) } },
      resetter: { inObject in inObject.mType_property.setProp (nil) }
    )
  //--- Register properties for handling signature
    self.mName_property.setSignatureObserver (observer: self)
    self.mNameHorizontalAlignment_property.setSignatureObserver (observer: self)
    self.mNumberHorizontalAlignment_property.setSignatureObserver (observer: self)
    self.mPinNameIsDisplayedInSchematics_property.setSignatureObserver (observer: self)
    self.mPinX_property.setSignatureObserver (observer: self)
    self.mPinY_property.setSignatureObserver (observer: self)
    self.mXName_property.setSignatureObserver (observer: self)
    self.mXNumber_property.setSignatureObserver (observer: self)
    self.mYName_property.setSignatureObserver (observer: self)
    self.mYNumber_property.setSignatureObserver (observer: self)
  //--- Extern delegates
   }
  
  //····················································································································
  //    Extern delegates
  //····················································································································


  //····················································································································
  //   computeSignature
  //····················································································································

  override func computeSignature () -> UInt32 {
    var crc = super.computeSignature ()
    crc.accumulate (u32: self.mName_property.signature ())
    crc.accumulate (u32: self.mNameHorizontalAlignment_property.signature ())
    crc.accumulate (u32: self.mNumberHorizontalAlignment_property.signature ())
    crc.accumulate (u32: self.mPinNameIsDisplayedInSchematics_property.signature ())
    crc.accumulate (u32: self.mPinX_property.signature ())
    crc.accumulate (u32: self.mPinY_property.signature ())
    crc.accumulate (u32: self.mXName_property.signature ())
    crc.accumulate (u32: self.mXNumber_property.signature ())
    crc.accumulate (u32: self.mYName_property.signature ())
    crc.accumulate (u32: self.mYNumber_property.signature ())
    return crc
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

