//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//--------------------------------------------------------------------------------------------------

@MainActor func transient_DeviceRoot_inconsistentSymbolNameSetMessage (
       _ self_mSymbolInstances_symbolQualifiedName : [SymbolInstanceInDevice_symbolQualifiedName],
       _ self_mSymbolInstances_pinSymbolQualifiedNames : [SymbolInstanceInDevice_pinSymbolQualifiedNames]
) -> String {
//--- START OF USER ZONE 2
        var message = [String] ()
      //--- Check for unicity of symbol names
        var duplicationDictionary = [String : Int] ()
        for qn in self_mSymbolInstances_symbolQualifiedName {
          if let qualifiedName = qn.symbolQualifiedName {
            duplicationDictionary [qualifiedName] = duplicationDictionary [qualifiedName, default: 0] + 1
          }
        }
        for (qualifiedName, n) in duplicationDictionary {
          if n > 1 {
            message.append ("\(n) symbols with the same \"\(qualifiedName)\" name")
          }
        }
      //--- Check for unicity of symbol pin names
        duplicationDictionary.removeAll ()
        for symbol in self_mSymbolInstances_pinSymbolQualifiedNames {
          if let pinArray : StringArray = symbol.pinSymbolQualifiedNames {
            for qualifiedPinName in pinArray {
              duplicationDictionary [qualifiedPinName] = duplicationDictionary [qualifiedPinName, default: 0] + 1
            }
          }
        }
        for (qualifiedPinName, n) in duplicationDictionary {
          if n > 1 {
            message.append ("\(n) pins with the same \"\(qualifiedPinName)\" name (assign a symbol name)")
          }
        }
      //---
        return message.joined (separator: "\n")
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————
