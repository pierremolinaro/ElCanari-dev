
import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct FontCharacterSegment : Hashable {

  let x1 : Int
  let y1 : Int
  let x2 : Int
  let y2 : Int

  //····················································································································

  init (x1 inX1 : Int, y1 inY1 : Int, x2 inX2 : Int, y2 inY2 : Int) {
    x1 = inX1
    y1 = inY1
    x2 = inX2
    y2 = inY2
  }

  //····················································································································

  init () {
    x1 = 0
    y1 = 0
    x2 = 0
    y2 = 0
  }

  //····················································································································

//  static func == (lhs: FontCharacterSegment, rhs: FontCharacterSegment) -> Bool {
//    return (lhs.x1 == rhs.x1) &&  (lhs.y1 == rhs.y1) &&  (lhs.x2 == rhs.x2) &&  (lhs.y2 == rhs.y2)
//  }

  //····················································································································
  //  Hashable Protocol
  //····················································································································

//   func hash (into hasher: inout Hasher) {
//    self.x1.hash (into: &hasher)
//    self.y1.hash (into: &hasher)
//    self.x2.hash (into: &hasher)
//    self.y2.hash (into: &hasher)
//  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//class FontCharacterSegment : EBObjcBaseObject {
//
//  let x1 : Int
//  let y1 : Int
//  let x2 : Int
//  let y2 : Int
//
//  //····················································································································
//
//  init (x1 inX1 : Int, y1 inY1 : Int, x2 inX2 : Int, y2 inY2 : Int) {
//    x1 = inX1
//    y1 = inY1
//    x2 = inX2
//    y2 = inY2
//    super.init ()
//  }
//
//  //····················································································································
//
//  override init () {
//    x1 = 0
//    y1 = 0
//    x2 = 0
//    y2 = 0
//    super.init ()
//  }
//
//  //····················································································································
//
////  static func == (lhs: FontCharacterSegment, rhs: FontCharacterSegment) -> Bool {
////    return (lhs.x1 == rhs.x1) &&  (lhs.y1 == rhs.y1) &&  (lhs.x2 == rhs.x2) &&  (lhs.y2 == rhs.y2)
////  }
//
//  //····················································································································
//  //  Hashable Protocol
//  //····················································································································
//
////   func hash (into hasher: inout Hasher) {
////    self.x1.hash (into: &hasher)
////    self.y1.hash (into: &hasher)
////    self.x2.hash (into: &hasher)
////    self.y2.hash (into: &hasher)
////  }
//
//  //····················································································································
//
//}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

