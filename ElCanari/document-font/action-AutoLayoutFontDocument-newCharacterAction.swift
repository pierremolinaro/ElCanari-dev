//--- START OF USER ZONE 1


//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutFontDocument {
  @objc func newCharacterAction (_ inSender : NSObject?) {
//--- START OF USER ZONE 2
    if let window = self.windowForSheet {
      let panel = NSPanel (
        contentRect: NSRect (x: 0, y: 0, width: 500, height: 400),
        styleMask: [.titled],
        backing: .buffered,
        defer: false
      )
      panel.hasShadow = true
      let okButton = AutoLayoutSheetDefaultOkButton (
        title: "Ok",
        size: .regular,
        sheet: panel
      )
      let mainView = AutoLayoutHorizontalStackView ().set (margins: 12)
      let leftColumn = AutoLayoutVerticalStackView ()
      _ = leftColumn.appendFlexibleSpace ()
      _ = leftColumn.appendView (AutoLayoutApplicationImage ())
      _ = leftColumn.appendFlexibleSpace ()
      _ = mainView.appendView (leftColumn)
    //  mainView.appendViewSurroundedByFlexibleSpaces (AutoLayoutApplicationImage ())
      let rightColumn = AutoLayoutVerticalStackView ()
      let title = AutoLayoutStaticLabel (title: "Select New Character:", bold: false, size: .regular, alignment: .left)
      _ = rightColumn.appendView (title)
      let newCharacterView = AutoLayoutCanariCharacterView (okButton: okButton)
      _ = rightColumn.appendView (newCharacterView)
      let bottomItems = AutoLayoutHorizontalStackView ()
      _ = bottomItems.appendView (AutoLayoutSheetCancelButton (title: "Cancel", size: .regular))
      _ = bottomItems.appendViewPreceededByFlexibleSpace (okButton)
      _ = rightColumn.appendView (bottomItems)
      _ = mainView.appendView (rightColumn)
      panel.contentView = AutoLayoutWindowContentView (view: mainView)
    //--- Populate table view
      var implementedCharacterSet = Set <Int> ()
      for character in rootObject.characters_property.propval.values {
        implementedCharacterSet.insert (character.codePoint)
      }
      newCharacterView.setImplementedCharacterSet (implementedCharacterSet)
    //--- Display sheet
      window.beginSheet (panel) { (response : NSApplication.ModalResponse) in
        if response == NSApplication.ModalResponse.stop, let codePoint = newCharacterView.selectedCharacter {
          var characterSet = self.rootObject.characters_property.propval
          let newCharacter = FontCharacter (self.undoManager)
          newCharacter.codePoint = codePoint
          characterSet.append (newCharacter)
          characterSet.sort {$0.codePoint < $1.codePoint}
          self.rootObject.characters_property.setProp (characterSet)
          self.rootObject.currentCharacterCodePoint = codePoint
        }
      }
    }
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
