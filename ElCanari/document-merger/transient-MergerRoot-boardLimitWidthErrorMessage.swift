//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_MergerRoot_boardLimitWidthErrorMessage (
       _ self_boardLimitWidth : Int,                   
       _ self_boardModels_modelLimitWidth : [BoardModel_modelLimitWidth]
) -> String {
//--- START OF USER ZONE 2
    if self_boardModels_modelLimitWidth.isEmpty {
      return ""
    }else{
      var maxOfModelLimitWidth = 0
      for model in self_boardModels_modelLimitWidth {
        maxOfModelLimitWidth = max (maxOfModelLimitWidth, model.modelLimitWidth)
      }
      if maxOfModelLimitWidth <= self_boardLimitWidth {
        return ""
      }else{
        return "Board width should be greater of equal to model limit widths"
      }
    }
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
