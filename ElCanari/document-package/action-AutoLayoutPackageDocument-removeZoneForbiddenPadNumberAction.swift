//--- START OF USER ZONE 1


//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutPackageDocument {
  @objc func removeZoneForbiddenPadNumberAction (_ sender : NSObject?) {
//--- START OF USER ZONE 2
    if self.mPackageZoneSelectionController.selectedArray.count == 1,
           let selectedItemTitle = self.mZoneForbiddenPadNumberTableView?.selectedItemTitle {
      let selectedZone = self.mPackageZoneSelectionController.selectedArray [0]
      for f in selectedZone.forbiddenPadNumbers.values {
        if selectedItemTitle == "\(f.padNumber)" {
          selectedZone.forbiddenPadNumbers_property.remove (f)
        }
      }
    //---- Adjust pad number
      var pads = [PackagePad] ()
      for candidatePad in self.rootObject.packagePads.values {
        if candidatePad.zone === selectedZone {
          pads.append (candidatePad)
        }
      }
      pads.sort { $0.padNumber < $1.padNumber }
      var forbiddenPadNumberSet = Set <Int> ()
      for forbiddenPadNumber in selectedZone.forbiddenPadNumbers.values {
        forbiddenPadNumberSet.insert (forbiddenPadNumber.padNumber)
      }
      var newPadNumber = 1
      for pad in pads {
        while forbiddenPadNumberSet.contains (newPadNumber) {
          newPadNumber += 1
        }
        pad.padNumber = newPadNumber
        newPadNumber += 1
      }
    }
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
