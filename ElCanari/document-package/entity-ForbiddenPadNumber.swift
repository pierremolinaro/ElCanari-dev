//--------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//--------------------------------------------------------------------------------------------------

import AppKit

//--------------------------------------------------------------------------------------------------

@MainActor protocol ForbiddenPadNumber_padNumber : AnyObject {
  var padNumber : Int { get }
}

//--------------------------------------------------------------------------------------------------
//    Entity: ForbiddenPadNumber
//--------------------------------------------------------------------------------------------------

final class ForbiddenPadNumber : EBManagedObject,
         ForbiddenPadNumber_padNumber {

  //------------------------------------------------------------------------------------------------
  //   Atomic property: padNumber
  //------------------------------------------------------------------------------------------------

  final let padNumber_property : EBStoredProperty_Int

  //------------------------------------------------------------------------------------------------

  final var padNumber : Int {
    get { return self.padNumber_property.propval }
    set { self.padNumber_property.setProp (newValue) }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //    init
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  required init (_ inUndoManager : UndoManager?) {
    self.padNumber_property = EBStoredProperty_Int (defaultValue: 0, undoManager: inUndoManager, key: "padNumber")
    super.init (inUndoManager)
  //--- Install undoers and opposite setter for relationships
  //--- Register properties for handling signature
    self.padNumber_property.setSignatureObserver (observer: self)
  //--- Extern delegates
   }
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   accumulateProperties
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func accumulateProperties (into ioArray : inout [AnyObject]) {
    super.accumulateProperties (into: &ioArray)
    ioArray.append (self.padNumber_property)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //    Extern delegates
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   computeSignature
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func computeSignature () -> UInt32 {
    var crc = super.computeSignature ()
    crc.accumulate (u32: self.padNumber_property.signature ())
    return crc
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//--------------------------------------------------------------------------------------------------

