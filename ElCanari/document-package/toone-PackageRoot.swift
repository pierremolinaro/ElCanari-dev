//--------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//--------------------------------------------------------------------------------------------------

import AppKit

//--------------------------------------------------------------------------------------------------
//    ReadOnlyObject_PackageRoot
//--------------------------------------------------------------------------------------------------

class ReadOnlyObject_PackageRoot : EBReadOnlyAbstractObjectProperty <PackageRoot> {

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func notifyModelDidChangeFrom (oldValue inOldValue : PackageRoot?) {
    super.notifyModelDidChangeFrom (oldValue: inOldValue)
  //--- Remove observers from removed objects
    if let oldValue = inOldValue {
      oldValue.selectedPageIndex_property.stopsBeingObserved (by: self.selectedPageIndex_property) // Stored property
      oldValue.selectedInspector_property.stopsBeingObserved (by: self.selectedInspector_property) // Stored property
      oldValue.comments_property.stopsBeingObserved (by: self.comments_property) // Stored property
      oldValue.program_property.stopsBeingObserved (by: self.program_property) // Stored property
      oldValue.horizontalFlip_property.stopsBeingObserved (by: self.horizontalFlip_property) // Stored property
      oldValue.verticalFlip_property.stopsBeingObserved (by: self.verticalFlip_property) // Stored property
      oldValue.gridStyle_property.stopsBeingObserved (by: self.gridStyle_property) // Stored property
      oldValue.gridStep_property.stopsBeingObserved (by: self.gridStep_property) // Stored property
      oldValue.gridStepUnit_property.stopsBeingObserved (by: self.gridStepUnit_property) // Stored property
      oldValue.gridDisplayFactor_property.stopsBeingObserved (by: self.gridDisplayFactor_property) // Stored property
      oldValue.zoom_property.stopsBeingObserved (by: self.zoom_property) // Stored property
      oldValue.mModelImageOpacity_property.stopsBeingObserved (by: self.mModelImageOpacity_property) // Stored property
      oldValue.mModelImagePageHorizontalFlip_property.stopsBeingObserved (by: self.mModelImagePageHorizontalFlip_property) // Stored property
      oldValue.mModelImagePageVerticalFlip_property.stopsBeingObserved (by: self.mModelImagePageVerticalFlip_property) // Stored property
      oldValue.mModelImagePageGridStyle_property.stopsBeingObserved (by: self.mModelImagePageGridStyle_property) // Stored property
      oldValue.mModelImagePageGridStep_property.stopsBeingObserved (by: self.mModelImagePageGridStep_property) // Stored property
      oldValue.mModelImagePageGridStepUnit_property.stopsBeingObserved (by: self.mModelImagePageGridStepUnit_property) // Stored property
      oldValue.mModelImagePageGridDisplayFactor_property.stopsBeingObserved (by: self.mModelImagePageGridDisplayFactor_property) // Stored property
      oldValue.mModelImagePageZoom_property.stopsBeingObserved (by: self.mModelImagePageZoom_property) // Stored property
      oldValue.mModelImagePageXPlacardUnit_property.stopsBeingObserved (by: self.mModelImagePageXPlacardUnit_property) // Stored property
      oldValue.mModelImagePageYPlacardUnit_property.stopsBeingObserved (by: self.mModelImagePageYPlacardUnit_property) // Stored property
      oldValue.mModelImageSecondPointXUnit_property.stopsBeingObserved (by: self.mModelImageSecondPointXUnit_property) // Stored property
      oldValue.mModelImageSecondPointYUnit_property.stopsBeingObserved (by: self.mModelImageSecondPointYUnit_property) // Stored property
      oldValue.mModelImageData_property.stopsBeingObserved (by: self.mModelImageData_property) // Stored property
      oldValue.mModelImageFirstPointXOnLock_property.stopsBeingObserved (by: self.mModelImageFirstPointXOnLock_property) // Stored property
      oldValue.mModelImageFirstPointYOnLock_property.stopsBeingObserved (by: self.mModelImageFirstPointYOnLock_property) // Stored property
      oldValue.mModelImagePointsDxOnLock_property.stopsBeingObserved (by: self.mModelImagePointsDxOnLock_property) // Stored property
      oldValue.mModelImagePointsDyOnLock_property.stopsBeingObserved (by: self.mModelImagePointsDyOnLock_property) // Stored property
      oldValue.mModelImageScale_property.stopsBeingObserved (by: self.mModelImageScale_property) // Stored property
      oldValue.mModelImageRotationInRadians_property.stopsBeingObserved (by: self.mModelImageRotationInRadians_property) // Stored property
      oldValue.mModelPointsCircleRadius_property.stopsBeingObserved (by: self.mModelPointsCircleRadius_property) // Stored property
      oldValue.mPointsAreLocked_property.stopsBeingObserved (by: self.mPointsAreLocked_property) // Stored property
      oldValue.mDimensionUnitFirstModelPointX_property.stopsBeingObserved (by: self.mDimensionUnitFirstModelPointX_property) // Stored property
      oldValue.mDimensionUnitFirstModelPointY_property.stopsBeingObserved (by: self.mDimensionUnitFirstModelPointY_property) // Stored property
      oldValue.mDimensionUnitSecondModelPointDx_property.stopsBeingObserved (by: self.mDimensionUnitSecondModelPointDx_property) // Stored property
      oldValue.mDimensionUnitSecondModelPointDy_property.stopsBeingObserved (by: self.mDimensionUnitSecondModelPointDy_property) // Stored property
      oldValue.knobSizeMultpliedByTen_property.stopsBeingObserved (by: self.knobSizeMultpliedByTen_property) // Stored property
      oldValue.padNumbering_property.stopsBeingObserved (by: self.padNumbering_property) // Stored property
      oldValue.counterClockNumberingStartAngle_property.stopsBeingObserved (by: self.counterClockNumberingStartAngle_property) // Stored property
      oldValue.xPlacardUnit_property.stopsBeingObserved (by: self.xPlacardUnit_property) // Stored property
      oldValue.yPlacardUnit_property.stopsBeingObserved (by: self.yPlacardUnit_property) // Stored property
      oldValue.freePadNumbering_property.stopsBeingObserved (by: self.freePadNumbering_property) // Transient property
      oldValue.counterClockNumbering_property.stopsBeingObserved (by: self.counterClockNumbering_property) // Transient property
      oldValue.gridStepMultipliedByDisplayFactor_property.stopsBeingObserved (by: self.gridStepMultipliedByDisplayFactor_property) // Transient property
      oldValue.secondPointX_property.stopsBeingObserved (by: self.secondPointX_property) // Transient property
      oldValue.secondPointY_property.stopsBeingObserved (by: self.secondPointY_property) // Transient property
      oldValue.modelImageSizeString_property.stopsBeingObserved (by: self.modelImageSizeString_property) // Transient property
      oldValue.hasModelImage_property.stopsBeingObserved (by: self.hasModelImage_property) // Transient property
      oldValue.lockImageView_property.stopsBeingObserved (by: self.lockImageView_property) // Transient property
      oldValue.padNumberDisplay_property.stopsBeingObserved (by: self.padNumberDisplay_property) // Transient property
      oldValue.backgroundImagePageBackgroundDisplay_property.stopsBeingObserved (by: self.backgroundImagePageBackgroundDisplay_property) // Transient property
      oldValue.masterPadObjectIndexArray_property.stopsBeingObserved (by: self.masterPadObjectIndexArray_property) // Transient property
      oldValue.issues_property.stopsBeingObserved (by: self.issues_property) // Transient property
      if let relay = self.mObserversOf_mModelImageObjects { // to Many
        oldValue.mModelImageObjects_property.stopsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageObjects { // to Many
        oldValue.packageObjects_property.stopsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packagePads { // to Many
        oldValue.packagePads_property.stopsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageSlavePads { // to Many
        oldValue.packageSlavePads_property.stopsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageZones { // to Many
        oldValue.packageZones_property.stopsBeingObserved (by: relay)
      }
    }
  //--- Add observers to added objects
    if let newValue = self.mWeakInternalValue {
      newValue.selectedPageIndex_property.startsBeingObserved (by: self.selectedPageIndex_property) // Stored property
      newValue.selectedInspector_property.startsBeingObserved (by: self.selectedInspector_property) // Stored property
      newValue.comments_property.startsBeingObserved (by: self.comments_property) // Stored property
      newValue.program_property.startsBeingObserved (by: self.program_property) // Stored property
      newValue.horizontalFlip_property.startsBeingObserved (by: self.horizontalFlip_property) // Stored property
      newValue.verticalFlip_property.startsBeingObserved (by: self.verticalFlip_property) // Stored property
      newValue.gridStyle_property.startsBeingObserved (by: self.gridStyle_property) // Stored property
      newValue.gridStep_property.startsBeingObserved (by: self.gridStep_property) // Stored property
      newValue.gridStepUnit_property.startsBeingObserved (by: self.gridStepUnit_property) // Stored property
      newValue.gridDisplayFactor_property.startsBeingObserved (by: self.gridDisplayFactor_property) // Stored property
      newValue.zoom_property.startsBeingObserved (by: self.zoom_property) // Stored property
      newValue.mModelImageOpacity_property.startsBeingObserved (by: self.mModelImageOpacity_property) // Stored property
      newValue.mModelImagePageHorizontalFlip_property.startsBeingObserved (by: self.mModelImagePageHorizontalFlip_property) // Stored property
      newValue.mModelImagePageVerticalFlip_property.startsBeingObserved (by: self.mModelImagePageVerticalFlip_property) // Stored property
      newValue.mModelImagePageGridStyle_property.startsBeingObserved (by: self.mModelImagePageGridStyle_property) // Stored property
      newValue.mModelImagePageGridStep_property.startsBeingObserved (by: self.mModelImagePageGridStep_property) // Stored property
      newValue.mModelImagePageGridStepUnit_property.startsBeingObserved (by: self.mModelImagePageGridStepUnit_property) // Stored property
      newValue.mModelImagePageGridDisplayFactor_property.startsBeingObserved (by: self.mModelImagePageGridDisplayFactor_property) // Stored property
      newValue.mModelImagePageZoom_property.startsBeingObserved (by: self.mModelImagePageZoom_property) // Stored property
      newValue.mModelImagePageXPlacardUnit_property.startsBeingObserved (by: self.mModelImagePageXPlacardUnit_property) // Stored property
      newValue.mModelImagePageYPlacardUnit_property.startsBeingObserved (by: self.mModelImagePageYPlacardUnit_property) // Stored property
      newValue.mModelImageSecondPointXUnit_property.startsBeingObserved (by: self.mModelImageSecondPointXUnit_property) // Stored property
      newValue.mModelImageSecondPointYUnit_property.startsBeingObserved (by: self.mModelImageSecondPointYUnit_property) // Stored property
      newValue.mModelImageData_property.startsBeingObserved (by: self.mModelImageData_property) // Stored property
      newValue.mModelImageFirstPointXOnLock_property.startsBeingObserved (by: self.mModelImageFirstPointXOnLock_property) // Stored property
      newValue.mModelImageFirstPointYOnLock_property.startsBeingObserved (by: self.mModelImageFirstPointYOnLock_property) // Stored property
      newValue.mModelImagePointsDxOnLock_property.startsBeingObserved (by: self.mModelImagePointsDxOnLock_property) // Stored property
      newValue.mModelImagePointsDyOnLock_property.startsBeingObserved (by: self.mModelImagePointsDyOnLock_property) // Stored property
      newValue.mModelImageScale_property.startsBeingObserved (by: self.mModelImageScale_property) // Stored property
      newValue.mModelImageRotationInRadians_property.startsBeingObserved (by: self.mModelImageRotationInRadians_property) // Stored property
      newValue.mModelPointsCircleRadius_property.startsBeingObserved (by: self.mModelPointsCircleRadius_property) // Stored property
      newValue.mPointsAreLocked_property.startsBeingObserved (by: self.mPointsAreLocked_property) // Stored property
      newValue.mDimensionUnitFirstModelPointX_property.startsBeingObserved (by: self.mDimensionUnitFirstModelPointX_property) // Stored property
      newValue.mDimensionUnitFirstModelPointY_property.startsBeingObserved (by: self.mDimensionUnitFirstModelPointY_property) // Stored property
      newValue.mDimensionUnitSecondModelPointDx_property.startsBeingObserved (by: self.mDimensionUnitSecondModelPointDx_property) // Stored property
      newValue.mDimensionUnitSecondModelPointDy_property.startsBeingObserved (by: self.mDimensionUnitSecondModelPointDy_property) // Stored property
      newValue.knobSizeMultpliedByTen_property.startsBeingObserved (by: self.knobSizeMultpliedByTen_property) // Stored property
      newValue.padNumbering_property.startsBeingObserved (by: self.padNumbering_property) // Stored property
      newValue.counterClockNumberingStartAngle_property.startsBeingObserved (by: self.counterClockNumberingStartAngle_property) // Stored property
      newValue.xPlacardUnit_property.startsBeingObserved (by: self.xPlacardUnit_property) // Stored property
      newValue.yPlacardUnit_property.startsBeingObserved (by: self.yPlacardUnit_property) // Stored property
      newValue.freePadNumbering_property.startsBeingObserved (by: self.freePadNumbering_property) // Transient property
      newValue.counterClockNumbering_property.startsBeingObserved (by: self.counterClockNumbering_property) // Transient property
      newValue.gridStepMultipliedByDisplayFactor_property.startsBeingObserved (by: self.gridStepMultipliedByDisplayFactor_property) // Transient property
      newValue.secondPointX_property.startsBeingObserved (by: self.secondPointX_property) // Transient property
      newValue.secondPointY_property.startsBeingObserved (by: self.secondPointY_property) // Transient property
      newValue.modelImageSizeString_property.startsBeingObserved (by: self.modelImageSizeString_property) // Transient property
      newValue.hasModelImage_property.startsBeingObserved (by: self.hasModelImage_property) // Transient property
      newValue.lockImageView_property.startsBeingObserved (by: self.lockImageView_property) // Transient property
      newValue.padNumberDisplay_property.startsBeingObserved (by: self.padNumberDisplay_property) // Transient property
      newValue.backgroundImagePageBackgroundDisplay_property.startsBeingObserved (by: self.backgroundImagePageBackgroundDisplay_property) // Transient property
      newValue.masterPadObjectIndexArray_property.startsBeingObserved (by: self.masterPadObjectIndexArray_property) // Transient property
      newValue.issues_property.startsBeingObserved (by: self.issues_property) // Transient property
      if let relay = self.mObserversOf_mModelImageObjects { // to Many
        newValue.mModelImageObjects_property.startsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageObjects { // to Many
        newValue.packageObjects_property.startsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packagePads { // to Many
        newValue.packagePads_property.startsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageSlavePads { // to Many
        newValue.packageSlavePads_property.startsBeingObserved (by: relay)
      }
      if let relay = self.mObserversOf_packageZones { // to Many
        newValue.packageZones_property.startsBeingObserved (by: relay)
      }
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'selectedPageIndex' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let selectedPageIndex_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'selectedInspector' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let selectedInspector_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'comments' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let comments_property = EBTransientProperty <String?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'program' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let program_property = EBTransientProperty <String?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'horizontalFlip' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let horizontalFlip_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'verticalFlip' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let verticalFlip_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'gridStyle' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let gridStyle_property = EBTransientProperty <GridStyle?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'gridStep' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let gridStep_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'gridStepUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let gridStepUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'gridDisplayFactor' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let gridDisplayFactor_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'zoom' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let zoom_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageOpacity' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageOpacity_property = EBTransientProperty <Double?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageHorizontalFlip' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageHorizontalFlip_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageVerticalFlip' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageVerticalFlip_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageGridStyle' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageGridStyle_property = EBTransientProperty <GridStyle?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageGridStep' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageGridStep_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageGridStepUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageGridStepUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageGridDisplayFactor' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageGridDisplayFactor_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageZoom' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageZoom_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageXPlacardUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageXPlacardUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePageYPlacardUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePageYPlacardUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageSecondPointXUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageSecondPointXUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageSecondPointYUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageSecondPointYUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageData' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageData_property = EBTransientProperty <Data?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageFirstPointXOnLock' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageFirstPointXOnLock_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageFirstPointYOnLock' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageFirstPointYOnLock_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePointsDxOnLock' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePointsDxOnLock_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImagePointsDyOnLock' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImagePointsDyOnLock_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageScale' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageScale_property = EBTransientProperty <Double?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelImageRotationInRadians' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelImageRotationInRadians_property = EBTransientProperty <Double?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mModelPointsCircleRadius' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mModelPointsCircleRadius_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mPointsAreLocked' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mPointsAreLocked_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mDimensionUnitFirstModelPointX' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mDimensionUnitFirstModelPointX_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mDimensionUnitFirstModelPointY' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mDimensionUnitFirstModelPointY_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mDimensionUnitSecondModelPointDx' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mDimensionUnitSecondModelPointDx_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'mDimensionUnitSecondModelPointDy' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let mDimensionUnitSecondModelPointDy_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'knobSizeMultpliedByTen' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let knobSizeMultpliedByTen_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'padNumbering' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let padNumbering_property = EBTransientProperty <PadNumbering?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'counterClockNumberingStartAngle' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let counterClockNumberingStartAngle_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'xPlacardUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let xPlacardUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'yPlacardUnit' stored property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let yPlacardUnit_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'freePadNumbering' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let freePadNumbering_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'counterClockNumbering' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let counterClockNumbering_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'gridStepMultipliedByDisplayFactor' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let gridStepMultipliedByDisplayFactor_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'secondPointX' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let secondPointX_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'secondPointY' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let secondPointY_property = EBTransientProperty <Int?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'modelImageSizeString' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let modelImageSizeString_property = EBTransientProperty <String?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'hasModelImage' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let hasModelImage_property = EBTransientProperty <Bool?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'lockImageView' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let lockImageView_property = EBTransientProperty <NSImage?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'padNumberDisplay' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let padNumberDisplay_property = EBTransientProperty <EBShape?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'backgroundImagePageBackgroundDisplay' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let backgroundImagePageBackgroundDisplay_property = EBTransientProperty <EBShape?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'masterPadObjectIndexArray' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let masterPadObjectIndexArray_property = EBTransientProperty <IntArray?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observers of 'issues' transient property
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final let issues_property = EBTransientProperty <CanariIssueArray?> ()

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observable toMany property: mModelImageObjects
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private final var mObserversOf_mModelImageObjects : EBObservedObserver? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_mModelImageObjects_StartsBeingObserved (by inObserver : any EBObserverProtocol) {
    let relay : EBObservedObserver
    if let r = self.mObserversOf_mModelImageObjects {
      relay = r
    }else{
      relay = EBObservedObserver ()
      self.mWeakInternalValue?.mModelImageObjects_property.startsBeingObserved (by: relay)
      self.mObserversOf_mModelImageObjects = relay
    }
    relay.startsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_mModelImageObjects_StopsBeingObserved (by inObserver : any EBObserverProtocol) {
    self.mObserversOf_mModelImageObjects?.stopsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observable toMany property: packageObjects
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private final var mObserversOf_packageObjects : EBObservedObserver? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageObjects_StartsBeingObserved (by inObserver : any EBObserverProtocol) {
    let relay : EBObservedObserver
    if let r = self.mObserversOf_packageObjects {
      relay = r
    }else{
      relay = EBObservedObserver ()
      self.mWeakInternalValue?.packageObjects_property.startsBeingObserved (by: relay)
      self.mObserversOf_packageObjects = relay
    }
    relay.startsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageObjects_StopsBeingObserved (by inObserver : any EBObserverProtocol) {
    self.mObserversOf_packageObjects?.stopsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observable toMany property: packagePads
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private final var mObserversOf_packagePads : EBObservedObserver? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packagePads_StartsBeingObserved (by inObserver : any EBObserverProtocol) {
    let relay : EBObservedObserver
    if let r = self.mObserversOf_packagePads {
      relay = r
    }else{
      relay = EBObservedObserver ()
      self.mWeakInternalValue?.packagePads_property.startsBeingObserved (by: relay)
      self.mObserversOf_packagePads = relay
    }
    relay.startsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packagePads_StopsBeingObserved (by inObserver : any EBObserverProtocol) {
    self.mObserversOf_packagePads?.stopsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observable toMany property: packageSlavePads
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private final var mObserversOf_packageSlavePads : EBObservedObserver? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageSlavePads_StartsBeingObserved (by inObserver : any EBObserverProtocol) {
    let relay : EBObservedObserver
    if let r = self.mObserversOf_packageSlavePads {
      relay = r
    }else{
      relay = EBObservedObserver ()
      self.mWeakInternalValue?.packageSlavePads_property.startsBeingObserved (by: relay)
      self.mObserversOf_packageSlavePads = relay
    }
    relay.startsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageSlavePads_StopsBeingObserved (by inObserver : any EBObserverProtocol) {
    self.mObserversOf_packageSlavePads?.stopsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Observable toMany property: packageZones
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private final var mObserversOf_packageZones : EBObservedObserver? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageZones_StartsBeingObserved (by inObserver : any EBObserverProtocol) {
    let relay : EBObservedObserver
    if let r = self.mObserversOf_packageZones {
      relay = r
    }else{
      relay = EBObservedObserver ()
      self.mWeakInternalValue?.packageZones_property.startsBeingObserved (by: relay)
      self.mObserversOf_packageZones = relay
    }
    relay.startsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func toMany_packageZones_StopsBeingObserved (by inObserver : any EBObserverProtocol) {
    self.mObserversOf_packageZones?.stopsBeingObserved (by: inObserver)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   INIT
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override init () {
    super.init ()
  //--- Configure selectedPageIndex simple stored property
    self.selectedPageIndex_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.selectedPageIndex_property.optionalSelection ?? .single (nil)
    }
  //--- Configure selectedInspector simple stored property
    self.selectedInspector_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.selectedInspector_property.optionalSelection ?? .single (nil)
    }
  //--- Configure comments simple stored property
    self.comments_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.comments_property.optionalSelection ?? .single (nil)
    }
  //--- Configure program simple stored property
    self.program_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.program_property.optionalSelection ?? .single (nil)
    }
  //--- Configure horizontalFlip simple stored property
    self.horizontalFlip_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.horizontalFlip_property.optionalSelection ?? .single (nil)
    }
  //--- Configure verticalFlip simple stored property
    self.verticalFlip_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.verticalFlip_property.optionalSelection ?? .single (nil)
    }
  //--- Configure gridStyle simple stored property
    self.gridStyle_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.gridStyle_property.optionalSelection ?? .single (nil)
    }
  //--- Configure gridStep simple stored property
    self.gridStep_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.gridStep_property.optionalSelection ?? .single (nil)
    }
  //--- Configure gridStepUnit simple stored property
    self.gridStepUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.gridStepUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure gridDisplayFactor simple stored property
    self.gridDisplayFactor_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.gridDisplayFactor_property.optionalSelection ?? .single (nil)
    }
  //--- Configure zoom simple stored property
    self.zoom_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.zoom_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageOpacity simple stored property
    self.mModelImageOpacity_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageOpacity_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageHorizontalFlip simple stored property
    self.mModelImagePageHorizontalFlip_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageHorizontalFlip_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageVerticalFlip simple stored property
    self.mModelImagePageVerticalFlip_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageVerticalFlip_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageGridStyle simple stored property
    self.mModelImagePageGridStyle_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageGridStyle_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageGridStep simple stored property
    self.mModelImagePageGridStep_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageGridStep_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageGridStepUnit simple stored property
    self.mModelImagePageGridStepUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageGridStepUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageGridDisplayFactor simple stored property
    self.mModelImagePageGridDisplayFactor_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageGridDisplayFactor_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageZoom simple stored property
    self.mModelImagePageZoom_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageZoom_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageXPlacardUnit simple stored property
    self.mModelImagePageXPlacardUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageXPlacardUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePageYPlacardUnit simple stored property
    self.mModelImagePageYPlacardUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePageYPlacardUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageSecondPointXUnit simple stored property
    self.mModelImageSecondPointXUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageSecondPointXUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageSecondPointYUnit simple stored property
    self.mModelImageSecondPointYUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageSecondPointYUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageData simple stored property
    self.mModelImageData_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageData_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageFirstPointXOnLock simple stored property
    self.mModelImageFirstPointXOnLock_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageFirstPointXOnLock_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageFirstPointYOnLock simple stored property
    self.mModelImageFirstPointYOnLock_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageFirstPointYOnLock_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePointsDxOnLock simple stored property
    self.mModelImagePointsDxOnLock_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePointsDxOnLock_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImagePointsDyOnLock simple stored property
    self.mModelImagePointsDyOnLock_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImagePointsDyOnLock_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageScale simple stored property
    self.mModelImageScale_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageScale_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelImageRotationInRadians simple stored property
    self.mModelImageRotationInRadians_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelImageRotationInRadians_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mModelPointsCircleRadius simple stored property
    self.mModelPointsCircleRadius_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mModelPointsCircleRadius_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mPointsAreLocked simple stored property
    self.mPointsAreLocked_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mPointsAreLocked_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mDimensionUnitFirstModelPointX simple stored property
    self.mDimensionUnitFirstModelPointX_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mDimensionUnitFirstModelPointX_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mDimensionUnitFirstModelPointY simple stored property
    self.mDimensionUnitFirstModelPointY_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mDimensionUnitFirstModelPointY_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mDimensionUnitSecondModelPointDx simple stored property
    self.mDimensionUnitSecondModelPointDx_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mDimensionUnitSecondModelPointDx_property.optionalSelection ?? .single (nil)
    }
  //--- Configure mDimensionUnitSecondModelPointDy simple stored property
    self.mDimensionUnitSecondModelPointDy_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.mDimensionUnitSecondModelPointDy_property.optionalSelection ?? .single (nil)
    }
  //--- Configure knobSizeMultpliedByTen simple stored property
    self.knobSizeMultpliedByTen_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.knobSizeMultpliedByTen_property.optionalSelection ?? .single (nil)
    }
  //--- Configure padNumbering simple stored property
    self.padNumbering_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.padNumbering_property.optionalSelection ?? .single (nil)
    }
  //--- Configure counterClockNumberingStartAngle simple stored property
    self.counterClockNumberingStartAngle_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.counterClockNumberingStartAngle_property.optionalSelection ?? .single (nil)
    }
  //--- Configure xPlacardUnit simple stored property
    self.xPlacardUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.xPlacardUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure yPlacardUnit simple stored property
    self.yPlacardUnit_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.yPlacardUnit_property.optionalSelection ?? .single (nil)
    }
  //--- Configure freePadNumbering transient property
    self.freePadNumbering_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.freePadNumbering_property.optionalSelection ?? .single (nil)
    }
  //--- Configure counterClockNumbering transient property
    self.counterClockNumbering_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.counterClockNumbering_property.optionalSelection ?? .single (nil)
    }
  //--- Configure gridStepMultipliedByDisplayFactor transient property
    self.gridStepMultipliedByDisplayFactor_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.gridStepMultipliedByDisplayFactor_property.optionalSelection ?? .single (nil)
    }
  //--- Configure secondPointX transient property
    self.secondPointX_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.secondPointX_property.optionalSelection ?? .single (nil)
    }
  //--- Configure secondPointY transient property
    self.secondPointY_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.secondPointY_property.optionalSelection ?? .single (nil)
    }
  //--- Configure modelImageSizeString transient property
    self.modelImageSizeString_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.modelImageSizeString_property.optionalSelection ?? .single (nil)
    }
  //--- Configure hasModelImage transient property
    self.hasModelImage_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.hasModelImage_property.optionalSelection ?? .single (nil)
    }
  //--- Configure lockImageView transient property
    self.lockImageView_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.lockImageView_property.optionalSelection ?? .single (nil)
    }
  //--- Configure padNumberDisplay transient property
    self.padNumberDisplay_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.padNumberDisplay_property.optionalSelection ?? .single (nil)
    }
  //--- Configure backgroundImagePageBackgroundDisplay transient property
    self.backgroundImagePageBackgroundDisplay_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.backgroundImagePageBackgroundDisplay_property.optionalSelection ?? .single (nil)
    }
  //--- Configure masterPadObjectIndexArray transient property
    self.masterPadObjectIndexArray_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.masterPadObjectIndexArray_property.optionalSelection ?? .single (nil)
    }
  //--- Configure issues transient property
    self.issues_property.mReadModelFunction = { [weak self] in
      return self?.mWeakInternalValue?.issues_property.optionalSelection ?? .single (nil)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//--------------------------------------------------------------------------------------------------
//    StoredObject_PackageRoot
//--------------------------------------------------------------------------------------------------

final class StoredObject_PackageRoot : ReadOnlyObject_PackageRoot, EBSignatureObserverProtocol, EBDocumentStorablePropertyAndRelationshipProtocol {

 // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  init (usedForSignature inUsedForSignature : Bool, strongRef inStrongReference : Bool, key inKey : String) {
    self.mUsedForSignature = inUsedForSignature
    self.mIsStrongReference = inStrongReference
    self.mKey = inKey
    super.init ()
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private let mKey : String
  var key : String { return self.mKey }
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func initialize (fromValueDictionary inDictionary : [String : Any],
                   managedObjectArray inManagedObjectArray : [EBManagedObject]) {
    if let objectSavingIndex = inDictionary [self.mKey] as? Int {
      let object = inManagedObjectArray [objectSavingIndex] as! PackageRoot
      self.setProp (object)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func initialize (fromRange inRange : NSRange, ofData inData : Data, _ inRawObjectArray : [RawObject]) {
    if let idx = inData.base62EncodedInt (range: inRange) {
      let object = inRawObjectArray [idx].object as! PackageRoot
      self.setProp (object)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func store (inDictionary ioDictionary : inout [String : Any]) {
    if let idx = self.mWeakInternalValue?.savingIndex {
      ioDictionary [self.mKey] = idx
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func enterRelationshipObjects (intoArray ioArray : inout [EBManagedObject]) {
    if let object = self.mWeakInternalValue {
      ioArray.append (object)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func appendValueTo (data ioData : inout Data) {
    if let object = self.propval {
      ioData.append (base62Encoded: object.savingIndex)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Signature ?
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private let mUsedForSignature : Bool

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Undo manager
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  weak var undoManager : UndoManager? = nil // SOULD BE WEAK

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   Opposite relationship management
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private var mSetOppositeRelationship : Optional < (_ inManagedObject : PackageRoot) -> Void > = nil
  private var mResetOppositeRelationship : Optional < (_ inManagedObject : PackageRoot) -> Void > = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func setOppositeRelationShipFunctions (setter inSetter : @escaping (_ inManagedObject : PackageRoot) -> Void,
                                         resetter inResetter : @escaping (_ inManagedObject : PackageRoot) -> Void) {
    self.mSetOppositeRelationship = inSetter
    self.mResetOppositeRelationship = inResetter
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Model will change
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func notifyModelDidChangeFrom (oldValue inOldValue : PackageRoot?) {
  //--- Register old value in undo manager
    self.undoManager?.registerUndo (withTarget: self) { selfTarget in
      selfTarget.setProp (inOldValue) // Ok in Swift 6.2
      // MainActor.assumeIsolated { selfTarget.setProp (inOldValue) }
    }
  //---
    if let object = inOldValue {
      if self.mUsedForSignature {
        object.setSignatureObserver (observer: nil)
      }
      self.mResetOppositeRelationship? (object)
    }
  //---
    if let object = self.mWeakInternalValue {
      if self.mUsedForSignature {
        object.setSignatureObserver (observer: self)
      }
      self.mSetOppositeRelationship? (object)
    }
  //---
    super.notifyModelDidChangeFrom (oldValue: inOldValue)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Model did change
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func notifyModelDidChange () {
  //--- Notify observers
    self.observedObjectDidChange ()
    self.clearSignatureCache ()
  //---
    super.notifyModelDidChange ()
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override var selection : EBSelection < PackageRoot? > {
    if let object = self.mWeakInternalValue {
      return .single (object)
    }else{
      return .empty
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  var propval : PackageRoot? { return self.mWeakInternalValue }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   setProp
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private let mIsStrongReference : Bool
  private var mStrongInternalValue : EBManagedObject? = nil // Only used for retaining

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func setProp (_ inValue : PackageRoot?) {
    self.mWeakInternalValue = inValue
    if self.mIsStrongReference {
      self.mStrongInternalValue = inValue
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //   signature
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private weak var mSignatureObserver : (any EBSignatureObserverProtocol)? = nil // SOULD BE WEAK

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private var mSignatureCache : UInt32? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func setSignatureObserver (observer inObserver : (any EBSignatureObserverProtocol)?) {
    self.mSignatureObserver?.clearSignatureCache ()
    self.mSignatureObserver = inObserver
    inObserver?.clearSignatureCache ()
    self.clearSignatureCache ()
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func signature () -> UInt32 {
    let computedSignature : UInt32
    if let s = self.mSignatureCache {
      computedSignature = s
    }else{
      computedSignature = self.computeSignature ()
      self.mSignatureCache = computedSignature
    }
    return computedSignature
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final private func computeSignature () -> UInt32 {
    var crc : UInt32 = 0
    if let object = self.mWeakInternalValue {
      crc.accumulate (u32: object.signature ())
    }
    return crc
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  func clearSignatureCache () {
    if self.mSignatureCache != nil {
      self.mSignatureCache = nil
      self.mSignatureObserver?.clearSignatureCache ()
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//--------------------------------------------------------------------------------------------------

