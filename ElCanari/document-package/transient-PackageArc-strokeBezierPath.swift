//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_PackageArc_strokeBezierPath (
       _ self_xCenter : Int,                
       _ self_yCenter : Int,                
       _ self_radius : Int,                 
       _ self_startAngle : Int,             
       _ self_arcAngle : Int,               
       _ self_pathIsClosed : Bool,          
       _ self_startTangent : Int,           
       _ self_endTangent : Int
) -> EBBezierPath {
//--- START OF USER ZONE 2
  let center = CanariPoint (x: self_xCenter, y: self_yCenter).cocoaPoint
  let radius = canariUnitToCocoa (self_radius)
  let startTangentLength = canariUnitToCocoa (self_startTangent)
  let endTangentLength = canariUnitToCocoa (self_endTangent)
  let startAngle = CGFloat (self_startAngle) / 1000.0
  let arcAngle = CGFloat (self_arcAngle) / 1000.0
  let bp = EBBezierPath (
    arcWithTangentFromCenter: center,
    radius: radius,
    startAngleInDegrees: startAngle,
    arcAngleInDegrees: arcAngle,
    startTangentLength: startTangentLength,
    endTangentLength: endTangentLength,
    pathIsClosed: self_pathIsClosed
  )
  return bp
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
