//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_PackageSegment_selectionDisplay (
       _ self_x1 : Int,                                    
       _ self_y1 : Int,                                    
       _ self_x2 : Int,                                    
       _ self_y2 : Int,                                    
       _ self_PackageObject_knobSize : Double
) -> EBShape {
//--- START OF USER ZONE 2
  let p1 = NSPoint (x: canariUnitToCocoa (self_x1), y: canariUnitToCocoa (self_y1))
  let p2 = NSPoint (x: canariUnitToCocoa (self_x2), y: canariUnitToCocoa (self_y2))
  var bp = EBBezierPath ()
  bp.move (to: p1)
  bp.line (to: p2)
  bp.lineWidth = 0.25
  bp.lineCapStyle = .round
  var shape = EBShape ()
  shape.add (stroke: [bp], NSColor.cyan)
  shape.add (knobAt:  p1, knobIndex: PACKAGE_SEGMENT_ENDPOINT_1, .diamond, CGFloat (self_PackageObject_knobSize))
  shape.add (knobAt:  p2, knobIndex: PACKAGE_SEGMENT_ENDPOINT_2, .diamond, CGFloat (self_PackageObject_knobSize))
  return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
