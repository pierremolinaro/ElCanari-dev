//--- START OF USER ZONE 1


//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutProjectDocument {
  @objc func changeValueOfSelectedComponentsAction (_ sender : NSObject?) {
//--- START OF USER ZONE 2
         var possibleValues = Set <String> ()
         var componentNames = [String] ()
         let selectedComponents = self.componentController.selectedArray
         for component in selectedComponents.values {
           componentNames.append (component.componentName!)
           possibleValues.insert (component.mComponentValue)
         }
         let componentValues = Array (possibleValues).sorted ()
         componentNames.sort ()
      //---
         if componentValues.count > 0, let window = self.windowForSheet {
          let panel = NSPanel (
            contentRect: NSRect (x: 0, y: 0, width: 500, height: 200),
            styleMask: [.titled],
            backing: .buffered,
            defer: false
          )
        //---
          let layoutView = AutoLayoutVerticalStackView ().set (margins: 20)
          let gridView = AutoLayoutGridView2 ()
        //---
          layoutView.appendViewSurroundedByFlexibleSpaces (AutoLayoutStaticLabel (title: "Change Value", bold: true, size: .regular, alignment: .center))
          _ = layoutView.appendFlexibleSpace ()
        //---
          do{
            let left = AutoLayoutStaticLabel (title: "Components", bold: false, size: .regular, alignment: .center)
            let right = AutoLayoutStaticLabel (title: componentNames.joined (separator: ", "), bold: true, size: .regular, alignment: .center)
                  .set (alignment: .left).expandableWidth ()
            _ = gridView.addFirstBaseLineAligned (left: left, right: right)
          }
        //---
          let comboBox = AutoLayoutComboBox (width: 120).expandableWidth ()
          do{
            let left = AutoLayoutStaticLabel (title: "New Value", bold: false, size: .regular, alignment: .center)
            _ = gridView.addFirstBaseLineAligned (left: left, right: comboBox)
          }
        //---
          _ = layoutView.appendView (gridView)
          _ = layoutView.appendFlexibleSpace ()
          let okButton = AutoLayoutSheetDefaultOkButton (title: "Change Value", size: .regular, sheet: panel)
          do{
            let hStack = AutoLayoutHorizontalStackView ()
            _ = hStack.appendView (AutoLayoutSheetCancelButton (title: "Cancel", size: .regular))
            _ = hStack.appendFlexibleSpace ()
            _ = hStack.appendView (okButton)
            _ = layoutView.appendView (hStack)
          }
        //---
           comboBox.addItems (withObjectValues: componentValues)
           comboBox.selectItem (at: 0)
           comboBox.mTextDidChange = { (_ inOutlet : AutoLayoutComboBox) in okButton.title = "Change to " + inOutlet.stringValue }
        //---
           panel.contentView = AutoLayoutWindowContentView (view: AutoLayoutViewByPrefixingAppIcon (prefixedView: layoutView))
           window.beginSheet (panel) { (_ inResponse : NSApplication.ModalResponse) in
             if inResponse == .stop {
               let newValue = comboBox.stringValue
               for component in selectedComponents.values {
                 component.mComponentValue = newValue
               }
             }
           }
         }
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
