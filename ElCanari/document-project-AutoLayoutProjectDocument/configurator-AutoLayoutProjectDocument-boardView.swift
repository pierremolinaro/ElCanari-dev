//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutProjectDocument {
  final func configure_boardView (_ inOutlet : AutoLayoutGraphicView) {
//--- START OF USER ZONE 2
  //--- Set document to scroll view for enabling drag and drop of components
     inOutlet.mScrollView?.register (document: self)
     inOutlet.mGraphicView.register (
       draggedTypes: [kDragAndDropRestrictRectangle, kDragAndDropBoardText, kDragAndDropBoardQRCode, kDragAndDropBoardImage, kDragAndDropBoardPackage, kDragAndDropBoardLine, kDragAndDropBoardTrack]
     )
     inOutlet.mGraphicView.setUsesOptionKeyForDuplicatingSelectedObjects (false)
  //--- Option click for creating track
     inOutlet.mGraphicView.mHelperStringForOptionModifier = "SHIFT: mouse down starts a new track"
     inOutlet.mGraphicView.setOptionMouseCallbacks (
       start: { [weak self] (inUnalignedMouseLocation) in return self?.startTrackCreationOnOptionMouseDown (at: inUnalignedMouseLocation) ?? false },
       continue: { [weak self] (inUnalignedMouseLocation, inModifierFlags) in self?.continueTrackCreationOnOptionMouseDragged (at: inUnalignedMouseLocation, inModifierFlags) },
       abort: { [weak self] in self?.abortTrackCreationOnOptionMouseUp () },
       helper: { [weak self] (inModifierFlags) in self?.helperStringForTrackCreation (inModifierFlags) },
       stop: { [weak self] (inUnalignedMouseLocation) in self?.stopTrackCreationOnOptionMouseUp (at: inUnalignedMouseLocation) ?? false }
     )
     inOutlet.mGraphicView.mDrawFrameIssue = false
  //--- Contextual menu
     inOutlet.mGraphicView.mContextualMenuBuilder = { [weak self] in return self?.populateContextualClickOnBoard ($0) }
  //----
    inOutlet.mGraphicView.setMouseMovedOrFlagsChangedCallback { [weak self] (unalignedMouseLocation) in
      self?.mouseMovedOrFlagsChangedInBoard (unalignedMouseLocation)
    }
  //--- Pasteboard
    inOutlet.mGraphicView.register (pasteboardType: BOARD_PASTEBOARD_TYPE)
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
