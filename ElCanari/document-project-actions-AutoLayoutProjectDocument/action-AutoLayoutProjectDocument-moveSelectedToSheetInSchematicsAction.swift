//--- START OF USER ZONE 1


//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————

extension AutoLayoutProjectDocument {
  @objc func moveSelectedToSheetInSchematicsAction (_ inSender : NSObject?) {
//--- START OF USER ZONE 2
    let (selectedObjects, selectedPoints) = self.selectAllConnectedElementsInSchematics ()
  //--- Display dialog for selecting destination sheet
    if let selectedSheet = self.rootObject.mSelectedSheet,
       let window = self.windowForSheet {
    //---
      let panel = NSPanel (
        contentRect: NSRect (x: 0, y: 0, width: 500, height: 200),
        styleMask: [.titled],
        backing: .buffered,
        defer: false
      )
    //---
      let layoutView = AutoLayoutVerticalStackView ().set (margins: 20)
    //---
      _ = layoutView.appendViewSurroundedByFlexibleSpaces (AutoLayoutStaticLabel (title: "Move Selected Element to Sheet", bold: true, size: .regular, alignment: .center))
      _ = layoutView.appendFlexibleSpace ()
    //--- Populate pop up button
      let popUpButton = AutoLayoutBase_NSPopUpButton (pullsDown: false, size: .regular).expandableWidth ()
      _ = layoutView.appendView (popUpButton)
      _ = layoutView.appendFlexibleSpace ()
      var idx = 0
      for sheet in self.rootObject.mSheets.values {
        popUpButton.addItem (withTitle: "\(sheet.mSheetTitle) — \(idx + 1)/\(self.rootObject.mSheets.count)")
        popUpButton.lastItem?.representedObject = sheet
        if selectedSheet === sheet {
          popUpButton.selectItem (at: idx)
        }
        idx += 1
      }
    //---
      do{
        let hStack = AutoLayoutHorizontalStackView ()
        _ = hStack.appendView (AutoLayoutSheetCancelButton (title: "Cancel", size: .regular))
        _ = hStack.appendFlexibleSpace ()
        let okButton = AutoLayoutSheetDefaultOkButton (title: "Mode Selected Elements", size: .regular, sheet: panel)
        _ = hStack.appendView (okButton)
        _ = layoutView.appendView (hStack)
      }
    //---
      panel.contentView = AutoLayoutWindowContentView (view: AutoLayoutViewByPrefixingAppIcon (prefixedView: layoutView))
      window.beginSheet (panel) { inResponse in
        if inResponse == .stop,
            let sheet = popUpButton.selectedItem?.representedObject as? SheetInProject {
          for point in selectedPoints.values {
            point.mSheet = sheet
          }
          for object in selectedObjects.values {
            object.mSheet = sheet
          }
          self.rootObject.mSelectedSheet = sheet
          self.schematicObjectsController.setSelection (Array (selectedObjects.values))
        }
      }
    }
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————
