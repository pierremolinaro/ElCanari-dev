//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(ProjectDocument) class ProjectDocument : EBManagedXibDocument {

  //····················································································································
  //   Array controller: netClassController
  //····················································································································

  var netClassController = Controller_ProjectDocument_netClassController ()

  //····················································································································
  //   Array controller: projectFontController
  //····················································································································

  var projectFontController = Controller_ProjectDocument_projectFontController ()

  //····················································································································
  //   Array controller: projectDeviceController
  //····················································································································

  var projectDeviceController = Controller_ProjectDocument_projectDeviceController ()

  //····················································································································
  //   Array controller: schematicObjectsController
  //····················································································································

  var schematicObjectsController = Controller_ProjectDocument_schematicObjectsController ()

  //····················································································································
  //   Selection controller: wireInSchematicSelectionController
  //····················································································································

  var wireInSchematicSelectionController = SelectionController_ProjectDocument_wireInSchematicSelectionController ()

  //····················································································································
  //   Selection controller: ncInSchematicSelectionController
  //····················································································································

  var ncInSchematicSelectionController = SelectionController_ProjectDocument_ncInSchematicSelectionController ()

  //····················································································································
  //   Selection controller: commentInSchematicSelectionController
  //····················································································································

  var commentInSchematicSelectionController = SelectionController_ProjectDocument_commentInSchematicSelectionController ()

  //····················································································································
  //   Selection controller: schematicLabelSelectionController
  //····················································································································

  var schematicLabelSelectionController = SelectionController_ProjectDocument_schematicLabelSelectionController ()

  //····················································································································
  //   Selection controller: componentSymbolSelectionController
  //····················································································································

  var componentSymbolSelectionController = SelectionController_ProjectDocument_componentSymbolSelectionController ()

  //····················································································································
  //   Array controller: boardCurveObjectsController
  //····················································································································

  var boardCurveObjectsController = Controller_ProjectDocument_boardCurveObjectsController ()

  //····················································································································
  //   Selection controller: boardCurveSelectionController
  //····················································································································

  var boardCurveSelectionController = SelectionController_ProjectDocument_boardCurveSelectionController ()

  //····················································································································
  //   Array controller: boardObjectsController
  //····················································································································

  var boardObjectsController = Controller_ProjectDocument_boardObjectsController ()

  //····················································································································
  //   Selection controller: boardTrackSelectionController
  //····················································································································

  var boardTrackSelectionController = SelectionController_ProjectDocument_boardTrackSelectionController ()

  //····················································································································
  //   Selection controller: boardConnectorSelectionController
  //····················································································································

  var boardConnectorSelectionController = SelectionController_ProjectDocument_boardConnectorSelectionController ()

  //····················································································································
  //   Selection controller: boardLineSelectionController
  //····················································································································

  var boardLineSelectionController = SelectionController_ProjectDocument_boardLineSelectionController ()

  //····················································································································
  //   Selection controller: restrictRectangleSelectionController
  //····················································································································

  var restrictRectangleSelectionController = SelectionController_ProjectDocument_restrictRectangleSelectionController ()

  //····················································································································
  //   Selection controller: boardTextSelectionController
  //····················································································································

  var boardTextSelectionController = SelectionController_ProjectDocument_boardTextSelectionController ()

  //····················································································································
  //   Selection controller: componentInBoardSelectionController
  //····················································································································

  var componentInBoardSelectionController = SelectionController_ProjectDocument_componentInBoardSelectionController ()

  //····················································································································
  //   Array controller: mDataController
  //····················································································································

  var mDataController = Controller_ProjectDocument_mDataController ()

  //····················································································································
  //   Array controller: componentController
  //····················································································································

  var componentController = Controller_ProjectDocument_componentController ()

  //····················································································································
  //   Selection controller: mDataSelection
  //····················································································································

  var mDataSelection = SelectionController_ProjectDocument_mDataSelection ()

  //····················································································································
  //   Transient property: netCount
  //····················································································································

  final let netCount_property = EBTransientProperty_Int ()

  //····················································································································

  final var netCount : Int? {
    switch self.netCount_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: rastnetDisplayComponentNet
  //····················································································································

  final let rastnetDisplayComponentNet_property = EBTransientProperty_Bool ()

  //····················································································································

  final var rastnetDisplayComponentNet : Bool? {
    switch self.rastnetDisplayComponentNet_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: documentFileName
  //····················································································································

  final let documentFileName_property = EBTransientProperty_String ()

  //····················································································································

  final var documentFileName : String? {
    switch self.documentFileName_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: componentCount
  //····················································································································

  final let componentCount_property = EBTransientProperty_String ()

  //····················································································································

  final var componentCount : String? {
    switch self.componentCount_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: canRemoveNetClasses
  //····················································································································

  final let canRemoveNetClasses_property = EBTransientProperty_Bool ()

  //····················································································································

  final var canRemoveNetClasses : Bool? {
    switch self.canRemoveNetClasses_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: selectedDevicePackageNames
  //····················································································································

  final let selectedDevicePackageNames_property = EBTransientProperty_StringArray ()

  //····················································································································

  final var selectedDevicePackageNames : StringArray? {
    switch self.selectedDevicePackageNames_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: selectedDeviceSymbols
  //····················································································································

  final let selectedDeviceSymbols_property = EBTransientProperty_DeviceSymbolDictionary ()

  //····················································································································

  final var selectedDeviceSymbols : DeviceSymbolDictionary? {
    switch self.selectedDeviceSymbols_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: selectedDeviceSymbolNames
  //····················································································································

  final let selectedDeviceSymbolNames_property = EBTransientProperty_TwoStringArray ()

  //····················································································································

  final var selectedDeviceSymbolNames : TwoStringArray? {
    switch self.selectedDeviceSymbolNames_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: pinPadAssignments
  //····················································································································

  final let pinPadAssignments_property = EBTransientProperty_ThreeStringArray ()

  //····················································································································

  final var pinPadAssignments : ThreeStringArray? {
    switch self.pinPadAssignments_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: schematicSheetOrientationIsCustom
  //····················································································································

  final let schematicSheetOrientationIsCustom_property = EBTransientProperty_Bool ()

  //····················································································································

  final var schematicSheetOrientationIsCustom : Bool? {
    switch self.schematicSheetOrientationIsCustom_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: netCountString
  //····················································································································

  final let netCountString_property = EBTransientProperty_String ()

  //····················································································································

  final var netCountString : String? {
    switch self.netCountString_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: rastnetShape
  //····················································································································

  final let rastnetShape_property = EBTransientProperty_EBShape ()

  //····················································································································

  final var rastnetShape : EBShape? {
    switch self.rastnetShape_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: rastnetDisplayOneNet
  //····················································································································

  final let rastnetDisplayOneNet_property = EBTransientProperty_Bool ()

  //····················································································································

  final var rastnetDisplayOneNet : Bool? {
    switch self.rastnetDisplayOneNet_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: artworlImportButtonTitle
  //····················································································································

  final let artworlImportButtonTitle_property = EBTransientProperty_String ()

  //····················································································································

  final var artworlImportButtonTitle : String? {
    switch self.artworlImportButtonTitle_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: documentFilePathOk
  //····················································································································

  final let documentFilePathOk_property = EBTransientProperty_Bool ()

  //····················································································································

  final var documentFilePathOk : Bool? {
    switch self.documentFilePathOk_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: layerConfigurationString
  //····················································································································

  final let layerConfigurationString_property = EBTransientProperty_String ()

  //····················································································································

  final var layerConfigurationString : String? {
    switch self.layerConfigurationString_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: canRemoveSelectedFonts
  //····················································································································

  final let canRemoveSelectedFonts_property = EBTransientProperty_Bool ()

  //····················································································································

  final var canRemoveSelectedFonts : Bool? {
    switch self.canRemoveSelectedFonts_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: canRemoveSelectedDevices
  //····················································································································

  final let canRemoveSelectedDevices_property = EBTransientProperty_Bool ()

  //····················································································································

  final var canRemoveSelectedDevices : Bool? {
    switch self.canRemoveSelectedDevices_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: unplacedSymbolsCount
  //····················································································································

  final let unplacedSymbolsCount_property = EBTransientProperty_Int ()

  //····················································································································

  final var unplacedSymbolsCount : Int? {
    switch self.unplacedSymbolsCount_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: unplacedSymbolsCountString
  //····················································································································

  final let unplacedSymbolsCountString_property = EBTransientProperty_String ()

  //····················································································································

  final var unplacedSymbolsCountString : String? {
    switch self.unplacedSymbolsCountString_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: unplacedPackageCount
  //····················································································································

  final let unplacedPackageCount_property = EBTransientProperty_Int ()

  //····················································································································

  final var unplacedPackageCount : Int? {
    switch self.unplacedPackageCount_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: unplacedPackagesCountString
  //····················································································································

  final let unplacedPackagesCountString_property = EBTransientProperty_String ()

  //····················································································································

  final var unplacedPackagesCountString : String? {
    switch self.unplacedPackagesCountString_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: overDisplay
  //····················································································································

  final let overDisplay_property = EBTransientProperty_EBShape ()

  //····················································································································

  final var overDisplay : EBShape? {
    switch self.overDisplay_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }

  //····················································································································
  //   Transient property: canChangePackage
  //····················································································································

  final let canChangePackage_property = EBTransientProperty_Bool ()

  //····················································································································

  final var canChangePackage : Bool? {
    switch self.canChangePackage_property.selection {
    case .empty, .multiple :
      return nil
    case .single (let v) :
      return v
    }
  }


  //····················································································································
  //    Outlets
  //····················································································································

  @IBOutlet final var mAddBottomSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddCommentButton : CanariDragSourceButton? = nil
  @IBOutlet final var mAddComponentButton : EBButton? = nil
  @IBOutlet final var mAddFontButton : EBButton? = nil
  @IBOutlet final var mAddLeftLabelSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddLineInBoardButton : CanariDragSourceButton? = nil
  @IBOutlet final var mAddNCSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddNCToAllSymbolPinsSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddNetClassButton : EBButton? = nil
  @IBOutlet final var mAddNetClassErrorMessageTextField : NSTextField? = nil
  @IBOutlet final var mAddNetClassPanel : NSPanel? = nil
  @IBOutlet final var mAddNetClassTextField : EBTextField? = nil
  @IBOutlet final var mAddNetClassValidationButton : NSButton? = nil
  @IBOutlet final var mAddRestrictRectangleButton : CanariDragSourceButton? = nil
  @IBOutlet final var mAddRightLabelSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddTextInBoardButton : CanariDragSourceImageButton? = nil
  @IBOutlet final var mAddTopLabelSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAddTrackInBoardButton : CanariDragSourceImageButton? = nil
  @IBOutlet final var mAddWireButton : CanariDragSourceButton? = nil
  @IBOutlet final var mAddWirePointSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mAllowTracksOnBackSideSwitch : EBSwitch? = nil
  @IBOutlet final var mAllowTracksOnFrontSideSwitch : EBSwitch? = nil
  @IBOutlet final var mAllowTracksOnInner1LayerSwitch : EBSwitch? = nil
  @IBOutlet final var mAllowTracksOnInner2LayerSwitch : EBSwitch? = nil
  @IBOutlet final var mAllowTracksOnInner3LayerSwitch : EBSwitch? = nil
  @IBOutlet final var mAllowTracksOnInner4LayerSwitch : EBSwitch? = nil
  @IBOutlet final var mArtworkCommentTextView : EBTextObserverView? = nil
  @IBOutlet final var mArtworkLayerConfigurationTextField : EBTextObserverField? = nil
  @IBOutlet final var mArtworkNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mArtworkSettingsTabView : NSTabView? = nil
  @IBOutlet final var mArtworkTitleTextField : EBTextObserverField? = nil
  @IBOutlet final var mArtworkVersionTextField : EBIntObserverField? = nil
  @IBOutlet final var mArtworlImportButton : EBButton? = nil
  @IBOutlet final var mAutoRouterPreferredDirectionPopUp : EBPopUpButton? = nil
  @IBOutlet final var mAutoRouterRouteDirectionPopUp : EBPopUpButton? = nil
  @IBOutlet final var mAutoRouterRouteOriginPopUp : EBPopUpButton? = nil
  @IBOutlet final var mAutorouterInterfaceModeTabVView : CanariTabView? = nil
  @IBOutlet final var mAutorouterSnapAnglePopUp : EBPopUpButton? = nil
  @IBOutlet final var mBackRestrictRectangleSwitch : EBSwitch? = nil
  @IBOutlet final var mBackSideTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mBaseBoardInspectorView : NSView? = nil
  @IBOutlet final var mBaseBoardLimitsInspectorView : NSView? = nil
  @IBOutlet final var mBaseSchematicsInspectorView : NSView? = nil
  @IBOutlet final var mBezierPathBoardHelperView : NSView? = nil
  @IBOutlet final var mBoardBackgroundColorWell : EBColorWell? = nil
  @IBOutlet final var mBoardBorderPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardClearanceTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardClearanceUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardComponentNameFontPopUpButton : CanariBoardComponentNameFontPopUpButton? = nil
  @IBOutlet final var mBoardComponentNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardComponentRotationSegmentedControl : CanariOrientationSegmentedControl? = nil
  @IBOutlet final var mBoardComponentRotationSlider : CanariAngleSlider? = nil
  @IBOutlet final var mBoardComponentRotationTextField : CanariAngleTextField? = nil
  @IBOutlet final var mBoardComponentSidePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardComponentValueFontPopUpButton : CanariBoardComponentValueFontPopUpButton? = nil
  @IBOutlet final var mBoardComponentValueTextField : EBTextField? = nil
  @IBOutlet final var mBoardConnectorInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardCurveControlPointX1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurveControlPointX2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurveControlPointY1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurveControlPointY2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurveControlPointsUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardCurvePointX1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurvePointX2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurvePointY1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurvePointY2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardCurveX2TextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardCurveY2TextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardDirectionForNewTrackMenu : CanariChoiceMenu? = nil
  @IBOutlet final var mBoardGridDisplayFactorPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardGridStylePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardGridTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardGridUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardHorizontalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mBoardInspectorSegmentedControl : CanariSegmentedControl? = nil
  @IBOutlet final var mBoardLimitBorderBottomTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitBorderLeftTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitBorderRightTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitBorderTopTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitPointsBottomTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitPointsLeftTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitPointsRightTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitPointsTopTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitsBoundingBoxUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLimitsElementCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mBoardLimitsGridDisplayFactorPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardLimitsGridStylePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardLimitsGridTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLimitsGridUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLimitsHorizontalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mBoardLimitsInspectorSegmentedControl : CanariSegmentedControl? = nil
  @IBOutlet final var mBoardLimitsVerticalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mBoardLimitsView : EBEnclosingGraphicView? = nil
  @IBOutlet final var mBoardLimitsWidthTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLimitsWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardLineLayerPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineWidthTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLineWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineX1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLineX1UnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineX2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLineX2UnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineY1TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLineY1UnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardLineY2TextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardLineY2UnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardObjectsPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardPointsBoundingBoxUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardShapePopUp : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mBoardSideForNewRestrictRectangleMenu : CanariChoiceMenu? = nil
  @IBOutlet final var mBoardSideForNewTrackMenu : CanariChoiceMenu? = nil
  @IBOutlet final var mBoardStatusImageViewInToolbar : EBImageObserverView? = nil
  @IBOutlet final var mBoardTextFontPopUpButton : CanariBoardTextFontPopUpButton? = nil
  @IBOutlet final var mBoardTextFontSizeField : EBDoubleField? = nil
  @IBOutlet final var mBoardTextHorizontalAlignmentSegmentedControl : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mBoardTextInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardTextLayerPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardTextObliqueSwitch : EBSwitch? = nil
  @IBOutlet final var mBoardTextRotationSlider : CanariAngleSlider? = nil
  @IBOutlet final var mBoardTextRotationTextField : CanariAngleTextField? = nil
  @IBOutlet final var mBoardTextTextField : EBTextField? = nil
  @IBOutlet final var mBoardTextVerticalAlignmentSegmentedControl : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mBoardTextWeightTextField : EBDoubleField? = nil
  @IBOutlet final var mBoardTrackInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mBoardTrackP1xTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardTrackP1xUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardTrackP1yTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardTrackP1yUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardTrackP2xTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardTrackP2xUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardTrackP2yTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mBoardTrackP2yUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mBoardTrackSidePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mBoardVerticalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mBoardView : EBEnclosingGraphicView? = nil
  @IBOutlet final var mCanariDefaultNetClassPopUpButton : CanariDefaultNetClassPopUpButton? = nil
  @IBOutlet final var mChangeComponentValueComboxBox : CanariComboBox? = nil
  @IBOutlet final var mChangePackageComponentListTextField : NSTextField? = nil
  @IBOutlet final var mChangePackageOfSelectedComponentsActionButton : EBButton? = nil
  @IBOutlet final var mChangePackagePanel : NSPanel? = nil
  @IBOutlet final var mChangePackagePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mChangeValueComponentListTextField : NSTextField? = nil
  @IBOutlet final var mChangeValueOfSelectedComponentsActionButton : EBButton? = nil
  @IBOutlet final var mChangeValuePanel : NSPanel? = nil
  @IBOutlet final var mChangeValueValidationButton : NSButton? = nil
  @IBOutlet final var mCheckClearanceBetweenPadsOfSameNetSwitch : EBSwitch? = nil
  @IBOutlet final var mCommentColorInSchematicsTextField : EBColorWell? = nil
  @IBOutlet final var mCommentInSchematicsHorizontalAlignmentSegmentedControl : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mCommentInSchematicsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mCommentInSchematicsTextField : EBTextField? = nil
  @IBOutlet final var mCommentInSchematicsVerticalAlignmentSegmentedControl : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mCommentSizeInSchematicsSlider : EBSlider? = nil
  @IBOutlet final var mCommentSizeInSchematicsTextField : EBDoubleField? = nil
  @IBOutlet final var mComponentCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mComponentInBoardCenterXPopUp : EBPopUpButton? = nil
  @IBOutlet final var mComponentInBoardCenterXTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mComponentInBoardCenterYPopUp : EBPopUpButton? = nil
  @IBOutlet final var mComponentInBoardCenterYTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mComponentInBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mComponentNameFontSizeField : EBDoubleField? = nil
  @IBOutlet final var mComponentNameRotationSegmentedControl : CanariOrientationSegmentedControl? = nil
  @IBOutlet final var mComponentNameRotationSlider : CanariAngleSlider? = nil
  @IBOutlet final var mComponentNameRotationTextField : CanariAngleTextField? = nil
  @IBOutlet final var mComponentPackagePopUpButton : CanariBoardComponentPackagePopUpButton? = nil
  @IBOutlet final var mComponentSymbolComponentNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mComponentSymbolDeviceNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mComponentSymbolInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mComponentSymbolInstanceNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mComponentSymbolShowComponentValueSwitch : EBSwitch? = nil
  @IBOutlet final var mComponentSymbolTypeNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mComponentSymbolValueTextField : EBTextField? = nil
  @IBOutlet final var mComponentTableView : EBTableView? = nil
  @IBOutlet final var mComponentValueFontSizeField : EBDoubleField? = nil
  @IBOutlet final var mComponentValueRotationSegmentedControl : CanariOrientationSegmentedControl? = nil
  @IBOutlet final var mComponentValueRotationSlider : CanariAngleSlider? = nil
  @IBOutlet final var mComponentValueRotationTextField : CanariAngleTextField? = nil
  @IBOutlet final var mComponentsPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mConnectAllSymbolPinsSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mConnectSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mControlKeyHiliteDiameterSlider : EBSlider? = nil
  @IBOutlet final var mCurrentComponentNameTextField : NSTextField? = nil
  @IBOutlet final var mDataTableView : EBTableView? = nil
  @IBOutlet final var mDeviceLibraryTableView : EBTableView? = nil
  @IBOutlet final var mDevicePackageTableView : StringArrayTableView? = nil
  @IBOutlet final var mDeviceSymbolTableView : TwoStringArrayTableView? = nil
  @IBOutlet final var mDeviceSymbolTypePinsTableView : StringArrayTableView? = nil
  @IBOutlet final var mDeviceSymbolTypeTableView : DeviceSymbolTypesTableView? = nil
  @IBOutlet final var mDirectionLockOnKnobDraggingPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mDisconnectAllSymbolPinsSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mDisconnectSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mDisplayBackLayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayBackLayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayBackLegendColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayBackLegendSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayBackPadsColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayBackPadsSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayBackRestrictRectanglesColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayBackRestrictRectanglesSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayBoardClearanceColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mDisplayBoardLimitsColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayComponentNameSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayComponentValueSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayFrontLayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayFrontLayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayFrontLegendColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayFrontLegendSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayFrontPadsColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayFrontPadsSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayFrontRestrictRectanglesColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayFrontRestrictRectanglesSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayInner1LayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayInner1LayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayInner2LayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayInner2LayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayInner3LayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayInner3LayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayInner4LayoutColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayInner4LayoutSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayLegendSwitch : EBSwitch? = nil
  @IBOutlet final var mDisplayPadNumbersColorWell : EBColorWell? = nil
  @IBOutlet final var mDisplayPadNumbersSwitch : EBSwitch? = nil
  @IBOutlet final var mDrawBoardLimitsSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawComponentNamesBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawComponentNamesTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawComponentValuesBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawComponentValuesTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawPackageLegendBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawPackageLegendTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawPadsBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawPadsTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTextsLayoutBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTextsLayoutTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTextsLegendBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTextsLegendTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksBottomSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksInner1LayerSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksInner2LayerSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksInner3LayerSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksInner4LayerSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTracksTopSideSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawTraversingPadsSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrawViasSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mDrillDataFileExtensionTextField : EBTextObserverField? = nil
  @IBOutlet final var mDuplicateSelectedComponentsActionButton : EBButton? = nil
  @IBOutlet final var mERCBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mERCIssueTableView : IssueTableView? = nil
  @IBOutlet final var mERCLogTextView : NSTextView? = nil
  @IBOutlet final var mERCStatusImageViewInToolbar : EBImageObserverView? = nil
  @IBOutlet final var mEditDeviceButton : EBButton? = nil
  @IBOutlet final var mEditFontButton : EBButton? = nil
  @IBOutlet final var mEditNetClassButton : EBButton? = nil
  @IBOutlet final var mErrorOrWarningIssueSlider : EBSlider? = nil
  @IBOutlet final var mExchangeSymbolPanel : NSPanel? = nil
  @IBOutlet final var mExchangeSymbolPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mExchangeSymbolSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mExportDeviceButton : EBButton? = nil
  @IBOutlet final var mExportExistingTracksAndViasSwitch : EBSwitch? = nil
  @IBOutlet final var mExportTrackAndViasToDSNSwitch : EBSwitch? = nil
  @IBOutlet final var mExtensionTextField : EBTextObserverField? = nil
  @IBOutlet final var mFontLibraryTableView : EBTableView? = nil
  @IBOutlet final var mFrontRestrictRectangleSwitch : EBSwitch? = nil
  @IBOutlet final var mGenerateProductFilesActionButton : EBButton? = nil
  @IBOutlet final var mGridZoomBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mGridZoomBoardLimitsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mGridZoomSchematicsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mHideERCIssueButton : EBButton? = nil
  @IBOutlet final var mHorizontalMirrorSwitch : CanariObserverSwitch? = nil
  @IBOutlet final var mHotKeysSchematicInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mImportSESFromBasicTabButton : EBButton? = nil
  @IBOutlet final var mIncorrectFileNameMessageView : NSView? = nil
  @IBOutlet final var mInner1LayerTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mInner2LayerTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mInner3LayerTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mInner4LayerTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mIsPreservedByAutoRouterSwitch : EBSwitch? = nil
  @IBOutlet final var mLaunchFreeRouterWithDocumentButton : EBButton? = nil
  @IBOutlet final var mLaunchFreeRouterWithoutDocumentButton : EBButton? = nil
  @IBOutlet final var mLayerConfigurationPopUp : CanariLayerPopUpButton? = nil
  @IBOutlet final var mLayerForNewLineMenu : CanariChoiceMenu? = nil
  @IBOutlet final var mLayerForNewTextMenu : CanariChoiceMenu? = nil
  @IBOutlet final var mLayoutClearancePopUp : EBPopUpButton? = nil
  @IBOutlet final var mLayoutClearanceTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mLibraryPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mLimitCurveBezierControlPointsView : NSView? = nil
  @IBOutlet final var mMasterView : NSView? = nil
  @IBOutlet final var mMergeNetDialog : NSPanel? = nil
  @IBOutlet final var mMergeNetPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mMergeSeveralSubnetsPanel : NSPanel? = nil
  @IBOutlet final var mMergeSeveralSubnetsPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mMessageBoardIsRectangularView : NSView? = nil
  @IBOutlet final var mMinPPTPTTTWdisplayUnitTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mMinPPTPTTTWinEBUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mMoveSelectedObjectsToSheetPanel : NSPanel? = nil
  @IBOutlet final var mMoveSelectedObjectsToSheetPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mNCInSchematicsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mNCRotationSegmentedControl : CanariQuadrantSegmentedControl? = nil
  @IBOutlet final var mNetClassColorWell : EBColorWell? = nil
  @IBOutlet final var mNetClassHoleDiameterDimensionTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mNetClassHoleDiameterUnitPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mNetClassPadDiameterDimensionTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mNetClassPadDiameterUnitPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mNetClassTableView : EBTableView? = nil
  @IBOutlet final var mNetClassWidthDimensionTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mNetClassWidthUnitPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mNetClassesPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mNetCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mNetInfoTableView : CanariNetInfoTableView? = nil
  @IBOutlet final var mNetListPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mNetWarningImageView : NSImageView? = nil
  @IBOutlet final var mNetWarningTextField : EBIntObserverField? = nil
  @IBOutlet final var mNewComponentFromDevicePullDownButton : CanariNewComponentFromDevicePullDownButton? = nil
  @IBOutlet final var mNewSheetButton : EBButton? = nil
  @IBOutlet final var mNoArtworkMessageTextField : NSTextField? = nil
  @IBOutlet final var mOARUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mOARValueTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mOpenSetDateDialogButton : EBButton? = nil
  @IBOutlet final var mOperationBoardLimitsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mPDFBoardBackgroundColorWell : EBColorWell? = nil
  @IBOutlet final var mPHDUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mPHDValueTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mPageSegmentedControl : CanariSegmentedControl? = nil
  @IBOutlet final var mPinPadAssignmentTableView : ThreeStringArrayTableView? = nil
  @IBOutlet final var mProductFileGenerationLogTextView : NSTextView? = nil
  @IBOutlet final var mProductGenerationTabView : NSTabView? = nil
  @IBOutlet final var mProductPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mRasnetComponentNameSelectionPopUpButton : CanariSelectionPopUpButton? = nil
  @IBOutlet final var mRasnetNetNameSelectionPopUpButton : CanariSelectionPopUpButton? = nil
  @IBOutlet final var mRastnetDisplayPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mRectangularBoardHeightTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mRectangularBoardHeightUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mRectangularBoardWidthHeighView : NSView? = nil
  @IBOutlet final var mRectangularBoardWidthTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mRectangularBoardWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mRemoveDeviceButton : EBButton? = nil
  @IBOutlet final var mRemoveEmbeddedDevicesButton : EBButton? = nil
  @IBOutlet final var mRemoveFontButton : EBButton? = nil
  @IBOutlet final var mRemoveNetClassButton : EBButton? = nil
  @IBOutlet final var mRemoveSelectedComponentsActionButton : EBButton? = nil
  @IBOutlet final var mRemoveSheetButton : EBButton? = nil
  @IBOutlet final var mRemoveWirePointSchematicHotKeyTextField : NSTextField? = nil
  @IBOutlet final var mRenameComponentButton : EBButton? = nil
  @IBOutlet final var mRenameComponentErrorMessageTextField : NSTextField? = nil
  @IBOutlet final var mRenameComponentFromComponentSymbolButton : EBButton? = nil
  @IBOutlet final var mRenameComponentIndexesPopUpButton : NSPopUpButton? = nil
  @IBOutlet final var mRenameComponentPanel : NSPanel? = nil
  @IBOutlet final var mRenameComponentPrefixComboxBox : CanariComboBox? = nil
  @IBOutlet final var mRenameComponentValidationButton : NSButton? = nil
  @IBOutlet final var mRenameDeviceErrorMessageTextField : NSTextField? = nil
  @IBOutlet final var mRenameDeviceNameTextField : EBTextField? = nil
  @IBOutlet final var mRenameDevicePanel : NSPanel? = nil
  @IBOutlet final var mRenameDeviceTitleTextField : NSTextField? = nil
  @IBOutlet final var mRenameDeviceValidationButton : NSButton? = nil
  @IBOutlet final var mRenameNetErrorTextField : EBTextField? = nil
  @IBOutlet final var mRenameNetInNetTabButton : EBButton? = nil
  @IBOutlet final var mRenameNetOkButton : EBButton? = nil
  @IBOutlet final var mRenameNetPanel : NSPanel? = nil
  @IBOutlet final var mRenameNetTextField : EBTextField? = nil
  @IBOutlet final var mResetDevicesAndFontsVersionButton : EBButton? = nil
  @IBOutlet final var mResetFontVersionButton : EBButton? = nil
  @IBOutlet final var mResetSelectedDeviceVersionButton : EBButton? = nil
  @IBOutlet final var mRestrictRectangleInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mRevealPackageOfSelectedComponentsButton : EBButton? = nil
  @IBOutlet final var mRouterBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSaveDSNFileAuxiliaryView : NSView? = nil
  @IBOutlet final var mSchematicBackColorColorWell : EBColorWell? = nil
  @IBOutlet final var mSchematicCustomHeightTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mSchematicCustomHeightUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mSchematicCustomSizeView : NSView? = nil
  @IBOutlet final var mSchematicCustomWidthTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mSchematicCustomWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mSchematicLabelInsulateSubnetButton : EBButton? = nil
  @IBOutlet final var mSchematicLabelMergeSubnetButton : EBButton? = nil
  @IBOutlet final var mSchematicLabelNetClassButton : EBPopUpButton? = nil
  @IBOutlet final var mSchematicStatusImageViewInToolbar : EBImageObserverView? = nil
  @IBOutlet final var mSchematicWireInsulateSubnetButton : EBButton? = nil
  @IBOutlet final var mSchematicWireMergeSubnetButton : EBButton? = nil
  @IBOutlet final var mSchematicWireNetClassButton : EBPopUpButton? = nil
  @IBOutlet final var mSchematicsDatePicker : NSDatePicker? = nil
  @IBOutlet final var mSchematicsGridDisplayFactorPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mSchematicsGridStylePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mSchematicsHorizontalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mSchematicsInspectorSegmentedControl : CanariSegmentedControl? = nil
  @IBOutlet final var mSchematicsLabelInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSchematicsLabelNetNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mSchematicsLabelRenameNetButton : EBButton? = nil
  @IBOutlet final var mSchematicsLabelRotationSegmentedControl : CanariQuadrantSegmentedControl? = nil
  @IBOutlet final var mSchematicsPageView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSchematicsSheetOrientationSegmentedControl : CanariEnumSegmentedControl? = nil
  @IBOutlet final var mSchematicsSheetsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSchematicsTitleTextField : EBTextField? = nil
  @IBOutlet final var mSchematicsVersionTextField : EBTextField? = nil
  @IBOutlet final var mSchematicsVerticalFlipSwitch : EBSwitch? = nil
  @IBOutlet final var mSchematicsView : EBEnclosingGraphicView? = nil
  @IBOutlet final var mSchematicsWireInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSelectComponentsMenuItem : CanariComponentsMenuItem? = nil
  @IBOutlet final var mSelectNetClassInNetTabButton : EBButton? = nil
  @IBOutlet final var mSelectNetClassPanel : NSPanel? = nil
  @IBOutlet final var mSelectNetClassPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mSelectNetsMenuItem : CanariNetsMenuItem? = nil
  @IBOutlet final var mSelectedBoardLimitInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSelectedLimitDisplayUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mSelectedLimitShapePopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mSelectedObjectsBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSelectedObjectsBoardLimitsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSelectedObjectsSchematicsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mSelectedSheetTitleTextField : EBTextField? = nil
  @IBOutlet final var mSetDatePanel : NSPanel? = nil
  @IBOutlet final var mSetDateToNowButton : EBButton? = nil
  @IBOutlet final var mSheetDownButton : EBButton? = nil
  @IBOutlet final var mSheetPopUpButton : EBPopUpButton? = nil
  @IBOutlet final var mSheetUpButton : EBButton? = nil
  @IBOutlet final var mShowRotationKnobInBoardSwitch : EBSwitch? = nil
  @IBOutlet final var mSlavePadsShouldBeRoutedPopUpButton : CanariBoolPopUpButton? = nil
  @IBOutlet final var mSymbolMirrorSwitch : EBSwitch? = nil
  @IBOutlet final var mSymbolRotationSegmentedControl : CanariQuadrantSegmentedControl? = nil
  @IBOutlet final var mTopSideTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mTrackCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mTrackCustomWidthTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mTrackCustomWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mTrackDefaultWidthTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mTrackDefaultWidthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mTrackInBoardRotationSlider : CanariAngleSlider? = nil
  @IBOutlet final var mTrackInBoardRotationTextField : CanariAngleTextField? = nil
  @IBOutlet final var mTrackLengthTextField : EBTextObserverField? = nil
  @IBOutlet final var mTrackLengthUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mTrackLockView : CanariTrackLockView? = nil
  @IBOutlet final var mTrackNetClassNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mTrackNetNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mUnplacedPackageTableView : CanariDragSourceTableView? = nil
  @IBOutlet final var mUnplacedPackagesBoardInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mUnplacedPackagesCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mUnplacedSymbolsSchematicsInspectorView : CanariViewWithKeyView? = nil
  @IBOutlet final var mUnplacedSymbolsTableView : CanariDragSourceTableView? = nil
  @IBOutlet final var mUnplacedSymbolsTextField : EBTextObserverField? = nil
  @IBOutlet final var mUpdateDeviceButton : EBButton? = nil
  @IBOutlet final var mUpdateDevicesAndFontsButton : EBButton? = nil
  @IBOutlet final var mUpdateFontButton : EBButton? = nil
  @IBOutlet final var mUsesCustomHoleDiameterSwitch : EBSwitch? = nil
  @IBOutlet final var mUsesCustomPadDiameterSwitch : EBSwitch? = nil
  @IBOutlet final var mUsesCustomTrackWidthSwitch : EBSwitch? = nil
  @IBOutlet final var mViaCountTextField : EBTextObserverField? = nil
  @IBOutlet final var mViaCustomHoleDiameterTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mViaCustomHoleDiameterUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mViaCustomPadDiameterTextField : CanariDimensionTextField? = nil
  @IBOutlet final var mViaCustomPadDiameterUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mViaDefaultHoleDiameterTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mViaDefaultHoleDiameterUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mViaDefaultPadDiameterTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var mViaDefaultPadDiameterUnitPopUp : EBPopUpButton? = nil
  @IBOutlet final var mViaNetClassNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mViaNetNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mWireNetNameTextField : EBTextObserverField? = nil
  @IBOutlet final var mWireRenameNetButton : EBButton? = nil
  @IBOutlet final var mWireRenameNetWithUniqueNewNameButton : EBButton? = nil
  @IBOutlet final var minValueForBoardLimitTextField : CanariDimensionObserverTextField? = nil
  @IBOutlet final var minValueForBoardLimitUnitPopUp : EBPopUpButton? = nil

  //····················································································································
  //    Multiple bindings controllers
  //····················································································································

  final var mController_mDuplicateSelectedComponentsActionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRemoveSelectedComponentsActionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mChangePackageOfSelectedComponentsActionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mChangeValueOfSelectedComponentsActionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRevealPackageOfSelectedComponentsButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRenameComponentButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRemoveNetClassButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mEditNetClassButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRemoveEmbeddedDevicesButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mResetDevicesAndFontsVersionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mUpdateDevicesAndFontsButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mEditFontButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mUpdateFontButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRemoveFontButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mResetFontVersionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mResetSelectedDeviceVersionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRemoveDeviceButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mEditDeviceButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mExportDeviceButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mUpdateDeviceButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicCustomSizeView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mRemoveSheetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mWireRenameNetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mWireRenameNetWithUniqueNewNameButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicWireMergeSubnetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicWireInsulateSubnetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicsLabelRenameNetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicLabelMergeSubnetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSchematicLabelInsulateSubnetButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRenameComponentFromComponentSymbolButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRenameNetInNetTabButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSelectNetClassInNetTabButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mNetWarningImageView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mNetWarningTextField_hidden : MultipleBindingController_hidden? = nil
  final var mController_mLimitCurveBezierControlPointsView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mMessageBoardIsRectangularView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mRectangularBoardWidthHeighView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mBezierPathBoardHelperView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mTrackInBoardRotationTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mTrackInBoardRotationSlider_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardTrackP1xTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardTrackP1yTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardTrackP2xTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardTrackP2yTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mFrontRestrictRectangleSwitch_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBackRestrictRectangleSwitch_enabled : MultipleBindingController_enabled? = nil
  final var mController_mSlavePadsShouldBeRoutedPopUpButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentNameFontSizeField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentNameRotationTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentNameRotationSlider_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentNameRotationSegmentedControl_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardComponentNameFontPopUpButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentValueFontSizeField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentValueRotationTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentValueRotationSlider_enabled : MultipleBindingController_enabled? = nil
  final var mController_mComponentValueRotationSegmentedControl_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardComponentValueTextField_enabled : MultipleBindingController_enabled? = nil
  final var mController_mBoardComponentValueFontPopUpButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mRasnetNetNameSelectionPopUpButton_hidden : MultipleBindingController_hidden? = nil
  final var mController_mRasnetComponentNameSelectionPopUpButton_hidden : MultipleBindingController_hidden? = nil
  final var mController_mNoArtworkMessageTextField_hidden : MultipleBindingController_hidden? = nil
  final var mController_mArtworkSettingsTabView_hidden : MultipleBindingController_hidden? = nil
  final var mController_mGenerateProductFilesActionButton_enabled : MultipleBindingController_enabled? = nil
  final var mController_mIncorrectFileNameMessageView_hidden : MultipleBindingController_hidden? = nil

  //····················································································································
  //    Document file path
  //····················································································································
  // Cette méthode est appelée après tout enregistrement, qu'il y ait changement de nom ou pas.

  override final var fileModificationDate : Date? {
    get {
      return super.fileModificationDate
    }
    set{
      super.fileModificationDate = newValue
      self.documentFileName_property.postEvent ()
    }
  }

  //····················································································································

  final func computeTransient_documentFileName () -> String {
    var documentFileName = ""
    if let url = self.fileURL {
      documentFileName = url.path
    }
    return documentFileName
  }

  //····················································································································
  //    populateExplorerWindow
  //····················································································································

  #if BUILD_OBJECT_EXPLORER
    override func populateExplorerWindow (_ y : inout CGFloat, view : NSView) {
    //--- Array controller property: netClassController
      self.netClassController.addExplorer (name: "netClassController", y:&y, view:view)
    //--- Array controller property: projectFontController
      self.projectFontController.addExplorer (name: "projectFontController", y:&y, view:view)
    //--- Array controller property: projectDeviceController
      self.projectDeviceController.addExplorer (name: "projectDeviceController", y:&y, view:view)
    //--- Array controller property: schematicObjectsController
      self.schematicObjectsController.addExplorer (name: "schematicObjectsController", y:&y, view:view)
    //--- Selection controller property: wireInSchematicSelectionController
      self.wireInSchematicSelectionController.addExplorer (name: "wireInSchematicSelectionController", y:&y, view:view)
    //--- Selection controller property: ncInSchematicSelectionController
      self.ncInSchematicSelectionController.addExplorer (name: "ncInSchematicSelectionController", y:&y, view:view)
    //--- Selection controller property: commentInSchematicSelectionController
      self.commentInSchematicSelectionController.addExplorer (name: "commentInSchematicSelectionController", y:&y, view:view)
    //--- Selection controller property: schematicLabelSelectionController
      self.schematicLabelSelectionController.addExplorer (name: "schematicLabelSelectionController", y:&y, view:view)
    //--- Selection controller property: componentSymbolSelectionController
      self.componentSymbolSelectionController.addExplorer (name: "componentSymbolSelectionController", y:&y, view:view)
    //--- Array controller property: boardCurveObjectsController
      self.boardCurveObjectsController.addExplorer (name: "boardCurveObjectsController", y:&y, view:view)
    //--- Selection controller property: boardCurveSelectionController
      self.boardCurveSelectionController.addExplorer (name: "boardCurveSelectionController", y:&y, view:view)
    //--- Array controller property: boardObjectsController
      self.boardObjectsController.addExplorer (name: "boardObjectsController", y:&y, view:view)
    //--- Selection controller property: boardTrackSelectionController
      self.boardTrackSelectionController.addExplorer (name: "boardTrackSelectionController", y:&y, view:view)
    //--- Selection controller property: boardConnectorSelectionController
      self.boardConnectorSelectionController.addExplorer (name: "boardConnectorSelectionController", y:&y, view:view)
    //--- Selection controller property: boardLineSelectionController
      self.boardLineSelectionController.addExplorer (name: "boardLineSelectionController", y:&y, view:view)
    //--- Selection controller property: restrictRectangleSelectionController
      self.restrictRectangleSelectionController.addExplorer (name: "restrictRectangleSelectionController", y:&y, view:view)
    //--- Selection controller property: boardTextSelectionController
      self.boardTextSelectionController.addExplorer (name: "boardTextSelectionController", y:&y, view:view)
    //--- Selection controller property: componentInBoardSelectionController
      self.componentInBoardSelectionController.addExplorer (name: "componentInBoardSelectionController", y:&y, view:view)
    //--- Array controller property: mDataController
      self.mDataController.addExplorer (name: "mDataController", y:&y, view:view)
    //--- Array controller property: componentController
      self.componentController.addExplorer (name: "componentController", y:&y, view:view)
    //--- Selection controller property: mDataSelection
      self.mDataSelection.addExplorer (name: "mDataSelection", y:&y, view:view)
    //---
      super.populateExplorerWindow (&y, view:view)
    }
  #endif

  //····················································································································
  //    windowNibName
  //····················································································································

  override final var windowNibName : NSNib.Name? {
    return NSNib.Name ("ProjectDocument")
  }

  //····················································································································
  //    rootEntityClassName
  //····················································································································

  override final func rootEntityClassName () -> String {
    return "ProjectRoot"
  }

  //····················································································································
  //    rootObject
  //····················································································································

  final var rootObject : ProjectRoot { return self.mRootObject as! ProjectRoot }

  //····················································································································
  //    check outlet connections
  //····················································································································

  private func checkOutletConnections () {
    let start = Date ()
    checkOutletConnection (self.mAddBottomSchematicHotKeyTextField, "mAddBottomSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddCommentButton, "mAddCommentButton", CanariDragSourceButton.self, #file, #line)
    checkOutletConnection (self.mAddComponentButton, "mAddComponentButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mAddFontButton, "mAddFontButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mAddLeftLabelSchematicHotKeyTextField, "mAddLeftLabelSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddLineInBoardButton, "mAddLineInBoardButton", CanariDragSourceButton.self, #file, #line)
    checkOutletConnection (self.mAddNCSchematicHotKeyTextField, "mAddNCSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddNCToAllSymbolPinsSchematicHotKeyTextField, "mAddNCToAllSymbolPinsSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddNetClassButton, "mAddNetClassButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mAddNetClassErrorMessageTextField, "mAddNetClassErrorMessageTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddNetClassPanel, "mAddNetClassPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mAddNetClassTextField, "mAddNetClassTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mAddNetClassValidationButton, "mAddNetClassValidationButton", NSButton.self, #file, #line)
    checkOutletConnection (self.mAddRestrictRectangleButton, "mAddRestrictRectangleButton", CanariDragSourceButton.self, #file, #line)
    checkOutletConnection (self.mAddRightLabelSchematicHotKeyTextField, "mAddRightLabelSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddTextInBoardButton, "mAddTextInBoardButton", CanariDragSourceImageButton.self, #file, #line)
    checkOutletConnection (self.mAddTopLabelSchematicHotKeyTextField, "mAddTopLabelSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAddTrackInBoardButton, "mAddTrackInBoardButton", CanariDragSourceImageButton.self, #file, #line)
    checkOutletConnection (self.mAddWireButton, "mAddWireButton", CanariDragSourceButton.self, #file, #line)
    checkOutletConnection (self.mAddWirePointSchematicHotKeyTextField, "mAddWirePointSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnBackSideSwitch, "mAllowTracksOnBackSideSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnFrontSideSwitch, "mAllowTracksOnFrontSideSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnInner1LayerSwitch, "mAllowTracksOnInner1LayerSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnInner2LayerSwitch, "mAllowTracksOnInner2LayerSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnInner3LayerSwitch, "mAllowTracksOnInner3LayerSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mAllowTracksOnInner4LayerSwitch, "mAllowTracksOnInner4LayerSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mArtworkCommentTextView, "mArtworkCommentTextView", EBTextObserverView.self, #file, #line)
    checkOutletConnection (self.mArtworkLayerConfigurationTextField, "mArtworkLayerConfigurationTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mArtworkNameTextField, "mArtworkNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mArtworkSettingsTabView, "mArtworkSettingsTabView", NSTabView.self, #file, #line)
    checkOutletConnection (self.mArtworkTitleTextField, "mArtworkTitleTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mArtworkVersionTextField, "mArtworkVersionTextField", EBIntObserverField.self, #file, #line)
    checkOutletConnection (self.mArtworlImportButton, "mArtworlImportButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mAutoRouterPreferredDirectionPopUp, "mAutoRouterPreferredDirectionPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mAutoRouterRouteDirectionPopUp, "mAutoRouterRouteDirectionPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mAutoRouterRouteOriginPopUp, "mAutoRouterRouteOriginPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mAutorouterInterfaceModeTabVView, "mAutorouterInterfaceModeTabVView", CanariTabView.self, #file, #line)
    checkOutletConnection (self.mAutorouterSnapAnglePopUp, "mAutorouterSnapAnglePopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBackRestrictRectangleSwitch, "mBackRestrictRectangleSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBackSideTrackCountTextField, "mBackSideTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBaseBoardInspectorView, "mBaseBoardInspectorView", NSView.self, #file, #line)
    checkOutletConnection (self.mBaseBoardLimitsInspectorView, "mBaseBoardLimitsInspectorView", NSView.self, #file, #line)
    checkOutletConnection (self.mBaseSchematicsInspectorView, "mBaseSchematicsInspectorView", NSView.self, #file, #line)
    checkOutletConnection (self.mBezierPathBoardHelperView, "mBezierPathBoardHelperView", NSView.self, #file, #line)
    checkOutletConnection (self.mBoardBackgroundColorWell, "mBoardBackgroundColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mBoardBorderPageView, "mBoardBorderPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardClearanceTextField, "mBoardClearanceTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardClearanceUnitPopUp, "mBoardClearanceUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardComponentNameFontPopUpButton, "mBoardComponentNameFontPopUpButton", CanariBoardComponentNameFontPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardComponentNameTextField, "mBoardComponentNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardComponentRotationSegmentedControl, "mBoardComponentRotationSegmentedControl", CanariOrientationSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardComponentRotationSlider, "mBoardComponentRotationSlider", CanariAngleSlider.self, #file, #line)
    checkOutletConnection (self.mBoardComponentRotationTextField, "mBoardComponentRotationTextField", CanariAngleTextField.self, #file, #line)
    checkOutletConnection (self.mBoardComponentSidePopUpButton, "mBoardComponentSidePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardComponentValueFontPopUpButton, "mBoardComponentValueFontPopUpButton", CanariBoardComponentValueFontPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardComponentValueTextField, "mBoardComponentValueTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mBoardConnectorInspectorView, "mBoardConnectorInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardCurveControlPointX1TextField, "mBoardCurveControlPointX1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveControlPointX2TextField, "mBoardCurveControlPointX2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveControlPointY1TextField, "mBoardCurveControlPointY1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveControlPointY2TextField, "mBoardCurveControlPointY2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveControlPointsUnitPopUp, "mBoardCurveControlPointsUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardCurvePointX1TextField, "mBoardCurvePointX1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurvePointX2TextField, "mBoardCurvePointX2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurvePointY1TextField, "mBoardCurvePointY1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurvePointY2TextField, "mBoardCurvePointY2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveX2TextField, "mBoardCurveX2TextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardCurveY2TextField, "mBoardCurveY2TextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardDirectionForNewTrackMenu, "mBoardDirectionForNewTrackMenu", CanariChoiceMenu.self, #file, #line)
    checkOutletConnection (self.mBoardGridDisplayFactorPopUpButton, "mBoardGridDisplayFactorPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardGridStylePopUpButton, "mBoardGridStylePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardGridTextField, "mBoardGridTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardGridUnitPopUp, "mBoardGridUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardHorizontalFlipSwitch, "mBoardHorizontalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBoardInspectorSegmentedControl, "mBoardInspectorSegmentedControl", CanariSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardLimitBorderBottomTextField, "mBoardLimitBorderBottomTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitBorderLeftTextField, "mBoardLimitBorderLeftTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitBorderRightTextField, "mBoardLimitBorderRightTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitBorderTopTextField, "mBoardLimitBorderTopTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitPointsBottomTextField, "mBoardLimitPointsBottomTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitPointsLeftTextField, "mBoardLimitPointsLeftTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitPointsRightTextField, "mBoardLimitPointsRightTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitPointsTopTextField, "mBoardLimitPointsTopTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsBoundingBoxUnitPopUp, "mBoardLimitsBoundingBoxUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsElementCountTextField, "mBoardLimitsElementCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsGridDisplayFactorPopUpButton, "mBoardLimitsGridDisplayFactorPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsGridStylePopUpButton, "mBoardLimitsGridStylePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsGridTextField, "mBoardLimitsGridTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsGridUnitPopUp, "mBoardLimitsGridUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsHorizontalFlipSwitch, "mBoardLimitsHorizontalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsInspectorSegmentedControl, "mBoardLimitsInspectorSegmentedControl", CanariSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsVerticalFlipSwitch, "mBoardLimitsVerticalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsView, "mBoardLimitsView", EBEnclosingGraphicView.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsWidthTextField, "mBoardLimitsWidthTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLimitsWidthUnitPopUp, "mBoardLimitsWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineInspectorView, "mBoardLineInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardLineLayerPopUpButton, "mBoardLineLayerPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineWidthTextField, "mBoardLineWidthTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLineWidthUnitPopUp, "mBoardLineWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineX1TextField, "mBoardLineX1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLineX1UnitPopUp, "mBoardLineX1UnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineX2TextField, "mBoardLineX2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLineX2UnitPopUp, "mBoardLineX2UnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineY1TextField, "mBoardLineY1TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLineY1UnitPopUp, "mBoardLineY1UnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardLineY2TextField, "mBoardLineY2TextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardLineY2UnitPopUp, "mBoardLineY2UnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardObjectsPageView, "mBoardObjectsPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardPointsBoundingBoxUnitPopUp, "mBoardPointsBoundingBoxUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardShapePopUp, "mBoardShapePopUp", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardSideForNewRestrictRectangleMenu, "mBoardSideForNewRestrictRectangleMenu", CanariChoiceMenu.self, #file, #line)
    checkOutletConnection (self.mBoardSideForNewTrackMenu, "mBoardSideForNewTrackMenu", CanariChoiceMenu.self, #file, #line)
    checkOutletConnection (self.mBoardStatusImageViewInToolbar, "mBoardStatusImageViewInToolbar", EBImageObserverView.self, #file, #line)
    checkOutletConnection (self.mBoardTextFontPopUpButton, "mBoardTextFontPopUpButton", CanariBoardTextFontPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTextFontSizeField, "mBoardTextFontSizeField", EBDoubleField.self, #file, #line)
    checkOutletConnection (self.mBoardTextHorizontalAlignmentSegmentedControl, "mBoardTextHorizontalAlignmentSegmentedControl", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardTextInspectorView, "mBoardTextInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardTextLayerPopUpButton, "mBoardTextLayerPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTextObliqueSwitch, "mBoardTextObliqueSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBoardTextRotationSlider, "mBoardTextRotationSlider", CanariAngleSlider.self, #file, #line)
    checkOutletConnection (self.mBoardTextRotationTextField, "mBoardTextRotationTextField", CanariAngleTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTextTextField, "mBoardTextTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTextVerticalAlignmentSegmentedControl, "mBoardTextVerticalAlignmentSegmentedControl", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mBoardTextWeightTextField, "mBoardTextWeightTextField", EBDoubleField.self, #file, #line)
    checkOutletConnection (self.mBoardTrackInspectorView, "mBoardTrackInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP1xTextField, "mBoardTrackP1xTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP1xUnitPopUp, "mBoardTrackP1xUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP1yTextField, "mBoardTrackP1yTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP1yUnitPopUp, "mBoardTrackP1yUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP2xTextField, "mBoardTrackP2xTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP2xUnitPopUp, "mBoardTrackP2xUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP2yTextField, "mBoardTrackP2yTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mBoardTrackP2yUnitPopUp, "mBoardTrackP2yUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardTrackSidePopUpButton, "mBoardTrackSidePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mBoardVerticalFlipSwitch, "mBoardVerticalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mBoardView, "mBoardView", EBEnclosingGraphicView.self, #file, #line)
    checkOutletConnection (self.mCanariDefaultNetClassPopUpButton, "mCanariDefaultNetClassPopUpButton", CanariDefaultNetClassPopUpButton.self, #file, #line)
    checkOutletConnection (self.mChangeComponentValueComboxBox, "mChangeComponentValueComboxBox", CanariComboBox.self, #file, #line)
    checkOutletConnection (self.mChangePackageComponentListTextField, "mChangePackageComponentListTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mChangePackageOfSelectedComponentsActionButton, "mChangePackageOfSelectedComponentsActionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mChangePackagePanel, "mChangePackagePanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mChangePackagePopUpButton, "mChangePackagePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mChangeValueComponentListTextField, "mChangeValueComponentListTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mChangeValueOfSelectedComponentsActionButton, "mChangeValueOfSelectedComponentsActionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mChangeValuePanel, "mChangeValuePanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mChangeValueValidationButton, "mChangeValueValidationButton", NSButton.self, #file, #line)
    checkOutletConnection (self.mCheckClearanceBetweenPadsOfSameNetSwitch, "mCheckClearanceBetweenPadsOfSameNetSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mCommentColorInSchematicsTextField, "mCommentColorInSchematicsTextField", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mCommentInSchematicsHorizontalAlignmentSegmentedControl, "mCommentInSchematicsHorizontalAlignmentSegmentedControl", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mCommentInSchematicsInspectorView, "mCommentInSchematicsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mCommentInSchematicsTextField, "mCommentInSchematicsTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mCommentInSchematicsVerticalAlignmentSegmentedControl, "mCommentInSchematicsVerticalAlignmentSegmentedControl", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mCommentSizeInSchematicsSlider, "mCommentSizeInSchematicsSlider", EBSlider.self, #file, #line)
    checkOutletConnection (self.mCommentSizeInSchematicsTextField, "mCommentSizeInSchematicsTextField", EBDoubleField.self, #file, #line)
    checkOutletConnection (self.mComponentCountTextField, "mComponentCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mComponentInBoardCenterXPopUp, "mComponentInBoardCenterXPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mComponentInBoardCenterXTextField, "mComponentInBoardCenterXTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mComponentInBoardCenterYPopUp, "mComponentInBoardCenterYPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mComponentInBoardCenterYTextField, "mComponentInBoardCenterYTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mComponentInBoardInspectorView, "mComponentInBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mComponentNameFontSizeField, "mComponentNameFontSizeField", EBDoubleField.self, #file, #line)
    checkOutletConnection (self.mComponentNameRotationSegmentedControl, "mComponentNameRotationSegmentedControl", CanariOrientationSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mComponentNameRotationSlider, "mComponentNameRotationSlider", CanariAngleSlider.self, #file, #line)
    checkOutletConnection (self.mComponentNameRotationTextField, "mComponentNameRotationTextField", CanariAngleTextField.self, #file, #line)
    checkOutletConnection (self.mComponentPackagePopUpButton, "mComponentPackagePopUpButton", CanariBoardComponentPackagePopUpButton.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolComponentNameTextField, "mComponentSymbolComponentNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolDeviceNameTextField, "mComponentSymbolDeviceNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolInspectorView, "mComponentSymbolInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolInstanceNameTextField, "mComponentSymbolInstanceNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolShowComponentValueSwitch, "mComponentSymbolShowComponentValueSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolTypeNameTextField, "mComponentSymbolTypeNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mComponentSymbolValueTextField, "mComponentSymbolValueTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mComponentTableView, "mComponentTableView", EBTableView.self, #file, #line)
    checkOutletConnection (self.mComponentValueFontSizeField, "mComponentValueFontSizeField", EBDoubleField.self, #file, #line)
    checkOutletConnection (self.mComponentValueRotationSegmentedControl, "mComponentValueRotationSegmentedControl", CanariOrientationSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mComponentValueRotationSlider, "mComponentValueRotationSlider", CanariAngleSlider.self, #file, #line)
    checkOutletConnection (self.mComponentValueRotationTextField, "mComponentValueRotationTextField", CanariAngleTextField.self, #file, #line)
    checkOutletConnection (self.mComponentsPageView, "mComponentsPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mConnectAllSymbolPinsSchematicHotKeyTextField, "mConnectAllSymbolPinsSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mConnectSchematicHotKeyTextField, "mConnectSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mControlKeyHiliteDiameterSlider, "mControlKeyHiliteDiameterSlider", EBSlider.self, #file, #line)
    checkOutletConnection (self.mCurrentComponentNameTextField, "mCurrentComponentNameTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mDataTableView, "mDataTableView", EBTableView.self, #file, #line)
    checkOutletConnection (self.mDeviceLibraryTableView, "mDeviceLibraryTableView", EBTableView.self, #file, #line)
    checkOutletConnection (self.mDevicePackageTableView, "mDevicePackageTableView", StringArrayTableView.self, #file, #line)
    checkOutletConnection (self.mDeviceSymbolTableView, "mDeviceSymbolTableView", TwoStringArrayTableView.self, #file, #line)
    checkOutletConnection (self.mDeviceSymbolTypePinsTableView, "mDeviceSymbolTypePinsTableView", StringArrayTableView.self, #file, #line)
    checkOutletConnection (self.mDeviceSymbolTypeTableView, "mDeviceSymbolTypeTableView", DeviceSymbolTypesTableView.self, #file, #line)
    checkOutletConnection (self.mDirectionLockOnKnobDraggingPopUpButton, "mDirectionLockOnKnobDraggingPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mDisconnectAllSymbolPinsSchematicHotKeyTextField, "mDisconnectAllSymbolPinsSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mDisconnectSchematicHotKeyTextField, "mDisconnectSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mDisplayBackLayoutColorWell, "mDisplayBackLayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayBackLayoutSwitch, "mDisplayBackLayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayBackLegendColorWell, "mDisplayBackLegendColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayBackLegendSwitch, "mDisplayBackLegendSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayBackPadsColorWell, "mDisplayBackPadsColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayBackPadsSwitch, "mDisplayBackPadsSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayBackRestrictRectanglesColorWell, "mDisplayBackRestrictRectanglesColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayBackRestrictRectanglesSwitch, "mDisplayBackRestrictRectanglesSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayBoardClearanceColorWell, "mDisplayBoardClearanceColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayBoardInspectorView, "mDisplayBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mDisplayBoardLimitsColorWell, "mDisplayBoardLimitsColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayComponentNameSwitch, "mDisplayComponentNameSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayComponentValueSwitch, "mDisplayComponentValueSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontLayoutColorWell, "mDisplayFrontLayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontLayoutSwitch, "mDisplayFrontLayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontLegendColorWell, "mDisplayFrontLegendColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontLegendSwitch, "mDisplayFrontLegendSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontPadsColorWell, "mDisplayFrontPadsColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontPadsSwitch, "mDisplayFrontPadsSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontRestrictRectanglesColorWell, "mDisplayFrontRestrictRectanglesColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayFrontRestrictRectanglesSwitch, "mDisplayFrontRestrictRectanglesSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayInner1LayoutColorWell, "mDisplayInner1LayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayInner1LayoutSwitch, "mDisplayInner1LayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayInner2LayoutColorWell, "mDisplayInner2LayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayInner2LayoutSwitch, "mDisplayInner2LayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayInner3LayoutColorWell, "mDisplayInner3LayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayInner3LayoutSwitch, "mDisplayInner3LayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayInner4LayoutColorWell, "mDisplayInner4LayoutColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayInner4LayoutSwitch, "mDisplayInner4LayoutSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayLegendSwitch, "mDisplayLegendSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDisplayPadNumbersColorWell, "mDisplayPadNumbersColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mDisplayPadNumbersSwitch, "mDisplayPadNumbersSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawBoardLimitsSwitch, "mDrawBoardLimitsSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawComponentNamesBottomSideSwitch, "mDrawComponentNamesBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawComponentNamesTopSideSwitch, "mDrawComponentNamesTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawComponentValuesBottomSideSwitch, "mDrawComponentValuesBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawComponentValuesTopSideSwitch, "mDrawComponentValuesTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawPackageLegendBottomSideSwitch, "mDrawPackageLegendBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawPackageLegendTopSideSwitch, "mDrawPackageLegendTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawPadsBottomSideSwitch, "mDrawPadsBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawPadsTopSideSwitch, "mDrawPadsTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTextsLayoutBottomSideSwitch, "mDrawTextsLayoutBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTextsLayoutTopSideSwitch, "mDrawTextsLayoutTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTextsLegendBottomSideSwitch, "mDrawTextsLegendBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTextsLegendTopSideSwitch, "mDrawTextsLegendTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksBottomSideSwitch, "mDrawTracksBottomSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksInner1LayerSwitch, "mDrawTracksInner1LayerSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksInner2LayerSwitch, "mDrawTracksInner2LayerSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksInner3LayerSwitch, "mDrawTracksInner3LayerSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksInner4LayerSwitch, "mDrawTracksInner4LayerSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTracksTopSideSwitch, "mDrawTracksTopSideSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawTraversingPadsSwitch, "mDrawTraversingPadsSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrawViasSwitch, "mDrawViasSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mDrillDataFileExtensionTextField, "mDrillDataFileExtensionTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mDuplicateSelectedComponentsActionButton, "mDuplicateSelectedComponentsActionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mERCBoardInspectorView, "mERCBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mERCIssueTableView, "mERCIssueTableView", IssueTableView.self, #file, #line)
    checkOutletConnection (self.mERCLogTextView, "mERCLogTextView", NSTextView.self, #file, #line)
    checkOutletConnection (self.mERCStatusImageViewInToolbar, "mERCStatusImageViewInToolbar", EBImageObserverView.self, #file, #line)
    checkOutletConnection (self.mEditDeviceButton, "mEditDeviceButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mEditFontButton, "mEditFontButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mEditNetClassButton, "mEditNetClassButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mErrorOrWarningIssueSlider, "mErrorOrWarningIssueSlider", EBSlider.self, #file, #line)
    checkOutletConnection (self.mExchangeSymbolPanel, "mExchangeSymbolPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mExchangeSymbolPopUpButton, "mExchangeSymbolPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mExchangeSymbolSchematicHotKeyTextField, "mExchangeSymbolSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mExportDeviceButton, "mExportDeviceButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mExportExistingTracksAndViasSwitch, "mExportExistingTracksAndViasSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mExportTrackAndViasToDSNSwitch, "mExportTrackAndViasToDSNSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mExtensionTextField, "mExtensionTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mFontLibraryTableView, "mFontLibraryTableView", EBTableView.self, #file, #line)
    checkOutletConnection (self.mFrontRestrictRectangleSwitch, "mFrontRestrictRectangleSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mGenerateProductFilesActionButton, "mGenerateProductFilesActionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mGridZoomBoardInspectorView, "mGridZoomBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mGridZoomBoardLimitsInspectorView, "mGridZoomBoardLimitsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mGridZoomSchematicsInspectorView, "mGridZoomSchematicsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mHideERCIssueButton, "mHideERCIssueButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mHorizontalMirrorSwitch, "mHorizontalMirrorSwitch", CanariObserverSwitch.self, #file, #line)
    checkOutletConnection (self.mHotKeysSchematicInspectorView, "mHotKeysSchematicInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mImportSESFromBasicTabButton, "mImportSESFromBasicTabButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mIncorrectFileNameMessageView, "mIncorrectFileNameMessageView", NSView.self, #file, #line)
    checkOutletConnection (self.mInner1LayerTrackCountTextField, "mInner1LayerTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mInner2LayerTrackCountTextField, "mInner2LayerTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mInner3LayerTrackCountTextField, "mInner3LayerTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mInner4LayerTrackCountTextField, "mInner4LayerTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mIsPreservedByAutoRouterSwitch, "mIsPreservedByAutoRouterSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mLaunchFreeRouterWithDocumentButton, "mLaunchFreeRouterWithDocumentButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mLaunchFreeRouterWithoutDocumentButton, "mLaunchFreeRouterWithoutDocumentButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mLayerConfigurationPopUp, "mLayerConfigurationPopUp", CanariLayerPopUpButton.self, #file, #line)
    checkOutletConnection (self.mLayerForNewLineMenu, "mLayerForNewLineMenu", CanariChoiceMenu.self, #file, #line)
    checkOutletConnection (self.mLayerForNewTextMenu, "mLayerForNewTextMenu", CanariChoiceMenu.self, #file, #line)
    checkOutletConnection (self.mLayoutClearancePopUp, "mLayoutClearancePopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mLayoutClearanceTextField, "mLayoutClearanceTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mLibraryPageView, "mLibraryPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mLimitCurveBezierControlPointsView, "mLimitCurveBezierControlPointsView", NSView.self, #file, #line)
    checkOutletConnection (self.mMasterView, "mMasterView", NSView.self, #file, #line)
    checkOutletConnection (self.mMergeNetDialog, "mMergeNetDialog", NSPanel.self, #file, #line)
    checkOutletConnection (self.mMergeNetPopUpButton, "mMergeNetPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mMergeSeveralSubnetsPanel, "mMergeSeveralSubnetsPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mMergeSeveralSubnetsPopUpButton, "mMergeSeveralSubnetsPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mMessageBoardIsRectangularView, "mMessageBoardIsRectangularView", NSView.self, #file, #line)
    checkOutletConnection (self.mMinPPTPTTTWdisplayUnitTextField, "mMinPPTPTTTWdisplayUnitTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mMinPPTPTTTWinEBUnitPopUp, "mMinPPTPTTTWinEBUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mMoveSelectedObjectsToSheetPanel, "mMoveSelectedObjectsToSheetPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mMoveSelectedObjectsToSheetPopUpButton, "mMoveSelectedObjectsToSheetPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mNCInSchematicsInspectorView, "mNCInSchematicsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mNCRotationSegmentedControl, "mNCRotationSegmentedControl", CanariQuadrantSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mNetClassColorWell, "mNetClassColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mNetClassHoleDiameterDimensionTextField, "mNetClassHoleDiameterDimensionTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mNetClassHoleDiameterUnitPopUpButton, "mNetClassHoleDiameterUnitPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mNetClassPadDiameterDimensionTextField, "mNetClassPadDiameterDimensionTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mNetClassPadDiameterUnitPopUpButton, "mNetClassPadDiameterUnitPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mNetClassTableView, "mNetClassTableView", EBTableView.self, #file, #line)
    checkOutletConnection (self.mNetClassWidthDimensionTextField, "mNetClassWidthDimensionTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mNetClassWidthUnitPopUpButton, "mNetClassWidthUnitPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mNetClassesPageView, "mNetClassesPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mNetCountTextField, "mNetCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mNetInfoTableView, "mNetInfoTableView", CanariNetInfoTableView.self, #file, #line)
    checkOutletConnection (self.mNetListPageView, "mNetListPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mNetWarningImageView, "mNetWarningImageView", NSImageView.self, #file, #line)
    checkOutletConnection (self.mNetWarningTextField, "mNetWarningTextField", EBIntObserverField.self, #file, #line)
    checkOutletConnection (self.mNewComponentFromDevicePullDownButton, "mNewComponentFromDevicePullDownButton", CanariNewComponentFromDevicePullDownButton.self, #file, #line)
    checkOutletConnection (self.mNewSheetButton, "mNewSheetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mNoArtworkMessageTextField, "mNoArtworkMessageTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mOARUnitPopUp, "mOARUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mOARValueTextField, "mOARValueTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mOpenSetDateDialogButton, "mOpenSetDateDialogButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mOperationBoardLimitsInspectorView, "mOperationBoardLimitsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mPDFBoardBackgroundColorWell, "mPDFBoardBackgroundColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mPHDUnitPopUp, "mPHDUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mPHDValueTextField, "mPHDValueTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mPageSegmentedControl, "mPageSegmentedControl", CanariSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mPinPadAssignmentTableView, "mPinPadAssignmentTableView", ThreeStringArrayTableView.self, #file, #line)
    checkOutletConnection (self.mProductFileGenerationLogTextView, "mProductFileGenerationLogTextView", NSTextView.self, #file, #line)
    checkOutletConnection (self.mProductGenerationTabView, "mProductGenerationTabView", NSTabView.self, #file, #line)
    checkOutletConnection (self.mProductPageView, "mProductPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mRasnetComponentNameSelectionPopUpButton, "mRasnetComponentNameSelectionPopUpButton", CanariSelectionPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRasnetNetNameSelectionPopUpButton, "mRasnetNetNameSelectionPopUpButton", CanariSelectionPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRastnetDisplayPopUpButton, "mRastnetDisplayPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRectangularBoardHeightTextField, "mRectangularBoardHeightTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mRectangularBoardHeightUnitPopUp, "mRectangularBoardHeightUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRectangularBoardWidthHeighView, "mRectangularBoardWidthHeighView", NSView.self, #file, #line)
    checkOutletConnection (self.mRectangularBoardWidthTextField, "mRectangularBoardWidthTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mRectangularBoardWidthUnitPopUp, "mRectangularBoardWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRemoveDeviceButton, "mRemoveDeviceButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveEmbeddedDevicesButton, "mRemoveEmbeddedDevicesButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveFontButton, "mRemoveFontButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveNetClassButton, "mRemoveNetClassButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveSelectedComponentsActionButton, "mRemoveSelectedComponentsActionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveSheetButton, "mRemoveSheetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRemoveWirePointSchematicHotKeyTextField, "mRemoveWirePointSchematicHotKeyTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mRenameComponentButton, "mRenameComponentButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRenameComponentErrorMessageTextField, "mRenameComponentErrorMessageTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mRenameComponentFromComponentSymbolButton, "mRenameComponentFromComponentSymbolButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRenameComponentIndexesPopUpButton, "mRenameComponentIndexesPopUpButton", NSPopUpButton.self, #file, #line)
    checkOutletConnection (self.mRenameComponentPanel, "mRenameComponentPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mRenameComponentPrefixComboxBox, "mRenameComponentPrefixComboxBox", CanariComboBox.self, #file, #line)
    checkOutletConnection (self.mRenameComponentValidationButton, "mRenameComponentValidationButton", NSButton.self, #file, #line)
    checkOutletConnection (self.mRenameDeviceErrorMessageTextField, "mRenameDeviceErrorMessageTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mRenameDeviceNameTextField, "mRenameDeviceNameTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mRenameDevicePanel, "mRenameDevicePanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mRenameDeviceTitleTextField, "mRenameDeviceTitleTextField", NSTextField.self, #file, #line)
    checkOutletConnection (self.mRenameDeviceValidationButton, "mRenameDeviceValidationButton", NSButton.self, #file, #line)
    checkOutletConnection (self.mRenameNetErrorTextField, "mRenameNetErrorTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mRenameNetInNetTabButton, "mRenameNetInNetTabButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRenameNetOkButton, "mRenameNetOkButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRenameNetPanel, "mRenameNetPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mRenameNetTextField, "mRenameNetTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mResetDevicesAndFontsVersionButton, "mResetDevicesAndFontsVersionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mResetFontVersionButton, "mResetFontVersionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mResetSelectedDeviceVersionButton, "mResetSelectedDeviceVersionButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRestrictRectangleInspectorView, "mRestrictRectangleInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mRevealPackageOfSelectedComponentsButton, "mRevealPackageOfSelectedComponentsButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mRouterBoardInspectorView, "mRouterBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSaveDSNFileAuxiliaryView, "mSaveDSNFileAuxiliaryView", NSView.self, #file, #line)
    checkOutletConnection (self.mSchematicBackColorColorWell, "mSchematicBackColorColorWell", EBColorWell.self, #file, #line)
    checkOutletConnection (self.mSchematicCustomHeightTextField, "mSchematicCustomHeightTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mSchematicCustomHeightUnitPopUp, "mSchematicCustomHeightUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicCustomSizeView, "mSchematicCustomSizeView", NSView.self, #file, #line)
    checkOutletConnection (self.mSchematicCustomWidthTextField, "mSchematicCustomWidthTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mSchematicCustomWidthUnitPopUp, "mSchematicCustomWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicLabelInsulateSubnetButton, "mSchematicLabelInsulateSubnetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSchematicLabelMergeSubnetButton, "mSchematicLabelMergeSubnetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSchematicLabelNetClassButton, "mSchematicLabelNetClassButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicStatusImageViewInToolbar, "mSchematicStatusImageViewInToolbar", EBImageObserverView.self, #file, #line)
    checkOutletConnection (self.mSchematicWireInsulateSubnetButton, "mSchematicWireInsulateSubnetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSchematicWireMergeSubnetButton, "mSchematicWireMergeSubnetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSchematicWireNetClassButton, "mSchematicWireNetClassButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicsDatePicker, "mSchematicsDatePicker", NSDatePicker.self, #file, #line)
    checkOutletConnection (self.mSchematicsGridDisplayFactorPopUpButton, "mSchematicsGridDisplayFactorPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicsGridStylePopUpButton, "mSchematicsGridStylePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSchematicsHorizontalFlipSwitch, "mSchematicsHorizontalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mSchematicsInspectorSegmentedControl, "mSchematicsInspectorSegmentedControl", CanariSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mSchematicsLabelInspectorView, "mSchematicsLabelInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSchematicsLabelNetNameTextField, "mSchematicsLabelNetNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mSchematicsLabelRenameNetButton, "mSchematicsLabelRenameNetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSchematicsLabelRotationSegmentedControl, "mSchematicsLabelRotationSegmentedControl", CanariQuadrantSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mSchematicsPageView, "mSchematicsPageView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSchematicsSheetOrientationSegmentedControl, "mSchematicsSheetOrientationSegmentedControl", CanariEnumSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mSchematicsSheetsInspectorView, "mSchematicsSheetsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSchematicsTitleTextField, "mSchematicsTitleTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mSchematicsVersionTextField, "mSchematicsVersionTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mSchematicsVerticalFlipSwitch, "mSchematicsVerticalFlipSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mSchematicsView, "mSchematicsView", EBEnclosingGraphicView.self, #file, #line)
    checkOutletConnection (self.mSchematicsWireInspectorView, "mSchematicsWireInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSelectComponentsMenuItem, "mSelectComponentsMenuItem", CanariComponentsMenuItem.self, #file, #line)
    checkOutletConnection (self.mSelectNetClassInNetTabButton, "mSelectNetClassInNetTabButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSelectNetClassPanel, "mSelectNetClassPanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mSelectNetClassPopUpButton, "mSelectNetClassPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSelectNetsMenuItem, "mSelectNetsMenuItem", CanariNetsMenuItem.self, #file, #line)
    checkOutletConnection (self.mSelectedBoardLimitInspectorView, "mSelectedBoardLimitInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSelectedLimitDisplayUnitPopUp, "mSelectedLimitDisplayUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSelectedLimitShapePopUpButton, "mSelectedLimitShapePopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSelectedObjectsBoardInspectorView, "mSelectedObjectsBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSelectedObjectsBoardLimitsInspectorView, "mSelectedObjectsBoardLimitsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSelectedObjectsSchematicsInspectorView, "mSelectedObjectsSchematicsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mSelectedSheetTitleTextField, "mSelectedSheetTitleTextField", EBTextField.self, #file, #line)
    checkOutletConnection (self.mSetDatePanel, "mSetDatePanel", NSPanel.self, #file, #line)
    checkOutletConnection (self.mSetDateToNowButton, "mSetDateToNowButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSheetDownButton, "mSheetDownButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mSheetPopUpButton, "mSheetPopUpButton", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSheetUpButton, "mSheetUpButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mShowRotationKnobInBoardSwitch, "mShowRotationKnobInBoardSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mSlavePadsShouldBeRoutedPopUpButton, "mSlavePadsShouldBeRoutedPopUpButton", CanariBoolPopUpButton.self, #file, #line)
    checkOutletConnection (self.mSymbolMirrorSwitch, "mSymbolMirrorSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mSymbolRotationSegmentedControl, "mSymbolRotationSegmentedControl", CanariQuadrantSegmentedControl.self, #file, #line)
    checkOutletConnection (self.mTopSideTrackCountTextField, "mTopSideTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mTrackCountTextField, "mTrackCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mTrackCustomWidthTextField, "mTrackCustomWidthTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mTrackCustomWidthUnitPopUp, "mTrackCustomWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mTrackDefaultWidthTextField, "mTrackDefaultWidthTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mTrackDefaultWidthUnitPopUp, "mTrackDefaultWidthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mTrackInBoardRotationSlider, "mTrackInBoardRotationSlider", CanariAngleSlider.self, #file, #line)
    checkOutletConnection (self.mTrackInBoardRotationTextField, "mTrackInBoardRotationTextField", CanariAngleTextField.self, #file, #line)
    checkOutletConnection (self.mTrackLengthTextField, "mTrackLengthTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mTrackLengthUnitPopUp, "mTrackLengthUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mTrackLockView, "mTrackLockView", CanariTrackLockView.self, #file, #line)
    checkOutletConnection (self.mTrackNetClassNameTextField, "mTrackNetClassNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mTrackNetNameTextField, "mTrackNetNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mUnplacedPackageTableView, "mUnplacedPackageTableView", CanariDragSourceTableView.self, #file, #line)
    checkOutletConnection (self.mUnplacedPackagesBoardInspectorView, "mUnplacedPackagesBoardInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mUnplacedPackagesCountTextField, "mUnplacedPackagesCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mUnplacedSymbolsSchematicsInspectorView, "mUnplacedSymbolsSchematicsInspectorView", CanariViewWithKeyView.self, #file, #line)
    checkOutletConnection (self.mUnplacedSymbolsTableView, "mUnplacedSymbolsTableView", CanariDragSourceTableView.self, #file, #line)
    checkOutletConnection (self.mUnplacedSymbolsTextField, "mUnplacedSymbolsTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mUpdateDeviceButton, "mUpdateDeviceButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mUpdateDevicesAndFontsButton, "mUpdateDevicesAndFontsButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mUpdateFontButton, "mUpdateFontButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mUsesCustomHoleDiameterSwitch, "mUsesCustomHoleDiameterSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mUsesCustomPadDiameterSwitch, "mUsesCustomPadDiameterSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mUsesCustomTrackWidthSwitch, "mUsesCustomTrackWidthSwitch", EBSwitch.self, #file, #line)
    checkOutletConnection (self.mViaCountTextField, "mViaCountTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mViaCustomHoleDiameterTextField, "mViaCustomHoleDiameterTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mViaCustomHoleDiameterUnitPopUp, "mViaCustomHoleDiameterUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mViaCustomPadDiameterTextField, "mViaCustomPadDiameterTextField", CanariDimensionTextField.self, #file, #line)
    checkOutletConnection (self.mViaCustomPadDiameterUnitPopUp, "mViaCustomPadDiameterUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mViaDefaultHoleDiameterTextField, "mViaDefaultHoleDiameterTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mViaDefaultHoleDiameterUnitPopUp, "mViaDefaultHoleDiameterUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mViaDefaultPadDiameterTextField, "mViaDefaultPadDiameterTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.mViaDefaultPadDiameterUnitPopUp, "mViaDefaultPadDiameterUnitPopUp", EBPopUpButton.self, #file, #line)
    checkOutletConnection (self.mViaNetClassNameTextField, "mViaNetClassNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mViaNetNameTextField, "mViaNetNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mWireNetNameTextField, "mWireNetNameTextField", EBTextObserverField.self, #file, #line)
    checkOutletConnection (self.mWireRenameNetButton, "mWireRenameNetButton", EBButton.self, #file, #line)
    checkOutletConnection (self.mWireRenameNetWithUniqueNewNameButton, "mWireRenameNetWithUniqueNewNameButton", EBButton.self, #file, #line)
    checkOutletConnection (self.minValueForBoardLimitTextField, "minValueForBoardLimitTextField", CanariDimensionObserverTextField.self, #file, #line)
    checkOutletConnection (self.minValueForBoardLimitUnitPopUp, "minValueForBoardLimitUnitPopUp", EBPopUpButton.self, #file, #line)
    if LOG_OPERATION_DURATION {
      let durationMS = Int (Date ().timeIntervalSince (start) * 1000.0)
      Swift.print ("Check outlet connections \(durationMS) ms")
    }
  }

  //····················································································································

  final private func configureProperties () {
    let start = Date ()
    var opIdx = 0
  //--- Array controller property: netClassController
    self.netClassController.bind_model (self.rootObject.mNetClasses_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: projectFontController
    self.projectFontController.bind_model (self.rootObject.mFonts_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: projectDeviceController
    self.projectDeviceController.bind_model (self.rootObject.mDevices_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: schematicObjectsController
    self.schematicObjectsController.bind_model (self.rootObject.selectedSheetObjects_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: wireInSchematicSelectionController
    self.wireInSchematicSelectionController.bind_selection (model: self.schematicObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: ncInSchematicSelectionController
    self.ncInSchematicSelectionController.bind_selection (model: self.schematicObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: commentInSchematicSelectionController
    self.commentInSchematicSelectionController.bind_selection (model: self.schematicObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: schematicLabelSelectionController
    self.schematicLabelSelectionController.bind_selection (model: self.schematicObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: componentSymbolSelectionController
    self.componentSymbolSelectionController.bind_selection (model: self.schematicObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: boardCurveObjectsController
    self.boardCurveObjectsController.bind_model (self.rootObject.mBorderCurves_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: boardCurveSelectionController
    self.boardCurveSelectionController.bind_selection (model: self.boardCurveObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: boardObjectsController
    self.boardObjectsController.bind_model (self.rootObject.mBoardObjects_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: boardTrackSelectionController
    self.boardTrackSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: boardConnectorSelectionController
    self.boardConnectorSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: boardLineSelectionController
    self.boardLineSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: restrictRectangleSelectionController
    self.restrictRectangleSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: boardTextSelectionController
    self.boardTextSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: componentInBoardSelectionController
    self.componentInBoardSelectionController.bind_selection (model: self.boardObjectsController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: mDataController
    self.mDataController.bind_model (self.rootObject.fileGenerationParameterArray_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Array controller property: componentController
    self.componentController.bind_model (self.rootObject.mComponents_property, self.ebUndoManager)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Selection controller property: mDataSelection
    self.mDataSelection.bind_selection (model: self.mDataController.selectedArray_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: netCount
    self.netCount_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.netsDescription_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_netCount (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.netsDescription_property.addEBObserver (self.netCount_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: rastnetDisplayComponentNet
    self.rastnetDisplayComponentNet_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mRastnetDisplay_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_rastnetDisplayComponentNet (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mRastnetDisplay_property.addEBObserver (self.rastnetDisplayComponentNet_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: componentCount
    self.componentCount_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mComponents_property.count_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_componentCount (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mComponents_property.count_property.addEBObserver (self.componentCount_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: canRemoveNetClasses
    self.canRemoveNetClasses_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mNetClasses_property.count_property.selection, unwSelf.netClassController.selectedArray_property.selection) {
        case (.single (let v0), .single (let v1)) :
          return .single (transient_ProjectDocument_canRemoveNetClasses (v0, v1))
        case (.multiple, .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mNetClasses_property.count_property.addEBObserver (self.canRemoveNetClasses_property)
    self.netClassController.selectedArray_property.addEBObserverOf_canRemove (self.canRemoveNetClasses_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: selectedDevicePackageNames
    self.selectedDevicePackageNames_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectDeviceController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_selectedDevicePackageNames (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectDeviceController.selectedArray_property.addEBObserverOf_packageNames (self.selectedDevicePackageNames_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: selectedDeviceSymbols
    self.selectedDeviceSymbols_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectDeviceController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_selectedDeviceSymbols (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectDeviceController.selectedArray_property.addEBObserverOf_deviceSymbolDictionary (self.selectedDeviceSymbols_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: selectedDeviceSymbolNames
    self.selectedDeviceSymbolNames_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectDeviceController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_selectedDeviceSymbolNames (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectDeviceController.selectedArray_property.addEBObserverOf_symbolAndTypesNames (self.selectedDeviceSymbolNames_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: pinPadAssignments
    self.pinPadAssignments_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectDeviceController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_pinPadAssignments (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectDeviceController.selectedArray_property.addEBObserverOf_pinPadAssignments (self.pinPadAssignments_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: schematicSheetOrientationIsCustom
    self.schematicSheetOrientationIsCustom_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mSchematicSheetOrientation_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_schematicSheetOrientationIsCustom (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mSchematicSheetOrientation_property.addEBObserver (self.schematicSheetOrientationIsCustom_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: netCountString
    self.netCountString_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.netsDescription_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_netCountString (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.netsDescription_property.addEBObserver (self.netCountString_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: rastnetShape
    self.rastnetShape_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mRastnetDisplay_property.selection, unwSelf.rootObject.mRastnetDisplayedNetName_property.selection, unwSelf.rootObject.mRastnetDisplayedComponentName_property.selection, unwSelf.rootObject.mBoardObjects_property.selection, unwSelf.boardObjectsController.selectedArray_property.selection) {
        case (.single (let v0), .single (let v1), .single (let v2), .single (let v3), .single (let v4)) :
          return .single (transient_ProjectDocument_rastnetShape (v0, v1, v2, v3, v4))
        case (.multiple, .multiple, .multiple, .multiple, .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mRastnetDisplay_property.addEBObserver (self.rastnetShape_property)
    self.rootObject.mRastnetDisplayedNetName_property.addEBObserver (self.rastnetShape_property)
    self.rootObject.mRastnetDisplayedComponentName_property.addEBObserver (self.rastnetShape_property)
    self.rootObject.mBoardObjects_property.addEBObserverOf_netNameAndPadLocation (self.rastnetShape_property)
    self.boardObjectsController.selectedArray_property.addEBObserverOf_componentName (self.rastnetShape_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: rastnetDisplayOneNet
    self.rastnetDisplayOneNet_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mRastnetDisplay_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_rastnetDisplayOneNet (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mRastnetDisplay_property.addEBObserver (self.rastnetDisplayOneNet_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: artworlImportButtonTitle
    self.artworlImportButtonTitle_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.mArtwork_none.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_artworlImportButtonTitle (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.mArtwork_property.addEBObserver (self.artworlImportButtonTitle_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: documentFilePathOk
    self.documentFilePathOk_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.documentFileName_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_documentFilePathOk (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.documentFileName_property.addEBObserver (self.documentFilePathOk_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: layerConfigurationString
    self.layerConfigurationString_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.artworkLayerConfiguration_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_layerConfigurationString (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.artworkLayerConfiguration_property.addEBObserver (self.layerConfigurationString_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: canRemoveSelectedFonts
    self.canRemoveSelectedFonts_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectFontController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_canRemoveSelectedFonts (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectFontController.selectedArray_property.addEBObserverOf_canRemoveFont (self.canRemoveSelectedFonts_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: canRemoveSelectedDevices
    self.canRemoveSelectedDevices_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.projectDeviceController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_canRemoveSelectedDevices (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.projectDeviceController.selectedArray_property.addEBObserverOf_canRemove (self.canRemoveSelectedDevices_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: unplacedSymbolsCount
    self.unplacedSymbolsCount_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.unplacedSymbols_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_unplacedSymbolsCount (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.unplacedSymbols_property.addEBObserver (self.unplacedSymbolsCount_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: unplacedSymbolsCountString
    self.unplacedSymbolsCountString_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.unplacedSymbolsCount_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_unplacedSymbolsCountString (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.unplacedSymbolsCount_property.addEBObserver (self.unplacedSymbolsCountString_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: unplacedPackageCount
    self.unplacedPackageCount_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rootObject.unplacedPackages_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_unplacedPackageCount (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rootObject.unplacedPackages_property.addEBObserver (self.unplacedPackageCount_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: unplacedPackagesCountString
    self.unplacedPackagesCountString_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.unplacedPackageCount_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_unplacedPackagesCountString (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.unplacedPackageCount_property.addEBObserver (self.unplacedPackagesCountString_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: overDisplay
    self.overDisplay_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.rastnetShape_property.selection, unwSelf.rootObject.boardIssues_property.selection) {
        case (.single (let v0), .single (let v1)) :
          return .single (transient_ProjectDocument_overDisplay (v0, v1))
        case (.multiple, .multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.rastnetShape_property.addEBObserver (self.overDisplay_property)
    self.rootObject.boardIssues_property.addEBObserver (self.overDisplay_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
  //--- Atomic property: canChangePackage
    self.canChangePackage_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        switch (unwSelf.componentController.selectedArray_property.selection) {
        case (.single (let v0)) :
          return .single (transient_ProjectDocument_canChangePackage (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.componentController.selectedArray_property.addEBObserverOf_availablePackages (self.canChangePackage_property)
    if LOG_OPERATION_DURATION {
      Swift.print ("  op\(opIdx) \(Int (Date ().timeIntervalSince (start) * 1000.0)) ms")
      opIdx += 1
    }
    if LOG_OPERATION_DURATION {
      let durationMS = Int (Date ().timeIntervalSince (start) * 1000.0)
      Swift.print ("Configure properties \(durationMS) ms")
    }
  }

  //····················································································································

  final private func installBindings () {
    let start = Date ()
  //--------------------------- Install table view bindings
    self.componentController.bind_tableView (self.mComponentTableView)
    self.netClassController.bind_tableView (self.mNetClassTableView)
    self.projectFontController.bind_tableView (self.mFontLibraryTableView)
    self.projectDeviceController.bind_tableView (self.mDeviceLibraryTableView)
    self.mDataController.bind_tableView (self.mDataTableView)
  //--------------------------- Install ebView bindings
    self.schematicObjectsController.bind_ebView (self.mSchematicsView)
    self.boardCurveObjectsController.bind_ebView (self.mBoardLimitsView)
    self.boardObjectsController.bind_ebView (self.mBoardView)
  //--------------------------- Install regular bindings
    self.mPageSegmentedControl?.bind_selectedPage (self.rootObject.mSelectedPageIndex_property)
    self.mSchematicStatusImageViewInToolbar?.bind_image (self.rootObject.schematicStatusImage_property)
    self.mSchematicStatusImageViewInToolbar?.bind_tooltip (self.rootObject.schematicStatusMessage_property)
    self.mBoardStatusImageViewInToolbar?.bind_image (self.rootObject.boardStatusImage_property)
    self.mBoardStatusImageViewInToolbar?.bind_tooltip (self.rootObject.boardStatusMessage_property)
    self.mERCStatusImageViewInToolbar?.bind_image (self.rootObject.ercStatusImage_property)
    self.mERCStatusImageViewInToolbar?.bind_tooltip (self.rootObject.ercStatusMessage_property)
    self.mNewComponentFromDevicePullDownButton?.bind_deviceNames (self.rootObject.deviceNames_property)
    self.mComponentCountTextField?.bind_valueObserver (self.componentCount_property)
    self.mDevicePackageTableView?.bind_array (self.selectedDevicePackageNames_property)
    self.mDeviceSymbolTypeTableView?.bind_symbolDictionary (self.selectedDeviceSymbols_property)
    self.mDeviceSymbolTableView?.bind_array (self.selectedDeviceSymbolNames_property)
    self.mPinPadAssignmentTableView?.bind_array (self.pinPadAssignments_property)
    self.mSchematicsInspectorSegmentedControl?.bind_selectedPage (self.rootObject.mSelectedSchematicInspector_property)
    self.mCanariDefaultNetClassPopUpButton?.bind_netClasses (self.rootObject.mDefaultNetClassName_property, self.rootObject.allClassNames_property)
    self.mUnplacedSymbolsTableView?.bind_models (self.rootObject.unplacedSymbols_property)
    self.mUnplacedSymbolsTextField?.bind_valueObserver (self.unplacedSymbolsCountString_property)
    self.mSchematicsHorizontalFlipSwitch?.bind_value (self.rootObject.mSchematicHorizontalFlip_property)
    self.mSchematicsVerticalFlipSwitch?.bind_value (self.rootObject.mSchematicVerticalFlip_property)
    self.mSchematicsGridStylePopUpButton?.bind_selectedIndex (self.rootObject.mSchematicGridStyle_property)
    self.mSchematicsGridDisplayFactorPopUpButton?.bind_selectedTag (self.rootObject.mSchematicGridDisplayFactor_property)
    self.mSchematicBackColorColorWell?.bind_color (preferences_schematicBackColor_property, sendContinously:true)
    self.mSchematicsTitleTextField?.bind_value (self.rootObject.mSchematicTitle_property, sendContinously:true)
    self.mSchematicsVersionTextField?.bind_value (self.rootObject.mSchematicVersion_property, sendContinously:true)
    self.mSchematicsSheetOrientationSegmentedControl?.bind_selectedSegment (self.rootObject.mSchematicSheetOrientation_property)
    self.mSchematicCustomWidthUnitPopUp?.bind_selectedTag (self.rootObject.mSchematicCustomWidthUnit_property)
    self.mSchematicCustomWidthTextField?.bind_dimensionAndUnit (self.rootObject.mSchematicCustomWidth_property, self.rootObject.mSchematicCustomWidthUnit_property)
    self.mSchematicCustomHeightUnitPopUp?.bind_selectedTag (self.rootObject.mSchematicCustomHeightUnit_property)
    self.mSchematicCustomHeightTextField?.bind_dimensionAndUnit (self.rootObject.mSchematicCustomHeight_property, self.rootObject.mSchematicCustomHeightUnit_property)
    self.mSelectedSheetTitleTextField?.bind_value (self.rootObject.selectedSheetTitle_property, sendContinously:true)
    self.mSchematicsView?.bind_underObjectsDisplay (self.rootObject.schematicBackgroundDisplay_property)
    self.mSchematicsView?.bind_overObjectsDisplay (self.rootObject.connectedPoints_property)
    self.mSchematicsView?.bind_horizontalFlip (self.rootObject.mSchematicHorizontalFlip_property)
    self.mSchematicsView?.bind_verticalFlip (self.rootObject.mSchematicVerticalFlip_property)
    self.mSchematicsView?.bind_gridStyle (self.rootObject.mSchematicGridStyle_property)
    self.mSchematicsView?.bind_gridDisplayFactor (self.rootObject.mSchematicGridDisplayFactor_property)
    self.mSchematicsView?.bind_gridLineColor (preferences_lineColorOfSymbolGrid_property)
    self.mSchematicsView?.bind_gridCrossColor (preferences_crossColorOfSymbolGrid_property)
    self.mSchematicsView?.bind_zoom (self.rootObject.mSchematicZoom_property)
    self.mSchematicsView?.bind_backColor (preferences_schematicBackColor_property)
    self.mWireNetNameTextField?.bind_valueObserver (self.wireInSchematicSelectionController.netName_property)
    self.mNCRotationSegmentedControl?.bind_quadrant (self.ncInSchematicSelectionController.mOrientation_property)
    self.mCommentInSchematicsTextField?.bind_value (self.commentInSchematicSelectionController.mComment_property, sendContinously:true)
    self.mCommentSizeInSchematicsTextField?.bind_value (self.commentInSchematicSelectionController.mSize_property, sendContinously:false, autoFormatter:false)
    self.mCommentSizeInSchematicsSlider?.bind_doubleValue (self.commentInSchematicSelectionController.mSize_property, sendContinously:true)
    self.mCommentColorInSchematicsTextField?.bind_color (self.commentInSchematicSelectionController.mColor_property, sendContinously:true)
    self.mCommentInSchematicsHorizontalAlignmentSegmentedControl?.bind_selectedSegment (self.commentInSchematicSelectionController.mHorizontalAlignment_property)
    self.mCommentInSchematicsVerticalAlignmentSegmentedControl?.bind_selectedSegment (self.commentInSchematicSelectionController.mVerticalAlignment_property)
    self.mSchematicsLabelRotationSegmentedControl?.bind_quadrant (self.schematicLabelSelectionController.mOrientation_property)
    self.mSchematicsLabelNetNameTextField?.bind_valueObserver (self.schematicLabelSelectionController.netName_property)
    self.mComponentSymbolShowComponentValueSwitch?.bind_value (self.componentSymbolSelectionController.mDisplayComponentValue_property)
    self.mComponentSymbolComponentNameTextField?.bind_valueObserver (self.componentSymbolSelectionController.componentName_property)
    self.mComponentSymbolValueTextField?.bind_value (self.componentSymbolSelectionController.componentValueProxy_property, sendContinously:true)
    self.mComponentSymbolDeviceNameTextField?.bind_valueObserver (self.componentSymbolSelectionController.deviceName_property)
    self.mComponentSymbolTypeNameTextField?.bind_valueObserver (self.componentSymbolSelectionController.mSymbolTypeName_property)
    self.mComponentSymbolInstanceNameTextField?.bind_valueObserver (self.componentSymbolSelectionController.mSymbolInstanceName_property)
    self.mSymbolRotationSegmentedControl?.bind_quadrant (self.componentSymbolSelectionController.mRotation_property)
    self.mSymbolMirrorSwitch?.bind_value (self.componentSymbolSelectionController.mMirror_property)
    self.mNetInfoTableView?.bind_netInfo (self.rootObject.netsDescription_property)
    self.mNetCountTextField?.bind_valueObserver (self.netCountString_property)
    self.mNetWarningTextField?.bind_valueObserver (self.rootObject.netWarningCount_property, autoFormatter:true)
    self.mBoardLimitsView?.bind_underObjectsDisplay (self.rootObject.borderViewBackground_property)
    self.mBoardLimitsView?.bind_horizontalFlip (self.rootObject.mBoardLimitsHorizontalFlip_property)
    self.mBoardLimitsView?.bind_verticalFlip (self.rootObject.mBoardLimitsVerticalFlip_property)
    self.mBoardLimitsView?.bind_gridStyle (self.rootObject.mBoardLimitsGridStyle_property)
    self.mBoardLimitsView?.bind_gridDisplayFactor (self.rootObject.mBoardLimitsGridDisplayFactor_property)
    self.mBoardLimitsView?.bind_gridLineColor (preferences_lineColorGridForBoard_property)
    self.mBoardLimitsView?.bind_gridCrossColor (preferences_crossColorGridForBoard_property)
    self.mBoardLimitsView?.bind_zoom (self.rootObject.mBoardLimitsZoom_property)
    self.mBoardLimitsView?.bind_backColor (preferences_boardBackgroundColorForBoard_property)
    self.mBoardLimitsView?.bind_mouseGrid (self.rootObject.mBoardLimitsGridStep_property)
    self.mBoardLimitsView?.bind_gridStep (self.rootObject.mBoardLimitsGridStep_property)
    self.mBoardLimitsView?.bind_arrowKeyMagnitude (self.rootObject.mBoardLimitsGridStep_property)
    self.mBoardLimitsView?.bind_shiftArrowKeyMagnitude (self.rootObject.boardLimitsGridStepMultipliedByDisplayFactor_property)
    self.mBoardLimitsView?.bind_xPlacardUnit (self.rootObject.mBoardLimitsGridStepUnit_property)
    self.mBoardLimitsView?.bind_yPlacardUnit (self.rootObject.mBoardLimitsGridStepUnit_property)
    self.mBoardLimitsInspectorSegmentedControl?.bind_selectedPage (self.rootObject.mBoardLimitsSelectedInspector_property)
    self.mSelectedLimitDisplayUnitPopUp?.bind_selectedTag (self.rootObject.mBoardSelectedCurveDisplayUnit_property)
    self.mBoardCurvePointX1TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mX_property, self.rootObject.mBoardSelectedCurveDisplayUnit_property)
    self.mBoardCurvePointY1TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mY_property, self.rootObject.mBoardSelectedCurveDisplayUnit_property)
    self.mBoardCurveX2TextField?.bind_valueObserver (self.boardCurveSelectionController.p2Xstring_property)
    self.mBoardCurvePointX2TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mNextX_property, self.rootObject.mBoardSelectedCurveDisplayUnit_property)
    self.mBoardCurveY2TextField?.bind_valueObserver (self.boardCurveSelectionController.p2Ystring_property)
    self.mBoardCurvePointY2TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mNextY_property, self.rootObject.mBoardSelectedCurveDisplayUnit_property)
    self.mSelectedLimitShapePopUpButton?.bind_selectedIndex (self.boardCurveSelectionController.mShape_property)
    self.mBoardCurveControlPointsUnitPopUp?.bind_selectedTag (self.rootObject.mBoardLimitControlPointsDisplayUnit_property)
    self.mBoardCurveControlPointX1TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mCPX1_property, self.rootObject.mBoardLimitControlPointsDisplayUnit_property)
    self.mBoardCurveControlPointY1TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mCPY1_property, self.rootObject.mBoardLimitControlPointsDisplayUnit_property)
    self.mBoardCurveControlPointX2TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mCPX2_property, self.rootObject.mBoardLimitControlPointsDisplayUnit_property)
    self.mBoardCurveControlPointY2TextField?.bind_dimensionAndUnit (self.boardCurveSelectionController.mCPY2_property, self.rootObject.mBoardLimitControlPointsDisplayUnit_property)
    self.mBoardLimitsHorizontalFlipSwitch?.bind_value (self.rootObject.mBoardLimitsHorizontalFlip_property)
    self.mBoardLimitsVerticalFlipSwitch?.bind_value (self.rootObject.mBoardLimitsVerticalFlip_property)
    self.mBoardLimitsGridStylePopUpButton?.bind_selectedIndex (self.rootObject.mBoardLimitsGridStyle_property)
    self.mBoardLimitsGridDisplayFactorPopUpButton?.bind_selectedTag (self.rootObject.mBoardLimitsGridDisplayFactor_property)
    self.mBoardLimitsGridUnitPopUp?.bind_selectedTag (self.rootObject.mBoardLimitsGridStepUnit_property)
    self.mBoardLimitsGridTextField?.bind_dimensionAndUnit (self.rootObject.mBoardLimitsGridStep_property, self.rootObject.mBoardLimitsGridStepUnit_property)
    self.mBoardLimitsElementCountTextField?.bind_valueObserver (self.rootObject.borderElementCountString_property)
    self.mBoardLimitPointsTopTextField?.bind_valueObserver (self.rootObject.boardInteriorTop_property)
    self.mBoardLimitPointsBottomTextField?.bind_valueObserver (self.rootObject.boardInteriorBottom_property)
    self.mBoardLimitPointsLeftTextField?.bind_valueObserver (self.rootObject.boardInteriorLeft_property)
    self.mBoardLimitPointsRightTextField?.bind_valueObserver (self.rootObject.boardInteriorRight_property)
    self.mBoardPointsBoundingBoxUnitPopUp?.bind_selectedTag (self.rootObject.mBoardPointsBoundingBoxUnit_property)
    self.mBoardLimitBorderTopTextField?.bind_valueObserver (self.rootObject.boardLimitBorderTop_property)
    self.mBoardLimitBorderBottomTextField?.bind_valueObserver (self.rootObject.boardLimitBorderBottom_property)
    self.mBoardLimitBorderLeftTextField?.bind_valueObserver (self.rootObject.boardLimitBorderLeft_property)
    self.mBoardLimitBorderRightTextField?.bind_valueObserver (self.rootObject.boardLimitBorderRight_property)
    self.mBoardLimitsBoundingBoxUnitPopUp?.bind_selectedTag (self.rootObject.mBoardLimitsBoundingBoxUnit_property)
    self.mBoardLimitsWidthUnitPopUp?.bind_selectedTag (self.rootObject.mBoardLimitsWidthUnit_property)
    self.mBoardLimitsWidthTextField?.bind_dimensionAndUnit (self.rootObject.mBoardLimitsWidth_property, self.rootObject.mBoardLimitsWidthUnit_property)
    self.mBoardClearanceUnitPopUp?.bind_selectedTag (self.rootObject.mBoardClearanceUnit_property)
    self.mBoardClearanceTextField?.bind_dimensionAndUnit (self.rootObject.mBoardClearance_property, self.rootObject.mBoardClearanceUnit_property)
    self.mRectangularBoardWidthUnitPopUp?.bind_selectedTag (self.rootObject.mRectangularBoardWidthUnit_property)
    self.mRectangularBoardWidthTextField?.bind_dimensionAndUnit (self.rootObject.mRectangularBoardWidth_property, self.rootObject.mRectangularBoardWidthUnit_property)
    self.mRectangularBoardHeightUnitPopUp?.bind_selectedTag (self.rootObject.mRectangularBoardHeightUnit_property)
    self.mRectangularBoardHeightTextField?.bind_dimensionAndUnit (self.rootObject.mRectangularBoardHeight_property, self.rootObject.mRectangularBoardHeightUnit_property)
    self.mBoardShapePopUp?.bind_selectedSegment (self.rootObject.mBoardShape_property)
    self.mBoardInspectorSegmentedControl?.bind_selectedPage (self.rootObject.mBoardSelectedInspector_property)
    self.mLayerForNewTextMenu?.bind_selectedIndex (self.rootObject.mBoardLayerForNewText_property)
    self.mLayerForNewLineMenu?.bind_selectedIndex (self.rootObject.mBoardLayerForNewLine_property)
    self.mBoardSideForNewRestrictRectangleMenu?.bind_selectedIndex (self.rootObject.mBoardSideForNewRestrictRectangle_property)
    self.mBoardSideForNewTrackMenu?.bind_selectedIndex (self.rootObject.mBoardSideForNewTrack_property)
    self.mBoardDirectionForNewTrackMenu?.bind_selectedIndex (self.rootObject.mDirectionForNewTrack_property)
    self.mUnplacedPackageTableView?.bind_models (self.rootObject.unplacedPackages_property)
    self.mUnplacedPackagesCountTextField?.bind_valueObserver (self.unplacedPackagesCountString_property)
    self.mBoardView?.bind_underObjectsDisplay (self.rootObject.borderOutlineBackground_property)
    self.mBoardView?.bind_overObjectsDisplay (self.overDisplay_property)
    self.mBoardView?.bind_horizontalFlip (self.rootObject.mBoardHorizontalFlip_property)
    self.mBoardView?.bind_verticalFlip (self.rootObject.mBoardVerticalFlip_property)
    self.mBoardView?.bind_gridStyle (self.rootObject.mBoardGridStyle_property)
    self.mBoardView?.bind_gridDisplayFactor (self.rootObject.mBoardGridDisplayFactor_property)
    self.mBoardView?.bind_gridLineColor (preferences_lineColorGridForBoard_property)
    self.mBoardView?.bind_gridCrossColor (preferences_crossColorGridForBoard_property)
    self.mBoardView?.bind_zoom (self.rootObject.mBoardZoom_property)
    self.mBoardView?.bind_backColor (preferences_boardBackgroundColorForBoard_property)
    self.mBoardView?.bind_mouseGrid (self.rootObject.mBoardGridStep_property)
    self.mBoardView?.bind_gridStep (self.rootObject.mBoardGridStep_property)
    self.mBoardView?.bind_arrowKeyMagnitude (self.rootObject.mBoardGridStep_property)
    self.mBoardView?.bind_shiftArrowKeyMagnitude (self.rootObject.boardGridStepMultipliedByDisplayFactor_property)
    self.mBoardView?.bind_xPlacardUnit (self.rootObject.mBoardGridStepUnit_property)
    self.mBoardView?.bind_yPlacardUnit (self.rootObject.mBoardGridStepUnit_property)
    self.mSelectComponentsMenuItem?.bind_components (self.rootObject.componentsPlacedInBoard_property)
    self.mSelectNetsMenuItem?.bind_nets (self.rootObject.netNamesArray_property)
    self.mBoardHorizontalFlipSwitch?.bind_value (self.rootObject.mBoardHorizontalFlip_property)
    self.mBoardVerticalFlipSwitch?.bind_value (self.rootObject.mBoardVerticalFlip_property)
    self.mBoardGridStylePopUpButton?.bind_selectedIndex (self.rootObject.mBoardGridStyle_property)
    self.mBoardGridDisplayFactorPopUpButton?.bind_selectedTag (self.rootObject.mBoardGridDisplayFactor_property)
    self.mBoardGridUnitPopUp?.bind_selectedTag (self.rootObject.mBoardGridStepUnit_property)
    self.mBoardGridTextField?.bind_dimensionAndUnit (self.rootObject.mBoardGridStep_property, self.rootObject.mBoardGridStepUnit_property)
    self.mLayerConfigurationPopUp?.bind_layerConfiguration (self.rootObject.mLayerConfiguration_property)
    self.mLayoutClearancePopUp?.bind_selectedTag (self.rootObject.mLayoutClearanceUnit_property)
    self.mLayoutClearanceTextField?.bind_dimensionAndUnit (self.rootObject.mLayoutClearance_property, self.rootObject.mLayoutClearanceUnit_property)
    self.mCheckClearanceBetweenPadsOfSameNetSwitch?.bind_value (self.rootObject.mCheckClearanceBetweenPadsOfSameNet_property)
    self.mAutoRouterPreferredDirectionPopUp?.bind_selectedIndex (self.rootObject.mAutoRouterPreferredDirections_property)
    self.mAutorouterSnapAnglePopUp?.bind_selectedIndex (self.rootObject.mAutorouterSnapAngle_property)
    self.mAutoRouterRouteDirectionPopUp?.bind_selectedIndex (self.rootObject.mRouteDirection_property)
    self.mAutoRouterRouteOriginPopUp?.bind_selectedIndex (self.rootObject.mRouteOrigin_property)
    self.mTopSideTrackCountTextField?.bind_valueObserver (self.rootObject.topSideTrackCountString_property)
    self.mInner1LayerTrackCountTextField?.bind_valueObserver (self.rootObject.inner1LayerTrackCountString_property)
    self.mInner2LayerTrackCountTextField?.bind_valueObserver (self.rootObject.inner2LayerTrackCountString_property)
    self.mInner3LayerTrackCountTextField?.bind_valueObserver (self.rootObject.inner3LayerTrackCountString_property)
    self.mInner4LayerTrackCountTextField?.bind_valueObserver (self.rootObject.inner4LayerTrackCountString_property)
    self.mBackSideTrackCountTextField?.bind_valueObserver (self.rootObject.backSideTrackCountString_property)
    self.mTrackCountTextField?.bind_valueObserver (self.rootObject.trackCountString_property)
    self.mViaCountTextField?.bind_valueObserver (self.rootObject.viaCountString_property)
    self.mTrackLengthTextField?.bind_valueObserver (self.rootObject.trackLengthString_property)
    self.mTrackLengthUnitPopUp?.bind_selectedTag (self.rootObject.mTrackLengthUnit_property)
    self.mAutorouterInterfaceModeTabVView?.bind_selectedTabIndex (self.rootObject.mAutorouterInterfaceMode_property)
    self.mExportExistingTracksAndViasSwitch?.bind_value (self.rootObject.mExportExistingTracksAndVias_property)
    self.mIsPreservedByAutoRouterSwitch?.bind_value (self.boardTrackSelectionController.mIsPreservedByAutoRouter_property)
    self.mBoardTrackSidePopUpButton?.bind_selectedIndex (self.boardTrackSelectionController.mSide_property)
    self.mTrackNetNameTextField?.bind_valueObserver (self.boardTrackSelectionController.netName_property)
    self.mTrackNetClassNameTextField?.bind_valueObserver (self.boardTrackSelectionController.netClassName_property)
    self.mTrackDefaultWidthUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mDefaultTrackWidthUnit_property)
    self.mTrackDefaultWidthTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.netClassTrackWidth_property, self.boardTrackSelectionController.mDefaultTrackWidthUnit_property)
    self.mTrackCustomWidthUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mCustomTrackWidthUnit_property)
    self.mTrackCustomWidthTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.mCustomTrackWidth_property, self.boardTrackSelectionController.mCustomTrackWidthUnit_property)
    self.mUsesCustomTrackWidthSwitch?.bind_value (self.boardTrackSelectionController.mUsesCustomTrackWidth_property)
    self.mTrackInBoardRotationTextField?.bind_angle (self.boardTrackSelectionController.trackDirectionInDegrees_property)
    self.mTrackInBoardRotationSlider?.bind_angle (self.boardTrackSelectionController.trackDirectionInDegrees_property)
    self.mTrackLockView?.bind_angle (self.boardTrackSelectionController.trackDirectionInDegrees_property)
    self.mTrackLockView?.bind_manualLockP1 (self.boardTrackSelectionController.mManualLockP1_property)
    self.mTrackLockView?.bind_manualLockP2 (self.boardTrackSelectionController.mManualLockP2_property)
    self.mTrackLockView?.bind_p1ConnectedToSomePad (self.boardTrackSelectionController.p1ConnectedToSomePad_property)
    self.mTrackLockView?.bind_p2ConnectedToSomePad (self.boardTrackSelectionController.p2ConnectedToSomePad_property)
    self.mDirectionLockOnKnobDraggingPopUpButton?.bind_selectedIndex (self.boardTrackSelectionController.mDirectionLockOnKnobDragging_property)
    self.mBoardTrackP1xTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.computedP1X_property, self.boardTrackSelectionController.mP1XUnit_property)
    self.mBoardTrackP1xUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mP1XUnit_property)
    self.mBoardTrackP1yTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.computedP1Y_property, self.boardTrackSelectionController.mP1YUnit_property)
    self.mBoardTrackP1yUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mP1YUnit_property)
    self.mBoardTrackP2xTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.computedP2X_property, self.boardTrackSelectionController.mP2XUnit_property)
    self.mBoardTrackP2xUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mP2XUnit_property)
    self.mBoardTrackP2yTextField?.bind_dimensionAndUnit (self.boardTrackSelectionController.computedP2Y_property, self.boardTrackSelectionController.mP2YUnit_property)
    self.mBoardTrackP2yUnitPopUp?.bind_selectedTag (self.boardTrackSelectionController.mP2YUnit_property)
    self.mViaNetNameTextField?.bind_valueObserver (self.boardConnectorSelectionController.netNameFromTracks_property)
    self.mViaNetClassNameTextField?.bind_valueObserver (self.boardConnectorSelectionController.netClassName_property)
    self.mViaDefaultHoleDiameterUnitPopUp?.bind_selectedTag (self.boardConnectorSelectionController.mDefaultHoleDiameterUnit_property)
    self.mViaDefaultHoleDiameterTextField?.bind_dimensionAndUnit (self.boardConnectorSelectionController.viaDefaultHoleDiameter_property, self.boardConnectorSelectionController.mDefaultHoleDiameterUnit_property)
    self.mViaCustomHoleDiameterUnitPopUp?.bind_selectedTag (self.boardConnectorSelectionController.mCustomHoleDiameterUnit_property)
    self.mViaCustomHoleDiameterTextField?.bind_dimensionAndUnit (self.boardConnectorSelectionController.mCustomHoleDiameter_property, self.boardConnectorSelectionController.mCustomHoleDiameterUnit_property)
    self.mUsesCustomHoleDiameterSwitch?.bind_value (self.boardConnectorSelectionController.mUsesCustomHoleDiameter_property)
    self.mViaDefaultPadDiameterUnitPopUp?.bind_selectedTag (self.boardConnectorSelectionController.mDefaultPadDiameterUnit_property)
    self.mViaDefaultPadDiameterTextField?.bind_dimensionAndUnit (self.boardConnectorSelectionController.viaDefaultPadDiameter_property, self.boardConnectorSelectionController.mDefaultPadDiameterUnit_property)
    self.mViaCustomPadDiameterUnitPopUp?.bind_selectedTag (self.boardConnectorSelectionController.mCustomPadDiameterUnit_property)
    self.mViaCustomPadDiameterTextField?.bind_dimensionAndUnit (self.boardConnectorSelectionController.mCustomPadDiameter_property, self.boardConnectorSelectionController.mCustomPadDiameterUnit_property)
    self.mUsesCustomPadDiameterSwitch?.bind_value (self.boardConnectorSelectionController.mUsesCustomPadDiameter_property)
    self.mBoardLineWidthUnitPopUp?.bind_selectedTag (self.boardLineSelectionController.mWidthUnit_property)
    self.mBoardLineWidthTextField?.bind_dimensionAndUnit (self.boardLineSelectionController.mWidth_property, self.boardLineSelectionController.mWidthUnit_property)
    self.mBoardLineLayerPopUpButton?.bind_selectedIndex (self.boardLineSelectionController.mLayer_property)
    self.mBoardLineX1UnitPopUp?.bind_selectedTag (self.boardLineSelectionController.mX1Unit_property)
    self.mBoardLineX1TextField?.bind_dimensionAndUnit (self.boardLineSelectionController.mX1_property, self.boardLineSelectionController.mX1Unit_property)
    self.mBoardLineY1UnitPopUp?.bind_selectedTag (self.boardLineSelectionController.mY1Unit_property)
    self.mBoardLineY1TextField?.bind_dimensionAndUnit (self.boardLineSelectionController.mY1_property, self.boardLineSelectionController.mY1Unit_property)
    self.mBoardLineX2UnitPopUp?.bind_selectedTag (self.boardLineSelectionController.mX2Unit_property)
    self.mBoardLineX2TextField?.bind_dimensionAndUnit (self.boardLineSelectionController.mX2_property, self.boardLineSelectionController.mX2Unit_property)
    self.mBoardLineY2UnitPopUp?.bind_selectedTag (self.boardLineSelectionController.mY2Unit_property)
    self.mBoardLineY2TextField?.bind_dimensionAndUnit (self.boardLineSelectionController.mY2_property, self.boardLineSelectionController.mY2Unit_property)
    self.mFrontRestrictRectangleSwitch?.bind_value (self.restrictRectangleSelectionController.mIsInFrontLayer_property)
    self.mBackRestrictRectangleSwitch?.bind_value (self.restrictRectangleSelectionController.mIsInBackLayer_property)
    self.mBoardTextTextField?.bind_value (self.boardTextSelectionController.mText_property, sendContinously:true)
    self.mBoardTextFontSizeField?.bind_value (self.boardTextSelectionController.mFontSize_property, sendContinously:false, autoFormatter:false)
    self.mBoardTextLayerPopUpButton?.bind_selectedIndex (self.boardTextSelectionController.mLayer_property)
    self.mBoardTextHorizontalAlignmentSegmentedControl?.bind_selectedSegment (self.boardTextSelectionController.mHorizontalAlignment_property)
    self.mBoardTextVerticalAlignmentSegmentedControl?.bind_selectedSegment (self.boardTextSelectionController.mVerticalAlignment_property)
    self.mBoardTextRotationTextField?.bind_angle (self.boardTextSelectionController.mRotation_property)
    self.mBoardTextRotationSlider?.bind_angle (self.boardTextSelectionController.mRotation_property)
    self.mBoardTextWeightTextField?.bind_value (self.boardTextSelectionController.mWeight_property, sendContinously:false, autoFormatter:false)
    self.mBoardTextObliqueSwitch?.bind_value (self.boardTextSelectionController.mOblique_property)
    self.mSlavePadsShouldBeRoutedPopUpButton?.bind_value (self.componentInBoardSelectionController.mSlavePadsShouldBeRouted_property, item0:"should be insulated", item1:"should be routed")
    self.mDisplayLegendSwitch?.bind_value (self.componentInBoardSelectionController.mDisplayLegend_property)
    self.mShowRotationKnobInBoardSwitch?.bind_value (preferences_mShowRotationKnobInBoard_property)
    self.mComponentInBoardCenterXPopUp?.bind_selectedTag (self.componentInBoardSelectionController.mXUnit_property)
    self.mComponentInBoardCenterXTextField?.bind_dimensionAndUnit (self.componentInBoardSelectionController.mX_property, self.componentInBoardSelectionController.mXUnit_property)
    self.mComponentInBoardCenterYPopUp?.bind_selectedTag (self.componentInBoardSelectionController.mYUnit_property)
    self.mComponentInBoardCenterYTextField?.bind_dimensionAndUnit (self.componentInBoardSelectionController.mY_property, self.componentInBoardSelectionController.mYUnit_property)
    self.mBoardComponentRotationTextField?.bind_angle (self.componentInBoardSelectionController.mRotation_property)
    self.mBoardComponentRotationSlider?.bind_angle (self.componentInBoardSelectionController.mRotation_property)
    self.mBoardComponentRotationSegmentedControl?.bind_angle (self.componentInBoardSelectionController.mRotation_property)
    self.mBoardComponentSidePopUpButton?.bind_selectedIndex (self.componentInBoardSelectionController.mSide_property)
    self.mDisplayComponentNameSwitch?.bind_value (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property)
    self.mComponentNameFontSizeField?.bind_value (self.componentInBoardSelectionController.mNameFontSize_property, sendContinously:false, autoFormatter:false)
    self.mComponentNameRotationTextField?.bind_angle (self.componentInBoardSelectionController.mNameRotation_property)
    self.mComponentNameRotationSlider?.bind_angle (self.componentInBoardSelectionController.mNameRotation_property)
    self.mComponentNameRotationSegmentedControl?.bind_angle (self.componentInBoardSelectionController.mNameRotation_property)
    self.mBoardComponentNameTextField?.bind_valueObserver (self.componentInBoardSelectionController.componentName_property)
    self.mDisplayComponentValueSwitch?.bind_value (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property)
    self.mComponentValueFontSizeField?.bind_value (self.componentInBoardSelectionController.mValueFontSize_property, sendContinously:false, autoFormatter:false)
    self.mComponentValueRotationTextField?.bind_angle (self.componentInBoardSelectionController.mValueRotation_property)
    self.mComponentValueRotationSlider?.bind_angle (self.componentInBoardSelectionController.mValueRotation_property)
    self.mComponentValueRotationSegmentedControl?.bind_angle (self.componentInBoardSelectionController.mValueRotation_property)
    self.mBoardComponentValueTextField?.bind_value (self.componentInBoardSelectionController.mComponentValue_property, sendContinously:true)
    self.mDisplayFrontPadsSwitch?.bind_value (preferences_displayFrontPadsForBoard_property)
    self.mDisplayFrontPadsColorWell?.bind_color (preferences_frontSidePadColorForBoard_property, sendContinously:true)
    self.mDisplayBackPadsSwitch?.bind_value (preferences_displayBackPadsForBoard_property)
    self.mDisplayBackPadsColorWell?.bind_color (preferences_backSidePadColorForBoard_property, sendContinously:true)
    self.mDisplayPadNumbersSwitch?.bind_value (preferences_displayPadNumbersForBoard_property)
    self.mDisplayPadNumbersColorWell?.bind_color (preferences_padNumberColorForBoard_property, sendContinously:true)
    self.mDisplayFrontLegendSwitch?.bind_value (preferences_displayFrontLegendForBoard_property)
    self.mDisplayFrontLegendColorWell?.bind_color (preferences_frontSideLegendColorForBoard_property, sendContinously:true)
    self.mDisplayBackLegendSwitch?.bind_value (preferences_displayBackLegendForBoard_property)
    self.mDisplayBackLegendColorWell?.bind_color (preferences_backSideLegendColorForBoard_property, sendContinously:true)
    self.mDisplayFrontLayoutSwitch?.bind_value (preferences_displayFrontLayoutForBoard_property)
    self.mDisplayFrontLayoutColorWell?.bind_color (preferences_frontSideLayoutColorForBoard_property, sendContinously:true)
    self.mDisplayInner1LayoutSwitch?.bind_value (preferences_displayInner1LayoutForBoard_property)
    self.mDisplayInner1LayoutColorWell?.bind_color (preferences_inner1LayoutColorForBoard_property, sendContinously:true)
    self.mDisplayInner2LayoutSwitch?.bind_value (preferences_displayInner2LayoutForBoard_property)
    self.mDisplayInner2LayoutColorWell?.bind_color (preferences_inner2LayoutColorForBoard_property, sendContinously:true)
    self.mDisplayInner3LayoutSwitch?.bind_value (preferences_displayInner3LayoutForBoard_property)
    self.mDisplayInner3LayoutColorWell?.bind_color (preferences_inner3LayoutColorForBoard_property, sendContinously:true)
    self.mDisplayInner4LayoutSwitch?.bind_value (preferences_displayInner4LayoutForBoard_property)
    self.mDisplayInner4LayoutColorWell?.bind_color (preferences_inner4LayoutColorForBoard_property, sendContinously:true)
    self.mDisplayBackLayoutSwitch?.bind_value (preferences_displayBackLayoutForBoard_property)
    self.mDisplayBackLayoutColorWell?.bind_color (preferences_backSideLayoutColorForBoard_property, sendContinously:true)
    self.mDisplayFrontRestrictRectanglesSwitch?.bind_value (preferences_displayFrontRestrictRectangles_property)
    self.mDisplayFrontRestrictRectanglesColorWell?.bind_color (preferences_frontSideRestrictRectangleColorForBoard_property, sendContinously:true)
    self.mDisplayBackRestrictRectanglesSwitch?.bind_value (preferences_displayBackRestrictRectangles_property)
    self.mDisplayBackRestrictRectanglesColorWell?.bind_color (preferences_backSideRestrictRectangleColorForBoard_property, sendContinously:true)
    self.mDisplayBoardLimitsColorWell?.bind_color (preferences_boardLimitsColorForBoard_property, sendContinously:true)
    self.mDisplayBoardClearanceColorWell?.bind_color (preferences_boardClearanceColorForBoard_property, sendContinously:true)
    self.mBoardBackgroundColorWell?.bind_color (preferences_boardBackgroundColorForBoard_property, sendContinously:true)
    self.mErrorOrWarningIssueSlider?.bind_doubleValue (self.rootObject.mErrorOrWarningIssueSize_property, sendContinously:true)
    self.mControlKeyHiliteDiameterSlider?.bind_doubleValue (self.rootObject.mControlKeyHiliteDiameter_property, sendContinously:true)
    self.mRastnetDisplayPopUpButton?.bind_selectedIndex (self.rootObject.mRastnetDisplay_property)
    self.mRasnetNetNameSelectionPopUpButton?.bind_selectedNameInArray (self.rootObject.mRastnetDisplayedNetName_property, self.rootObject.netNamesArray_property)
    self.mRasnetComponentNameSelectionPopUpButton?.bind_selectedNameInArray (self.rootObject.mRastnetDisplayedComponentName_property, self.rootObject.placedComponentNameArray_property)
    self.mArtworkNameTextField?.bind_valueObserver (self.rootObject.mArtworkName_property)
    self.mArtworlImportButton?.bind_title (self.artworlImportButtonTitle_property)
    self.mPDFBoardBackgroundColorWell?.bind_color (self.rootObject.mPDFBoardBackgroundColor_property, sendContinously:false)
    self.mMinPPTPTTTWinEBUnitPopUp?.bind_selectedTag (self.rootObject.minPPTPTTTWdisplayUnit_property)
    self.mMinPPTPTTTWdisplayUnitTextField?.bind_dimensionAndUnit (self.rootObject.minPPTPTTTW_property, self.rootObject.minPPTPTTTWdisplayUnit_property)
    self.mOARUnitPopUp?.bind_selectedTag (self.rootObject.minValueForOARdisplayUnit_property)
    self.mOARValueTextField?.bind_dimensionAndUnit (self.rootObject.minValueForOARinEBUnit_property, self.rootObject.minValueForOARdisplayUnit_property)
    self.mPHDUnitPopUp?.bind_selectedTag (self.rootObject.minValueForPHDdisplayUnit_property)
    self.mPHDValueTextField?.bind_dimensionAndUnit (self.rootObject.minValueForPHDinEBUnit_property, self.rootObject.minValueForPHDdisplayUnit_property)
    self.minValueForBoardLimitUnitPopUp?.bind_selectedTag (self.rootObject.minValueForBoardLimitWidthDisplayUnit_property)
    self.minValueForBoardLimitTextField?.bind_dimensionAndUnit (self.rootObject.minValueForBoardLimitWidth_property, self.rootObject.minValueForBoardLimitWidthDisplayUnit_property)
    self.mDrillDataFileExtensionTextField?.bind_valueObserver (self.rootObject.drillDataFileExtension_property)
    self.mExtensionTextField?.bind_valueObserver (self.mDataSelection.fileExtension_property)
    self.mDrawBoardLimitsSwitch?.bind_valueObserver (self.mDataSelection.drawBoardLimits_property)
    self.mDrawComponentValuesTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawComponentValuesTopSide_property)
    self.mDrawComponentValuesBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawComponentValuesBottomSide_property)
    self.mDrawComponentNamesTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawComponentNamesTopSide_property)
    self.mDrawComponentNamesBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawComponentNamesBottomSide_property)
    self.mDrawPackageLegendTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawPackageLegendTopSide_property)
    self.mDrawPackageLegendBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawPackageLegendBottomSide_property)
    self.mDrawPadsTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawPadsTopSide_property)
    self.mDrawPadsBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawPadsBottomSide_property)
    self.mDrawTextsLayoutTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawTextsLayoutTopSide_property)
    self.mDrawTextsLayoutBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawTextsLayoutBottomSide_property)
    self.mDrawTextsLegendTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawTextsLegendTopSide_property)
    self.mDrawTextsLegendBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawTextsLegendBottomSide_property)
    self.mDrawTracksTopSideSwitch?.bind_valueObserver (self.mDataSelection.drawTracksTopSide_property)
    self.mDrawTracksBottomSideSwitch?.bind_valueObserver (self.mDataSelection.drawTracksBottomSide_property)
    self.mDrawTracksInner1LayerSwitch?.bind_valueObserver (self.mDataSelection.drawTracksInner1Layer_property)
    self.mDrawTracksInner2LayerSwitch?.bind_valueObserver (self.mDataSelection.drawTracksInner2Layer_property)
    self.mDrawTracksInner3LayerSwitch?.bind_valueObserver (self.mDataSelection.drawTracksInner3Layer_property)
    self.mDrawTracksInner4LayerSwitch?.bind_valueObserver (self.mDataSelection.drawTracksInner4Layer_property)
    self.mDrawTraversingPadsSwitch?.bind_valueObserver (self.mDataSelection.drawTraversingPads_property)
    self.mDrawViasSwitch?.bind_valueObserver (self.mDataSelection.drawVias_property)
    self.mHorizontalMirrorSwitch?.bind_valueObserver (self.mDataSelection.horizontalMirror_property)
    self.mArtworkCommentTextView?.bind_valueObserver (self.rootObject.artworkComments_property)
    self.mArtworkVersionTextField?.bind_valueObserver (self.rootObject.mArtworkVersion_property, autoFormatter:false)
    self.mArtworkTitleTextField?.bind_valueObserver (self.rootObject.artworkTitle_property)
    self.mArtworkLayerConfigurationTextField?.bind_valueObserver (self.layerConfigurationString_property)
  //--------------------------- Install multiple bindings
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.componentController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mDuplicateSelectedComponentsActionButton
      )
      self.mController_mDuplicateSelectedComponentsActionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.componentController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mRemoveSelectedComponentsActionButton
      )
      self.mController_mRemoveSelectedComponentsActionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.canChangePackage_property),
        outlet: self.mChangePackageOfSelectedComponentsActionButton
      )
      self.mController_mChangePackageOfSelectedComponentsActionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.componentController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mChangeValueOfSelectedComponentsActionButton
      )
      self.mController_mChangeValueOfSelectedComponentsActionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.componentController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mRevealPackageOfSelectedComponentsButton
      )
      self.mController_mRevealPackageOfSelectedComponentsButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.componentController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mRenameComponentButton
      )
      self.mController_mRenameComponentButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.canRemoveNetClasses_property),
        outlet: self.mRemoveNetClassButton
      )
      self.mController_mRemoveNetClassButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.netClassController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mEditNetClassButton
      )
      self.mController_mEditNetClassButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.rootObject.mDevices_property.count_property), .gt, .literalInt (0)),
        outlet: self.mRemoveEmbeddedDevicesButton
      )
      self.mController_mRemoveEmbeddedDevicesButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.rootObject.mDevices_property.count_property), .gt, .literalInt (0)), .or, .intcmp (.id (self.rootObject.mFonts_property.count_property), .gt, .literalInt (0))),
        outlet: self.mResetDevicesAndFontsVersionButton
      )
      self.mController_mResetDevicesAndFontsVersionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.rootObject.mDevices_property.count_property), .gt, .literalInt (0)), .or, .intcmp (.id (self.rootObject.mFonts_property.count_property), .gt, .literalInt (0))),
        outlet: self.mUpdateDevicesAndFontsButton
      )
      self.mController_mUpdateDevicesAndFontsButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectFontController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mEditFontButton
      )
      self.mController_mEditFontButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectFontController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mUpdateFontButton
      )
      self.mController_mUpdateFontButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.projectFontController.selectedArray_property.count_property), .gt, .literalInt (0)), .and, .id (self.canRemoveSelectedFonts_property)),
        outlet: self.mRemoveFontButton
      )
      self.mController_mRemoveFontButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectFontController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mResetFontVersionButton
      )
      self.mController_mResetFontVersionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectDeviceController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mResetSelectedDeviceVersionButton
      )
      self.mController_mResetSelectedDeviceVersionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.canRemoveSelectedDevices_property),
        outlet: self.mRemoveDeviceButton
      )
      self.mController_mRemoveDeviceButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectDeviceController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mEditDeviceButton
      )
      self.mController_mEditDeviceButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectDeviceController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mExportDeviceButton
      )
      self.mController_mExportDeviceButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.projectDeviceController.selectedArray_property.count_property), .gt, .literalInt (0)),
        outlet: self.mUpdateDeviceButton
      )
      self.mController_mUpdateDeviceButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.schematicSheetOrientationIsCustom_property)),
        outlet: self.mSchematicCustomSizeView
      )
      self.mController_mSchematicCustomSizeView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.rootObject.mSheets_property.count_property), .gt, .literalInt (1)),
        outlet: self.mRemoveSheetButton
      )
      self.mController_mRemoveSheetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.wireInSchematicSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)), .and, .id (self.wireInSchematicSelectionController.hasNet_property)),
        outlet: self.mWireRenameNetButton
      )
      self.mController_mWireRenameNetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.wireInSchematicSelectionController.selectedArray_property.count_property), .gt, .literalInt (0)), .and, .id (self.wireInSchematicSelectionController.hasNet_property)),
        outlet: self.mWireRenameNetWithUniqueNewNameButton
      )
      self.mController_mWireRenameNetWithUniqueNewNameButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.wireInSchematicSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)), .and, .id (self.wireInSchematicSelectionController.hasNet_property)),
        outlet: self.mSchematicWireMergeSubnetButton
      )
      self.mController_mSchematicWireMergeSubnetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .boolcmp (.intcmp (.id (self.wireInSchematicSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)), .and, .id (self.wireInSchematicSelectionController.hasNet_property)),
        outlet: self.mSchematicWireInsulateSubnetButton
      )
      self.mController_mSchematicWireInsulateSubnetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.schematicLabelSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mSchematicsLabelRenameNetButton
      )
      self.mController_mSchematicsLabelRenameNetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.schematicLabelSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mSchematicLabelMergeSubnetButton
      )
      self.mController_mSchematicLabelMergeSubnetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.schematicLabelSelectionController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mSchematicLabelInsulateSubnetButton
      )
      self.mController_mSchematicLabelInsulateSubnetButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.schematicObjectsController.selectedArray_property.count_property), .eq, .literalInt (1)),
        outlet: self.mRenameComponentFromComponentSymbolButton
      )
      self.mController_mRenameComponentFromComponentSymbolButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.netCount_property), .gt, .literalInt (0)),
        outlet: self.mRenameNetInNetTabButton
      )
      self.mController_mRenameNetInNetTabButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .intcmp (.id (self.netCount_property), .gt, .literalInt (0)),
        outlet: self.mSelectNetClassInNetTabButton
      )
      self.mController_mSelectNetClassInNetTabButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .intcmp (.id (self.rootObject.netWarningCount_property), .eq, .literalInt (0)),
        outlet: self.mNetWarningImageView
      )
      self.mController_mNetWarningImageView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .intcmp (.id (self.rootObject.netWarningCount_property), .eq, .literalInt (0)),
        outlet: self.mNetWarningTextField
      )
      self.mController_mNetWarningTextField_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .id (self.boardCurveSelectionController.isLine_property),
        outlet: self.mLimitCurveBezierControlPointsView
      )
      self.mController_mLimitCurveBezierControlPointsView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.rootObject.boardShapeIsRectangular_property)),
        outlet: self.mMessageBoardIsRectangularView
      )
      self.mController_mMessageBoardIsRectangularView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.rootObject.boardShapeIsRectangular_property)),
        outlet: self.mRectangularBoardWidthHeighView
      )
      self.mController_mRectangularBoardWidthHeighView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .id (self.rootObject.boardShapeIsRectangular_property),
        outlet: self.mBezierPathBoardHelperView
      )
      self.mController_mBezierPathBoardHelperView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.trackCanRotate_property),
        outlet: self.mTrackInBoardRotationTextField
      )
      self.mController_mTrackInBoardRotationTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.trackCanRotate_property),
        outlet: self.mTrackInBoardRotationSlider
      )
      self.mController_mTrackInBoardRotationSlider_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.p1CanMove_property),
        outlet: self.mBoardTrackP1xTextField
      )
      self.mController_mBoardTrackP1xTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.p1CanMove_property),
        outlet: self.mBoardTrackP1yTextField
      )
      self.mController_mBoardTrackP1yTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.p2CanMove_property),
        outlet: self.mBoardTrackP2xTextField
      )
      self.mController_mBoardTrackP2xTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.boardTrackSelectionController.p2CanMove_property),
        outlet: self.mBoardTrackP2yTextField
      )
      self.mController_mBoardTrackP2yTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.restrictRectangleSelectionController.mIsInBackLayer_property),
        outlet: self.mFrontRestrictRectangleSwitch
      )
      self.mController_mFrontRestrictRectangleSwitch_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.restrictRectangleSelectionController.mIsInFrontLayer_property),
        outlet: self.mBackRestrictRectangleSwitch
      )
      self.mController_mBackRestrictRectangleSwitch_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.hasSlavePads_property),
        outlet: self.mSlavePadsShouldBeRoutedPopUpButton
      )
      self.mController_mSlavePadsShouldBeRoutedPopUpButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property),
        outlet: self.mComponentNameFontSizeField
      )
      self.mController_mComponentNameFontSizeField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property),
        outlet: self.mComponentNameRotationTextField
      )
      self.mController_mComponentNameRotationTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property),
        outlet: self.mComponentNameRotationSlider
      )
      self.mController_mComponentNameRotationSlider_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property),
        outlet: self.mComponentNameRotationSegmentedControl
      )
      self.mController_mComponentNameRotationSegmentedControl_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mNameIsVisibleInBoard_property),
        outlet: self.mBoardComponentNameFontPopUpButton
      )
      self.mController_mBoardComponentNameFontPopUpButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mComponentValueFontSizeField
      )
      self.mController_mComponentValueFontSizeField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mComponentValueRotationTextField
      )
      self.mController_mComponentValueRotationTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mComponentValueRotationSlider
      )
      self.mController_mComponentValueRotationSlider_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mComponentValueRotationSegmentedControl
      )
      self.mController_mComponentValueRotationSegmentedControl_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mBoardComponentValueTextField
      )
      self.mController_mBoardComponentValueTextField_enabled = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .id (self.componentInBoardSelectionController.mValueIsVisibleInBoard_property),
        outlet: self.mBoardComponentValueFontPopUpButton
      )
      self.mController_mBoardComponentValueFontPopUpButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.rastnetDisplayOneNet_property)),
        outlet: self.mRasnetNetNameSelectionPopUpButton
      )
      self.mController_mRasnetNetNameSelectionPopUpButton_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.rastnetDisplayComponentNet_property)),
        outlet: self.mRasnetComponentNameSelectionPopUpButton
      )
      self.mController_mRasnetComponentNameSelectionPopUpButton_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .not (.id (self.rootObject.mArtwork_none)),
        outlet: self.mNoArtworkMessageTextField
      )
      self.mController_mNoArtworkMessageTextField_hidden = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .id (self.rootObject.mArtwork_none),
        outlet: self.mArtworkSettingsTabView
      )
      self.mController_mArtworkSettingsTabView_hidden = controller
    }
    do{
      let controller = MultipleBindingController_enabled (
        computeFunction: .not (.id (self.rootObject.mArtwork_none)),
        outlet: self.mGenerateProductFilesActionButton
      )
      self.mController_mGenerateProductFilesActionButton_enabled = controller
    }
    do{
      let controller = MultipleBindingController_hidden (
        computeFunction: .id (self.documentFilePathOk_property),
        outlet: self.mIncorrectFileNameMessageView
      )
      self.mController_mIncorrectFileNameMessageView_hidden = controller
    }
    if LOG_OPERATION_DURATION {
      let durationMS = Int (Date ().timeIntervalSince (start) * 1000.0)
      Swift.print ("Install bindings \(durationMS) ms")
    }
  }

  //····················································································································

  final private func setTargetsAndActions () {
     let start = Date ()
   //--------------------------- Set targets / actions
    self.mAddComponentButton?.target = self
    self.mAddComponentButton?.action = #selector (ProjectDocument.addComponentAction (_:))
    self.mDuplicateSelectedComponentsActionButton?.target = self
    self.mDuplicateSelectedComponentsActionButton?.action = #selector (ProjectDocument.duplicateSelectedComponentsAction (_:))
    self.mRemoveSelectedComponentsActionButton?.target = self
    self.mRemoveSelectedComponentsActionButton?.action = #selector (ProjectDocument.removeSelectedComponentsAction (_:))
    self.mChangePackageOfSelectedComponentsActionButton?.target = self
    self.mChangePackageOfSelectedComponentsActionButton?.action = #selector (ProjectDocument.changePackageOfSelectedComponentsAction (_:))
    self.mChangeValueOfSelectedComponentsActionButton?.target = self
    self.mChangeValueOfSelectedComponentsActionButton?.action = #selector (ProjectDocument.changeValueOfSelectedComponentsAction (_:))
    self.mRevealPackageOfSelectedComponentsButton?.target = self
    self.mRevealPackageOfSelectedComponentsButton?.action = #selector (ProjectDocument.revealPackageOfSelectedComponentsAction (_:))
    self.mAddNetClassButton?.target = self
    self.mAddNetClassButton?.action = #selector (ProjectDocument.addNetClassAction (_:))
    self.mRemoveNetClassButton?.target = self
    self.mRemoveNetClassButton?.action = #selector (ProjectDocument.removeNetClassAction (_:))
    self.mEditNetClassButton?.target = self
    self.mEditNetClassButton?.action = #selector (ProjectDocument.editNetClassAction (_:))
    self.mRemoveEmbeddedDevicesButton?.target = self
    self.mRemoveEmbeddedDevicesButton?.action = #selector (ProjectDocument.removeEmbeddedDevicesAction (_:))
    self.mResetDevicesAndFontsVersionButton?.target = self
    self.mResetDevicesAndFontsVersionButton?.action = #selector (ProjectDocument.resetDevicesAndFontsVersionAction (_:))
    self.mUpdateDevicesAndFontsButton?.target = self
    self.mUpdateDevicesAndFontsButton?.action = #selector (ProjectDocument.updateDevicesAndFontsAction (_:))
    self.mAddFontButton?.target = self
    self.mAddFontButton?.action = #selector (ProjectDocument.addFontAction (_:))
    self.mEditFontButton?.target = self
    self.mEditFontButton?.action = #selector (ProjectDocument.editFontAction (_:))
    self.mUpdateFontButton?.target = self
    self.mUpdateFontButton?.action = #selector (ProjectDocument.updateFontAction (_:))
    self.mRemoveFontButton?.target = self
    self.mRemoveFontButton?.action = #selector (ProjectDocument.removeFontAction (_:))
    self.mResetFontVersionButton?.target = self
    self.mResetFontVersionButton?.action = #selector (ProjectDocument.resetFontVersionAction (_:))
    self.mResetSelectedDeviceVersionButton?.target = self
    self.mResetSelectedDeviceVersionButton?.action = #selector (ProjectDocument.resetSelectedDeviceVersionAction (_:))
    self.mRemoveDeviceButton?.target = self
    self.mRemoveDeviceButton?.action = #selector (ProjectDocument.removeDeviceAction (_:))
    self.mEditDeviceButton?.target = self
    self.mEditDeviceButton?.action = #selector (ProjectDocument.editDeviceAction (_:))
    self.mExportDeviceButton?.target = self
    self.mExportDeviceButton?.action = #selector (ProjectDocument.exportDeviceAction (_:))
    self.mUpdateDeviceButton?.target = self
    self.mUpdateDeviceButton?.action = #selector (ProjectDocument.updateDeviceAction (_:))
    self.mNewSheetButton?.target = self
    self.mNewSheetButton?.action = #selector (ProjectDocument.newSheetAction (_:))
    self.mRemoveSheetButton?.target = self
    self.mRemoveSheetButton?.action = #selector (ProjectDocument.removeSheetAction (_:))
    self.mSetDateToNowButton?.target = self
    self.mSetDateToNowButton?.action = #selector (ProjectDocument.setDateToNowAction (_:))
    self.mOpenSetDateDialogButton?.target = self
    self.mOpenSetDateDialogButton?.action = #selector (ProjectDocument.openSetDateDialogAction (_:))
    self.mLayerConfigurationPopUp?.target = self
    self.mLayerConfigurationPopUp?.action = #selector (ProjectDocument.changeLayerConfigurationAction (_:))
    self.mLaunchFreeRouterWithoutDocumentButton?.target = self
    self.mLaunchFreeRouterWithoutDocumentButton?.action = #selector (ProjectDocument.launchFreeRouterWithoutAnyDocument (_:))
    self.mLaunchFreeRouterWithDocumentButton?.target = self
    self.mLaunchFreeRouterWithDocumentButton?.action = #selector (ProjectDocument.launchFreeRouterWithRouterDocument (_:))
    self.mImportSESFromBasicTabButton?.target = self
    self.mImportSESFromBasicTabButton?.action = #selector (ProjectDocument.importSESFromBasicTabAction (_:))
    self.mArtworlImportButton?.target = self
    self.mArtworlImportButton?.action = #selector (ProjectDocument.importArtworkAction (_:))
    self.mGenerateProductFilesActionButton?.target = self
    self.mGenerateProductFilesActionButton?.action = #selector (ProjectDocument.generateProductFilesAction (_:))
    if LOG_OPERATION_DURATION {
      let durationMS = Int (Date ().timeIntervalSince (start) * 1000.0)
      Swift.print ("Set target and actions \(durationMS) ms")
    }
  }

  //····················································································································
  //    windowControllerDidLoadNib
  //····················································································································

  override func windowControllerDidLoadNib (_ aController: NSWindowController) {
    super.windowControllerDidLoadNib (aController)
    self.checkOutletConnections ()
    self.configureProperties ()
    self.installBindings ()
    self.setTargetsAndActions ()
  //--------------------------- Read documentFileName model
    self.documentFileName_property.mReadModelFunction = { [weak self] in
      if let r = self?.displayName {
        return .single (r)
      }else{
        return .single ("")
      }
    }
  }

  //····················································································································
  //   removeUserInterface
  //····················································································································

  override func removeUserInterface () {
    super.removeUserInterface ()
  //--------------------------- Unbind regular bindings
    self.mPageSegmentedControl?.unbind_selectedPage ()
    self.mSchematicStatusImageViewInToolbar?.unbind_image ()
    self.mSchematicStatusImageViewInToolbar?.unbind_tooltip ()
    self.mBoardStatusImageViewInToolbar?.unbind_image ()
    self.mBoardStatusImageViewInToolbar?.unbind_tooltip ()
    self.mERCStatusImageViewInToolbar?.unbind_image ()
    self.mERCStatusImageViewInToolbar?.unbind_tooltip ()
    self.mNewComponentFromDevicePullDownButton?.unbind_deviceNames ()
    self.mComponentCountTextField?.unbind_valueObserver ()
    self.mDevicePackageTableView?.unbind_array ()
    self.mDeviceSymbolTypeTableView?.unbind_symbolDictionary ()
    self.mDeviceSymbolTableView?.unbind_array ()
    self.mPinPadAssignmentTableView?.unbind_array ()
    self.mSchematicsInspectorSegmentedControl?.unbind_selectedPage ()
    self.mCanariDefaultNetClassPopUpButton?.unbind_netClasses ()
    self.mUnplacedSymbolsTableView?.unbind_models ()
    self.mUnplacedSymbolsTextField?.unbind_valueObserver ()
    self.mSchematicsHorizontalFlipSwitch?.unbind_value ()
    self.mSchematicsVerticalFlipSwitch?.unbind_value ()
    self.mSchematicsGridStylePopUpButton?.unbind_selectedIndex ()
    self.mSchematicsGridDisplayFactorPopUpButton?.unbind_selectedTag ()
    self.mSchematicBackColorColorWell?.unbind_color ()
    self.mSchematicsTitleTextField?.unbind_value ()
    self.mSchematicsVersionTextField?.unbind_value ()
    self.mSchematicsSheetOrientationSegmentedControl?.unbind_selectedSegment ()
    self.mSchematicCustomWidthUnitPopUp?.unbind_selectedTag ()
    self.mSchematicCustomWidthTextField?.unbind_dimensionAndUnit ()
    self.mSchematicCustomHeightUnitPopUp?.unbind_selectedTag ()
    self.mSchematicCustomHeightTextField?.unbind_dimensionAndUnit ()
    self.mSelectedSheetTitleTextField?.unbind_value ()
    self.mSchematicsView?.unbind_underObjectsDisplay ()
    self.mSchematicsView?.unbind_overObjectsDisplay ()
    self.mSchematicsView?.unbind_horizontalFlip ()
    self.mSchematicsView?.unbind_verticalFlip ()
    self.mSchematicsView?.unbind_gridStyle ()
    self.mSchematicsView?.unbind_gridDisplayFactor ()
    self.mSchematicsView?.unbind_gridLineColor ()
    self.mSchematicsView?.unbind_gridCrossColor ()
    self.mSchematicsView?.unbind_zoom ()
    self.mSchematicsView?.unbind_backColor ()
    self.mWireNetNameTextField?.unbind_valueObserver ()
    self.mNCRotationSegmentedControl?.unbind_quadrant ()
    self.mCommentInSchematicsTextField?.unbind_value ()
    self.mCommentSizeInSchematicsTextField?.unbind_value ()
    self.mCommentSizeInSchematicsSlider?.unbind_doubleValue ()
    self.mCommentColorInSchematicsTextField?.unbind_color ()
    self.mCommentInSchematicsHorizontalAlignmentSegmentedControl?.unbind_selectedSegment ()
    self.mCommentInSchematicsVerticalAlignmentSegmentedControl?.unbind_selectedSegment ()
    self.mSchematicsLabelRotationSegmentedControl?.unbind_quadrant ()
    self.mSchematicsLabelNetNameTextField?.unbind_valueObserver ()
    self.mComponentSymbolShowComponentValueSwitch?.unbind_value ()
    self.mComponentSymbolComponentNameTextField?.unbind_valueObserver ()
    self.mComponentSymbolValueTextField?.unbind_value ()
    self.mComponentSymbolDeviceNameTextField?.unbind_valueObserver ()
    self.mComponentSymbolTypeNameTextField?.unbind_valueObserver ()
    self.mComponentSymbolInstanceNameTextField?.unbind_valueObserver ()
    self.mSymbolRotationSegmentedControl?.unbind_quadrant ()
    self.mSymbolMirrorSwitch?.unbind_value ()
    self.mNetInfoTableView?.unbind_netInfo ()
    self.mNetCountTextField?.unbind_valueObserver ()
    self.mNetWarningTextField?.unbind_valueObserver ()
    self.mBoardLimitsView?.unbind_underObjectsDisplay ()
    self.mBoardLimitsView?.unbind_horizontalFlip ()
    self.mBoardLimitsView?.unbind_verticalFlip ()
    self.mBoardLimitsView?.unbind_gridStyle ()
    self.mBoardLimitsView?.unbind_gridDisplayFactor ()
    self.mBoardLimitsView?.unbind_gridLineColor ()
    self.mBoardLimitsView?.unbind_gridCrossColor ()
    self.mBoardLimitsView?.unbind_zoom ()
    self.mBoardLimitsView?.unbind_backColor ()
    self.mBoardLimitsView?.unbind_mouseGrid ()
    self.mBoardLimitsView?.unbind_gridStep ()
    self.mBoardLimitsView?.unbind_arrowKeyMagnitude ()
    self.mBoardLimitsView?.unbind_shiftArrowKeyMagnitude ()
    self.mBoardLimitsView?.unbind_xPlacardUnit ()
    self.mBoardLimitsView?.unbind_yPlacardUnit ()
    self.mBoardLimitsInspectorSegmentedControl?.unbind_selectedPage ()
    self.mSelectedLimitDisplayUnitPopUp?.unbind_selectedTag ()
    self.mBoardCurvePointX1TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurvePointY1TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurveX2TextField?.unbind_valueObserver ()
    self.mBoardCurvePointX2TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurveY2TextField?.unbind_valueObserver ()
    self.mBoardCurvePointY2TextField?.unbind_dimensionAndUnit ()
    self.mSelectedLimitShapePopUpButton?.unbind_selectedIndex ()
    self.mBoardCurveControlPointsUnitPopUp?.unbind_selectedTag ()
    self.mBoardCurveControlPointX1TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurveControlPointY1TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurveControlPointX2TextField?.unbind_dimensionAndUnit ()
    self.mBoardCurveControlPointY2TextField?.unbind_dimensionAndUnit ()
    self.mBoardLimitsHorizontalFlipSwitch?.unbind_value ()
    self.mBoardLimitsVerticalFlipSwitch?.unbind_value ()
    self.mBoardLimitsGridStylePopUpButton?.unbind_selectedIndex ()
    self.mBoardLimitsGridDisplayFactorPopUpButton?.unbind_selectedTag ()
    self.mBoardLimitsGridUnitPopUp?.unbind_selectedTag ()
    self.mBoardLimitsGridTextField?.unbind_dimensionAndUnit ()
    self.mBoardLimitsElementCountTextField?.unbind_valueObserver ()
    self.mBoardLimitPointsTopTextField?.unbind_valueObserver ()
    self.mBoardLimitPointsBottomTextField?.unbind_valueObserver ()
    self.mBoardLimitPointsLeftTextField?.unbind_valueObserver ()
    self.mBoardLimitPointsRightTextField?.unbind_valueObserver ()
    self.mBoardPointsBoundingBoxUnitPopUp?.unbind_selectedTag ()
    self.mBoardLimitBorderTopTextField?.unbind_valueObserver ()
    self.mBoardLimitBorderBottomTextField?.unbind_valueObserver ()
    self.mBoardLimitBorderLeftTextField?.unbind_valueObserver ()
    self.mBoardLimitBorderRightTextField?.unbind_valueObserver ()
    self.mBoardLimitsBoundingBoxUnitPopUp?.unbind_selectedTag ()
    self.mBoardLimitsWidthUnitPopUp?.unbind_selectedTag ()
    self.mBoardLimitsWidthTextField?.unbind_dimensionAndUnit ()
    self.mBoardClearanceUnitPopUp?.unbind_selectedTag ()
    self.mBoardClearanceTextField?.unbind_dimensionAndUnit ()
    self.mRectangularBoardWidthUnitPopUp?.unbind_selectedTag ()
    self.mRectangularBoardWidthTextField?.unbind_dimensionAndUnit ()
    self.mRectangularBoardHeightUnitPopUp?.unbind_selectedTag ()
    self.mRectangularBoardHeightTextField?.unbind_dimensionAndUnit ()
    self.mBoardShapePopUp?.unbind_selectedSegment ()
    self.mBoardInspectorSegmentedControl?.unbind_selectedPage ()
    self.mLayerForNewTextMenu?.unbind_selectedIndex ()
    self.mLayerForNewLineMenu?.unbind_selectedIndex ()
    self.mBoardSideForNewRestrictRectangleMenu?.unbind_selectedIndex ()
    self.mBoardSideForNewTrackMenu?.unbind_selectedIndex ()
    self.mBoardDirectionForNewTrackMenu?.unbind_selectedIndex ()
    self.mUnplacedPackageTableView?.unbind_models ()
    self.mUnplacedPackagesCountTextField?.unbind_valueObserver ()
    self.mBoardView?.unbind_underObjectsDisplay ()
    self.mBoardView?.unbind_overObjectsDisplay ()
    self.mBoardView?.unbind_horizontalFlip ()
    self.mBoardView?.unbind_verticalFlip ()
    self.mBoardView?.unbind_gridStyle ()
    self.mBoardView?.unbind_gridDisplayFactor ()
    self.mBoardView?.unbind_gridLineColor ()
    self.mBoardView?.unbind_gridCrossColor ()
    self.mBoardView?.unbind_zoom ()
    self.mBoardView?.unbind_backColor ()
    self.mBoardView?.unbind_mouseGrid ()
    self.mBoardView?.unbind_gridStep ()
    self.mBoardView?.unbind_arrowKeyMagnitude ()
    self.mBoardView?.unbind_shiftArrowKeyMagnitude ()
    self.mBoardView?.unbind_xPlacardUnit ()
    self.mBoardView?.unbind_yPlacardUnit ()
    self.mSelectComponentsMenuItem?.unbind_components ()
    self.mSelectNetsMenuItem?.unbind_nets ()
    self.mBoardHorizontalFlipSwitch?.unbind_value ()
    self.mBoardVerticalFlipSwitch?.unbind_value ()
    self.mBoardGridStylePopUpButton?.unbind_selectedIndex ()
    self.mBoardGridDisplayFactorPopUpButton?.unbind_selectedTag ()
    self.mBoardGridUnitPopUp?.unbind_selectedTag ()
    self.mBoardGridTextField?.unbind_dimensionAndUnit ()
    self.mLayerConfigurationPopUp?.unbind_layerConfiguration ()
    self.mLayoutClearancePopUp?.unbind_selectedTag ()
    self.mLayoutClearanceTextField?.unbind_dimensionAndUnit ()
    self.mCheckClearanceBetweenPadsOfSameNetSwitch?.unbind_value ()
    self.mAutoRouterPreferredDirectionPopUp?.unbind_selectedIndex ()
    self.mAutorouterSnapAnglePopUp?.unbind_selectedIndex ()
    self.mAutoRouterRouteDirectionPopUp?.unbind_selectedIndex ()
    self.mAutoRouterRouteOriginPopUp?.unbind_selectedIndex ()
    self.mTopSideTrackCountTextField?.unbind_valueObserver ()
    self.mInner1LayerTrackCountTextField?.unbind_valueObserver ()
    self.mInner2LayerTrackCountTextField?.unbind_valueObserver ()
    self.mInner3LayerTrackCountTextField?.unbind_valueObserver ()
    self.mInner4LayerTrackCountTextField?.unbind_valueObserver ()
    self.mBackSideTrackCountTextField?.unbind_valueObserver ()
    self.mTrackCountTextField?.unbind_valueObserver ()
    self.mViaCountTextField?.unbind_valueObserver ()
    self.mTrackLengthTextField?.unbind_valueObserver ()
    self.mTrackLengthUnitPopUp?.unbind_selectedTag ()
    self.mAutorouterInterfaceModeTabVView?.unbind_selectedTabIndex ()
    self.mExportExistingTracksAndViasSwitch?.unbind_value ()
    self.mIsPreservedByAutoRouterSwitch?.unbind_value ()
    self.mBoardTrackSidePopUpButton?.unbind_selectedIndex ()
    self.mTrackNetNameTextField?.unbind_valueObserver ()
    self.mTrackNetClassNameTextField?.unbind_valueObserver ()
    self.mTrackDefaultWidthUnitPopUp?.unbind_selectedTag ()
    self.mTrackDefaultWidthTextField?.unbind_dimensionAndUnit ()
    self.mTrackCustomWidthUnitPopUp?.unbind_selectedTag ()
    self.mTrackCustomWidthTextField?.unbind_dimensionAndUnit ()
    self.mUsesCustomTrackWidthSwitch?.unbind_value ()
    self.mTrackInBoardRotationTextField?.unbind_angle ()
    self.mTrackInBoardRotationSlider?.unbind_angle ()
    self.mTrackLockView?.unbind_angle ()
    self.mTrackLockView?.unbind_manualLockP1 ()
    self.mTrackLockView?.unbind_manualLockP2 ()
    self.mTrackLockView?.unbind_p1ConnectedToSomePad ()
    self.mTrackLockView?.unbind_p2ConnectedToSomePad ()
    self.mDirectionLockOnKnobDraggingPopUpButton?.unbind_selectedIndex ()
    self.mBoardTrackP1xTextField?.unbind_dimensionAndUnit ()
    self.mBoardTrackP1xUnitPopUp?.unbind_selectedTag ()
    self.mBoardTrackP1yTextField?.unbind_dimensionAndUnit ()
    self.mBoardTrackP1yUnitPopUp?.unbind_selectedTag ()
    self.mBoardTrackP2xTextField?.unbind_dimensionAndUnit ()
    self.mBoardTrackP2xUnitPopUp?.unbind_selectedTag ()
    self.mBoardTrackP2yTextField?.unbind_dimensionAndUnit ()
    self.mBoardTrackP2yUnitPopUp?.unbind_selectedTag ()
    self.mViaNetNameTextField?.unbind_valueObserver ()
    self.mViaNetClassNameTextField?.unbind_valueObserver ()
    self.mViaDefaultHoleDiameterUnitPopUp?.unbind_selectedTag ()
    self.mViaDefaultHoleDiameterTextField?.unbind_dimensionAndUnit ()
    self.mViaCustomHoleDiameterUnitPopUp?.unbind_selectedTag ()
    self.mViaCustomHoleDiameterTextField?.unbind_dimensionAndUnit ()
    self.mUsesCustomHoleDiameterSwitch?.unbind_value ()
    self.mViaDefaultPadDiameterUnitPopUp?.unbind_selectedTag ()
    self.mViaDefaultPadDiameterTextField?.unbind_dimensionAndUnit ()
    self.mViaCustomPadDiameterUnitPopUp?.unbind_selectedTag ()
    self.mViaCustomPadDiameterTextField?.unbind_dimensionAndUnit ()
    self.mUsesCustomPadDiameterSwitch?.unbind_value ()
    self.mBoardLineWidthUnitPopUp?.unbind_selectedTag ()
    self.mBoardLineWidthTextField?.unbind_dimensionAndUnit ()
    self.mBoardLineLayerPopUpButton?.unbind_selectedIndex ()
    self.mBoardLineX1UnitPopUp?.unbind_selectedTag ()
    self.mBoardLineX1TextField?.unbind_dimensionAndUnit ()
    self.mBoardLineY1UnitPopUp?.unbind_selectedTag ()
    self.mBoardLineY1TextField?.unbind_dimensionAndUnit ()
    self.mBoardLineX2UnitPopUp?.unbind_selectedTag ()
    self.mBoardLineX2TextField?.unbind_dimensionAndUnit ()
    self.mBoardLineY2UnitPopUp?.unbind_selectedTag ()
    self.mBoardLineY2TextField?.unbind_dimensionAndUnit ()
    self.mFrontRestrictRectangleSwitch?.unbind_value ()
    self.mBackRestrictRectangleSwitch?.unbind_value ()
    self.mBoardTextTextField?.unbind_value ()
    self.mBoardTextFontSizeField?.unbind_value ()
    self.mBoardTextLayerPopUpButton?.unbind_selectedIndex ()
    self.mBoardTextHorizontalAlignmentSegmentedControl?.unbind_selectedSegment ()
    self.mBoardTextVerticalAlignmentSegmentedControl?.unbind_selectedSegment ()
    self.mBoardTextRotationTextField?.unbind_angle ()
    self.mBoardTextRotationSlider?.unbind_angle ()
    self.mBoardTextWeightTextField?.unbind_value ()
    self.mBoardTextObliqueSwitch?.unbind_value ()
    self.mSlavePadsShouldBeRoutedPopUpButton?.unbind_value ()
    self.mDisplayLegendSwitch?.unbind_value ()
    self.mShowRotationKnobInBoardSwitch?.unbind_value ()
    self.mComponentInBoardCenterXPopUp?.unbind_selectedTag ()
    self.mComponentInBoardCenterXTextField?.unbind_dimensionAndUnit ()
    self.mComponentInBoardCenterYPopUp?.unbind_selectedTag ()
    self.mComponentInBoardCenterYTextField?.unbind_dimensionAndUnit ()
    self.mBoardComponentRotationTextField?.unbind_angle ()
    self.mBoardComponentRotationSlider?.unbind_angle ()
    self.mBoardComponentRotationSegmentedControl?.unbind_angle ()
    self.mBoardComponentSidePopUpButton?.unbind_selectedIndex ()
    self.mDisplayComponentNameSwitch?.unbind_value ()
    self.mComponentNameFontSizeField?.unbind_value ()
    self.mComponentNameRotationTextField?.unbind_angle ()
    self.mComponentNameRotationSlider?.unbind_angle ()
    self.mComponentNameRotationSegmentedControl?.unbind_angle ()
    self.mBoardComponentNameTextField?.unbind_valueObserver ()
    self.mDisplayComponentValueSwitch?.unbind_value ()
    self.mComponentValueFontSizeField?.unbind_value ()
    self.mComponentValueRotationTextField?.unbind_angle ()
    self.mComponentValueRotationSlider?.unbind_angle ()
    self.mComponentValueRotationSegmentedControl?.unbind_angle ()
    self.mBoardComponentValueTextField?.unbind_value ()
    self.mDisplayFrontPadsSwitch?.unbind_value ()
    self.mDisplayFrontPadsColorWell?.unbind_color ()
    self.mDisplayBackPadsSwitch?.unbind_value ()
    self.mDisplayBackPadsColorWell?.unbind_color ()
    self.mDisplayPadNumbersSwitch?.unbind_value ()
    self.mDisplayPadNumbersColorWell?.unbind_color ()
    self.mDisplayFrontLegendSwitch?.unbind_value ()
    self.mDisplayFrontLegendColorWell?.unbind_color ()
    self.mDisplayBackLegendSwitch?.unbind_value ()
    self.mDisplayBackLegendColorWell?.unbind_color ()
    self.mDisplayFrontLayoutSwitch?.unbind_value ()
    self.mDisplayFrontLayoutColorWell?.unbind_color ()
    self.mDisplayInner1LayoutSwitch?.unbind_value ()
    self.mDisplayInner1LayoutColorWell?.unbind_color ()
    self.mDisplayInner2LayoutSwitch?.unbind_value ()
    self.mDisplayInner2LayoutColorWell?.unbind_color ()
    self.mDisplayInner3LayoutSwitch?.unbind_value ()
    self.mDisplayInner3LayoutColorWell?.unbind_color ()
    self.mDisplayInner4LayoutSwitch?.unbind_value ()
    self.mDisplayInner4LayoutColorWell?.unbind_color ()
    self.mDisplayBackLayoutSwitch?.unbind_value ()
    self.mDisplayBackLayoutColorWell?.unbind_color ()
    self.mDisplayFrontRestrictRectanglesSwitch?.unbind_value ()
    self.mDisplayFrontRestrictRectanglesColorWell?.unbind_color ()
    self.mDisplayBackRestrictRectanglesSwitch?.unbind_value ()
    self.mDisplayBackRestrictRectanglesColorWell?.unbind_color ()
    self.mDisplayBoardLimitsColorWell?.unbind_color ()
    self.mDisplayBoardClearanceColorWell?.unbind_color ()
    self.mBoardBackgroundColorWell?.unbind_color ()
    self.mErrorOrWarningIssueSlider?.unbind_doubleValue ()
    self.mControlKeyHiliteDiameterSlider?.unbind_doubleValue ()
    self.mRastnetDisplayPopUpButton?.unbind_selectedIndex ()
    self.mRasnetNetNameSelectionPopUpButton?.unbind_selectedNameInArray ()
    self.mRasnetComponentNameSelectionPopUpButton?.unbind_selectedNameInArray ()
    self.mArtworkNameTextField?.unbind_valueObserver ()
    self.mArtworlImportButton?.unbind_title ()
    self.mPDFBoardBackgroundColorWell?.unbind_color ()
    self.mMinPPTPTTTWinEBUnitPopUp?.unbind_selectedTag ()
    self.mMinPPTPTTTWdisplayUnitTextField?.unbind_dimensionAndUnit ()
    self.mOARUnitPopUp?.unbind_selectedTag ()
    self.mOARValueTextField?.unbind_dimensionAndUnit ()
    self.mPHDUnitPopUp?.unbind_selectedTag ()
    self.mPHDValueTextField?.unbind_dimensionAndUnit ()
    self.minValueForBoardLimitUnitPopUp?.unbind_selectedTag ()
    self.minValueForBoardLimitTextField?.unbind_dimensionAndUnit ()
    self.mDrillDataFileExtensionTextField?.unbind_valueObserver ()
    self.mExtensionTextField?.unbind_valueObserver ()
    self.mDrawBoardLimitsSwitch?.unbind_valueObserver ()
    self.mDrawComponentValuesTopSideSwitch?.unbind_valueObserver ()
    self.mDrawComponentValuesBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawComponentNamesTopSideSwitch?.unbind_valueObserver ()
    self.mDrawComponentNamesBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawPackageLegendTopSideSwitch?.unbind_valueObserver ()
    self.mDrawPackageLegendBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawPadsTopSideSwitch?.unbind_valueObserver ()
    self.mDrawPadsBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawTextsLayoutTopSideSwitch?.unbind_valueObserver ()
    self.mDrawTextsLayoutBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawTextsLegendTopSideSwitch?.unbind_valueObserver ()
    self.mDrawTextsLegendBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawTracksTopSideSwitch?.unbind_valueObserver ()
    self.mDrawTracksBottomSideSwitch?.unbind_valueObserver ()
    self.mDrawTracksInner1LayerSwitch?.unbind_valueObserver ()
    self.mDrawTracksInner2LayerSwitch?.unbind_valueObserver ()
    self.mDrawTracksInner3LayerSwitch?.unbind_valueObserver ()
    self.mDrawTracksInner4LayerSwitch?.unbind_valueObserver ()
    self.mDrawTraversingPadsSwitch?.unbind_valueObserver ()
    self.mDrawViasSwitch?.unbind_valueObserver ()
    self.mHorizontalMirrorSwitch?.unbind_valueObserver ()
    self.mArtworkCommentTextView?.unbind_valueObserver ()
    self.mArtworkVersionTextField?.unbind_valueObserver ()
    self.mArtworkTitleTextField?.unbind_valueObserver ()
    self.mArtworkLayerConfigurationTextField?.unbind_valueObserver ()
  //--------------------------- Unbind multiple bindings
    self.mController_mDuplicateSelectedComponentsActionButton_enabled = nil
    self.mController_mRemoveSelectedComponentsActionButton_enabled = nil
    self.mController_mChangePackageOfSelectedComponentsActionButton_enabled = nil
    self.mController_mChangeValueOfSelectedComponentsActionButton_enabled = nil
    self.mController_mRevealPackageOfSelectedComponentsButton_enabled = nil
    self.mController_mRenameComponentButton_enabled = nil
    self.mController_mRemoveNetClassButton_enabled = nil
    self.mController_mEditNetClassButton_enabled = nil
    self.mController_mRemoveEmbeddedDevicesButton_enabled = nil
    self.mController_mResetDevicesAndFontsVersionButton_enabled = nil
    self.mController_mUpdateDevicesAndFontsButton_enabled = nil
    self.mController_mEditFontButton_enabled = nil
    self.mController_mUpdateFontButton_enabled = nil
    self.mController_mRemoveFontButton_enabled = nil
    self.mController_mResetFontVersionButton_enabled = nil
    self.mController_mResetSelectedDeviceVersionButton_enabled = nil
    self.mController_mRemoveDeviceButton_enabled = nil
    self.mController_mEditDeviceButton_enabled = nil
    self.mController_mExportDeviceButton_enabled = nil
    self.mController_mUpdateDeviceButton_enabled = nil
    self.mController_mSchematicCustomSizeView_hidden = nil
    self.mController_mRemoveSheetButton_enabled = nil
    self.mController_mWireRenameNetButton_enabled = nil
    self.mController_mWireRenameNetWithUniqueNewNameButton_enabled = nil
    self.mController_mSchematicWireMergeSubnetButton_enabled = nil
    self.mController_mSchematicWireInsulateSubnetButton_enabled = nil
    self.mController_mSchematicsLabelRenameNetButton_enabled = nil
    self.mController_mSchematicLabelMergeSubnetButton_enabled = nil
    self.mController_mSchematicLabelInsulateSubnetButton_enabled = nil
    self.mController_mRenameComponentFromComponentSymbolButton_enabled = nil
    self.mController_mRenameNetInNetTabButton_enabled = nil
    self.mController_mSelectNetClassInNetTabButton_enabled = nil
    self.mController_mNetWarningImageView_hidden = nil
    self.mController_mNetWarningTextField_hidden = nil
    self.mController_mLimitCurveBezierControlPointsView_hidden = nil
    self.mController_mMessageBoardIsRectangularView_hidden = nil
    self.mController_mRectangularBoardWidthHeighView_hidden = nil
    self.mController_mBezierPathBoardHelperView_hidden = nil
    self.mController_mTrackInBoardRotationTextField_enabled = nil
    self.mController_mTrackInBoardRotationSlider_enabled = nil
    self.mController_mBoardTrackP1xTextField_enabled = nil
    self.mController_mBoardTrackP1yTextField_enabled = nil
    self.mController_mBoardTrackP2xTextField_enabled = nil
    self.mController_mBoardTrackP2yTextField_enabled = nil
    self.mController_mFrontRestrictRectangleSwitch_enabled = nil
    self.mController_mBackRestrictRectangleSwitch_enabled = nil
    self.mController_mSlavePadsShouldBeRoutedPopUpButton_enabled = nil
    self.mController_mComponentNameFontSizeField_enabled = nil
    self.mController_mComponentNameRotationTextField_enabled = nil
    self.mController_mComponentNameRotationSlider_enabled = nil
    self.mController_mComponentNameRotationSegmentedControl_enabled = nil
    self.mController_mBoardComponentNameFontPopUpButton_enabled = nil
    self.mController_mComponentValueFontSizeField_enabled = nil
    self.mController_mComponentValueRotationTextField_enabled = nil
    self.mController_mComponentValueRotationSlider_enabled = nil
    self.mController_mComponentValueRotationSegmentedControl_enabled = nil
    self.mController_mBoardComponentValueTextField_enabled = nil
    self.mController_mBoardComponentValueFontPopUpButton_enabled = nil
    self.mController_mRasnetNetNameSelectionPopUpButton_hidden = nil
    self.mController_mRasnetComponentNameSelectionPopUpButton_hidden = nil
    self.mController_mNoArtworkMessageTextField_hidden = nil
    self.mController_mArtworkSettingsTabView_hidden = nil
    self.mController_mGenerateProductFilesActionButton_enabled = nil
    self.mController_mIncorrectFileNameMessageView_hidden = nil
  //--------------------------- Unbind array controllers
    self.componentController.unbind_tableView (self.mComponentTableView)
    self.netClassController.unbind_tableView (self.mNetClassTableView)
    self.projectFontController.unbind_tableView (self.mFontLibraryTableView)
    self.projectDeviceController.unbind_tableView (self.mDeviceLibraryTableView)
    self.mDataController.unbind_tableView (self.mDataTableView)
    self.schematicObjectsController.unbind_ebView (self.mSchematicsView)
    self.boardCurveObjectsController.unbind_ebView (self.mBoardLimitsView)
    self.boardObjectsController.unbind_ebView (self.mBoardView)
  //--- Array controller property: netClassController
    self.netClassController.unbind_model ()
  //--- Array controller property: projectFontController
    self.projectFontController.unbind_model ()
  //--- Array controller property: projectDeviceController
    self.projectDeviceController.unbind_model ()
  //--- Array controller property: schematicObjectsController
    self.schematicObjectsController.unbind_model ()
  //--- Selection controller property: wireInSchematicSelectionController
    self.wireInSchematicSelectionController.unbind_selection ()
  //--- Selection controller property: ncInSchematicSelectionController
    self.ncInSchematicSelectionController.unbind_selection ()
  //--- Selection controller property: commentInSchematicSelectionController
    self.commentInSchematicSelectionController.unbind_selection ()
  //--- Selection controller property: schematicLabelSelectionController
    self.schematicLabelSelectionController.unbind_selection ()
  //--- Selection controller property: componentSymbolSelectionController
    self.componentSymbolSelectionController.unbind_selection ()
  //--- Array controller property: boardCurveObjectsController
    self.boardCurveObjectsController.unbind_model ()
  //--- Selection controller property: boardCurveSelectionController
    self.boardCurveSelectionController.unbind_selection ()
  //--- Array controller property: boardObjectsController
    self.boardObjectsController.unbind_model ()
  //--- Selection controller property: boardTrackSelectionController
    self.boardTrackSelectionController.unbind_selection ()
  //--- Selection controller property: boardConnectorSelectionController
    self.boardConnectorSelectionController.unbind_selection ()
  //--- Selection controller property: boardLineSelectionController
    self.boardLineSelectionController.unbind_selection ()
  //--- Selection controller property: restrictRectangleSelectionController
    self.restrictRectangleSelectionController.unbind_selection ()
  //--- Selection controller property: boardTextSelectionController
    self.boardTextSelectionController.unbind_selection ()
  //--- Selection controller property: componentInBoardSelectionController
    self.componentInBoardSelectionController.unbind_selection ()
  //--- Array controller property: mDataController
    self.mDataController.unbind_model ()
  //--- Array controller property: componentController
    self.componentController.unbind_model ()
  //--- Selection controller property: mDataSelection
    self.mDataSelection.unbind_selection ()
    // self.rootObject.netsDescription_property.removeEBObserver (self.netCount_property)
    // self.rootObject.mRastnetDisplay_property.removeEBObserver (self.rastnetDisplayComponentNet_property)
    // self.rootObject.mComponents_property.count_property.removeEBObserver (self.componentCount_property)
    // self.rootObject.mNetClasses_property.count_property.removeEBObserver (self.canRemoveNetClasses_property)
    // self.netClassController.selectedArray_property.removeEBObserverOf_canRemove (self.canRemoveNetClasses_property)
    // self.projectDeviceController.selectedArray_property.removeEBObserverOf_packageNames (self.selectedDevicePackageNames_property)
    // self.projectDeviceController.selectedArray_property.removeEBObserverOf_deviceSymbolDictionary (self.selectedDeviceSymbols_property)
    // self.projectDeviceController.selectedArray_property.removeEBObserverOf_symbolAndTypesNames (self.selectedDeviceSymbolNames_property)
    // self.projectDeviceController.selectedArray_property.removeEBObserverOf_pinPadAssignments (self.pinPadAssignments_property)
    // self.rootObject.mSchematicSheetOrientation_property.removeEBObserver (self.schematicSheetOrientationIsCustom_property)
    // self.rootObject.netsDescription_property.removeEBObserver (self.netCountString_property)
    // self.rootObject.mRastnetDisplay_property.removeEBObserver (self.rastnetShape_property)
    // self.rootObject.mRastnetDisplayedNetName_property.removeEBObserver (self.rastnetShape_property)
    // self.rootObject.mRastnetDisplayedComponentName_property.removeEBObserver (self.rastnetShape_property)
    // self.rootObject.mBoardObjects_property.removeEBObserverOf_netNameAndPadLocation (self.rastnetShape_property)
    // self.boardObjectsController.selectedArray_property.removeEBObserverOf_componentName (self.rastnetShape_property)
    // self.rootObject.mRastnetDisplay_property.removeEBObserver (self.rastnetDisplayOneNet_property)
    // self.rootObject.mArtwork_property.removeEBObserver (self.artworlImportButtonTitle_property)
    // self.documentFileName_property.removeEBObserver (self.documentFilePathOk_property)
    // self.rootObject.artworkLayerConfiguration_property.removeEBObserver (self.layerConfigurationString_property)
    // self.projectFontController.selectedArray_property.removeEBObserverOf_canRemoveFont (self.canRemoveSelectedFonts_property)
    // self.projectDeviceController.selectedArray_property.removeEBObserverOf_canRemove (self.canRemoveSelectedDevices_property)
    // self.rootObject.unplacedSymbols_property.removeEBObserver (self.unplacedSymbolsCount_property)
    // self.unplacedSymbolsCount_property.removeEBObserver (self.unplacedSymbolsCountString_property)
    // self.rootObject.unplacedPackages_property.removeEBObserver (self.unplacedPackageCount_property)
    // self.unplacedPackageCount_property.removeEBObserver (self.unplacedPackagesCountString_property)
    // self.rastnetShape_property.removeEBObserver (self.overDisplay_property)
    // self.rootObject.boardIssues_property.removeEBObserver (self.overDisplay_property)
    // self.componentController.selectedArray_property.removeEBObserverOf_availablePackages (self.canChangePackage_property)
  //--------------------------- Remove targets / actions
    self.mAddComponentButton?.target = nil
    self.mDuplicateSelectedComponentsActionButton?.target = nil
    self.mRemoveSelectedComponentsActionButton?.target = nil
    self.mChangePackageOfSelectedComponentsActionButton?.target = nil
    self.mChangeValueOfSelectedComponentsActionButton?.target = nil
    self.mRevealPackageOfSelectedComponentsButton?.target = nil
    self.mAddNetClassButton?.target = nil
    self.mRemoveNetClassButton?.target = nil
    self.mEditNetClassButton?.target = nil
    self.mRemoveEmbeddedDevicesButton?.target = nil
    self.mResetDevicesAndFontsVersionButton?.target = nil
    self.mUpdateDevicesAndFontsButton?.target = nil
    self.mAddFontButton?.target = nil
    self.mEditFontButton?.target = nil
    self.mUpdateFontButton?.target = nil
    self.mRemoveFontButton?.target = nil
    self.mResetFontVersionButton?.target = nil
    self.mResetSelectedDeviceVersionButton?.target = nil
    self.mRemoveDeviceButton?.target = nil
    self.mEditDeviceButton?.target = nil
    self.mExportDeviceButton?.target = nil
    self.mUpdateDeviceButton?.target = nil
    self.mNewSheetButton?.target = nil
    self.mRemoveSheetButton?.target = nil
    self.mSetDateToNowButton?.target = nil
    self.mOpenSetDateDialogButton?.target = nil
    self.mLayerConfigurationPopUp?.target = nil
    self.mLaunchFreeRouterWithoutDocumentButton?.target = nil
    self.mLaunchFreeRouterWithDocumentButton?.target = nil
    self.mImportSESFromBasicTabButton?.target = nil
    self.mArtworlImportButton?.target = nil
    self.mGenerateProductFilesActionButton?.target = nil
  //--------------------------- Clean up outlets
    self.mAddBottomSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddCommentButton?.ebCleanUp ()
    self.mAddComponentButton?.ebCleanUp ()
    self.mAddFontButton?.ebCleanUp ()
    self.mAddLeftLabelSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddLineInBoardButton?.ebCleanUp ()
    self.mAddNCSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddNCToAllSymbolPinsSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddNetClassButton?.ebCleanUp ()
    self.mAddNetClassErrorMessageTextField?.ebCleanUp ()
    self.mAddNetClassPanel?.ebCleanUp ()
    self.mAddNetClassTextField?.ebCleanUp ()
    self.mAddNetClassValidationButton?.ebCleanUp ()
    self.mAddRestrictRectangleButton?.ebCleanUp ()
    self.mAddRightLabelSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddTextInBoardButton?.ebCleanUp ()
    self.mAddTopLabelSchematicHotKeyTextField?.ebCleanUp ()
    self.mAddTrackInBoardButton?.ebCleanUp ()
    self.mAddWireButton?.ebCleanUp ()
    self.mAddWirePointSchematicHotKeyTextField?.ebCleanUp ()
    self.mAllowTracksOnBackSideSwitch?.ebCleanUp ()
    self.mAllowTracksOnFrontSideSwitch?.ebCleanUp ()
    self.mAllowTracksOnInner1LayerSwitch?.ebCleanUp ()
    self.mAllowTracksOnInner2LayerSwitch?.ebCleanUp ()
    self.mAllowTracksOnInner3LayerSwitch?.ebCleanUp ()
    self.mAllowTracksOnInner4LayerSwitch?.ebCleanUp ()
    self.mArtworkCommentTextView?.ebCleanUp ()
    self.mArtworkLayerConfigurationTextField?.ebCleanUp ()
    self.mArtworkNameTextField?.ebCleanUp ()
    self.mArtworkSettingsTabView?.ebCleanUp ()
    self.mArtworkTitleTextField?.ebCleanUp ()
    self.mArtworkVersionTextField?.ebCleanUp ()
    self.mArtworlImportButton?.ebCleanUp ()
    self.mAutoRouterPreferredDirectionPopUp?.ebCleanUp ()
    self.mAutoRouterRouteDirectionPopUp?.ebCleanUp ()
    self.mAutoRouterRouteOriginPopUp?.ebCleanUp ()
    self.mAutorouterInterfaceModeTabVView?.ebCleanUp ()
    self.mAutorouterSnapAnglePopUp?.ebCleanUp ()
    self.mBackRestrictRectangleSwitch?.ebCleanUp ()
    self.mBackSideTrackCountTextField?.ebCleanUp ()
    self.mBaseBoardInspectorView?.ebCleanUp ()
    self.mBaseBoardLimitsInspectorView?.ebCleanUp ()
    self.mBaseSchematicsInspectorView?.ebCleanUp ()
    self.mBezierPathBoardHelperView?.ebCleanUp ()
    self.mBoardBackgroundColorWell?.ebCleanUp ()
    self.mBoardBorderPageView?.ebCleanUp ()
    self.mBoardClearanceTextField?.ebCleanUp ()
    self.mBoardClearanceUnitPopUp?.ebCleanUp ()
    self.mBoardComponentNameFontPopUpButton?.ebCleanUp ()
    self.mBoardComponentNameTextField?.ebCleanUp ()
    self.mBoardComponentRotationSegmentedControl?.ebCleanUp ()
    self.mBoardComponentRotationSlider?.ebCleanUp ()
    self.mBoardComponentRotationTextField?.ebCleanUp ()
    self.mBoardComponentSidePopUpButton?.ebCleanUp ()
    self.mBoardComponentValueFontPopUpButton?.ebCleanUp ()
    self.mBoardComponentValueTextField?.ebCleanUp ()
    self.mBoardConnectorInspectorView?.ebCleanUp ()
    self.mBoardCurveControlPointX1TextField?.ebCleanUp ()
    self.mBoardCurveControlPointX2TextField?.ebCleanUp ()
    self.mBoardCurveControlPointY1TextField?.ebCleanUp ()
    self.mBoardCurveControlPointY2TextField?.ebCleanUp ()
    self.mBoardCurveControlPointsUnitPopUp?.ebCleanUp ()
    self.mBoardCurvePointX1TextField?.ebCleanUp ()
    self.mBoardCurvePointX2TextField?.ebCleanUp ()
    self.mBoardCurvePointY1TextField?.ebCleanUp ()
    self.mBoardCurvePointY2TextField?.ebCleanUp ()
    self.mBoardCurveX2TextField?.ebCleanUp ()
    self.mBoardCurveY2TextField?.ebCleanUp ()
    self.mBoardDirectionForNewTrackMenu?.ebCleanUp ()
    self.mBoardGridDisplayFactorPopUpButton?.ebCleanUp ()
    self.mBoardGridStylePopUpButton?.ebCleanUp ()
    self.mBoardGridTextField?.ebCleanUp ()
    self.mBoardGridUnitPopUp?.ebCleanUp ()
    self.mBoardHorizontalFlipSwitch?.ebCleanUp ()
    self.mBoardInspectorSegmentedControl?.ebCleanUp ()
    self.mBoardLimitBorderBottomTextField?.ebCleanUp ()
    self.mBoardLimitBorderLeftTextField?.ebCleanUp ()
    self.mBoardLimitBorderRightTextField?.ebCleanUp ()
    self.mBoardLimitBorderTopTextField?.ebCleanUp ()
    self.mBoardLimitPointsBottomTextField?.ebCleanUp ()
    self.mBoardLimitPointsLeftTextField?.ebCleanUp ()
    self.mBoardLimitPointsRightTextField?.ebCleanUp ()
    self.mBoardLimitPointsTopTextField?.ebCleanUp ()
    self.mBoardLimitsBoundingBoxUnitPopUp?.ebCleanUp ()
    self.mBoardLimitsElementCountTextField?.ebCleanUp ()
    self.mBoardLimitsGridDisplayFactorPopUpButton?.ebCleanUp ()
    self.mBoardLimitsGridStylePopUpButton?.ebCleanUp ()
    self.mBoardLimitsGridTextField?.ebCleanUp ()
    self.mBoardLimitsGridUnitPopUp?.ebCleanUp ()
    self.mBoardLimitsHorizontalFlipSwitch?.ebCleanUp ()
    self.mBoardLimitsInspectorSegmentedControl?.ebCleanUp ()
    self.mBoardLimitsVerticalFlipSwitch?.ebCleanUp ()
    self.mBoardLimitsView?.ebCleanUp ()
    self.mBoardLimitsWidthTextField?.ebCleanUp ()
    self.mBoardLimitsWidthUnitPopUp?.ebCleanUp ()
    self.mBoardLineInspectorView?.ebCleanUp ()
    self.mBoardLineLayerPopUpButton?.ebCleanUp ()
    self.mBoardLineWidthTextField?.ebCleanUp ()
    self.mBoardLineWidthUnitPopUp?.ebCleanUp ()
    self.mBoardLineX1TextField?.ebCleanUp ()
    self.mBoardLineX1UnitPopUp?.ebCleanUp ()
    self.mBoardLineX2TextField?.ebCleanUp ()
    self.mBoardLineX2UnitPopUp?.ebCleanUp ()
    self.mBoardLineY1TextField?.ebCleanUp ()
    self.mBoardLineY1UnitPopUp?.ebCleanUp ()
    self.mBoardLineY2TextField?.ebCleanUp ()
    self.mBoardLineY2UnitPopUp?.ebCleanUp ()
    self.mBoardObjectsPageView?.ebCleanUp ()
    self.mBoardPointsBoundingBoxUnitPopUp?.ebCleanUp ()
    self.mBoardShapePopUp?.ebCleanUp ()
    self.mBoardSideForNewRestrictRectangleMenu?.ebCleanUp ()
    self.mBoardSideForNewTrackMenu?.ebCleanUp ()
    self.mBoardStatusImageViewInToolbar?.ebCleanUp ()
    self.mBoardTextFontPopUpButton?.ebCleanUp ()
    self.mBoardTextFontSizeField?.ebCleanUp ()
    self.mBoardTextHorizontalAlignmentSegmentedControl?.ebCleanUp ()
    self.mBoardTextInspectorView?.ebCleanUp ()
    self.mBoardTextLayerPopUpButton?.ebCleanUp ()
    self.mBoardTextObliqueSwitch?.ebCleanUp ()
    self.mBoardTextRotationSlider?.ebCleanUp ()
    self.mBoardTextRotationTextField?.ebCleanUp ()
    self.mBoardTextTextField?.ebCleanUp ()
    self.mBoardTextVerticalAlignmentSegmentedControl?.ebCleanUp ()
    self.mBoardTextWeightTextField?.ebCleanUp ()
    self.mBoardTrackInspectorView?.ebCleanUp ()
    self.mBoardTrackP1xTextField?.ebCleanUp ()
    self.mBoardTrackP1xUnitPopUp?.ebCleanUp ()
    self.mBoardTrackP1yTextField?.ebCleanUp ()
    self.mBoardTrackP1yUnitPopUp?.ebCleanUp ()
    self.mBoardTrackP2xTextField?.ebCleanUp ()
    self.mBoardTrackP2xUnitPopUp?.ebCleanUp ()
    self.mBoardTrackP2yTextField?.ebCleanUp ()
    self.mBoardTrackP2yUnitPopUp?.ebCleanUp ()
    self.mBoardTrackSidePopUpButton?.ebCleanUp ()
    self.mBoardVerticalFlipSwitch?.ebCleanUp ()
    self.mBoardView?.ebCleanUp ()
    self.mCanariDefaultNetClassPopUpButton?.ebCleanUp ()
    self.mChangeComponentValueComboxBox?.ebCleanUp ()
    self.mChangePackageComponentListTextField?.ebCleanUp ()
    self.mChangePackageOfSelectedComponentsActionButton?.ebCleanUp ()
    self.mChangePackagePanel?.ebCleanUp ()
    self.mChangePackagePopUpButton?.ebCleanUp ()
    self.mChangeValueComponentListTextField?.ebCleanUp ()
    self.mChangeValueOfSelectedComponentsActionButton?.ebCleanUp ()
    self.mChangeValuePanel?.ebCleanUp ()
    self.mChangeValueValidationButton?.ebCleanUp ()
    self.mCheckClearanceBetweenPadsOfSameNetSwitch?.ebCleanUp ()
    self.mCommentColorInSchematicsTextField?.ebCleanUp ()
    self.mCommentInSchematicsHorizontalAlignmentSegmentedControl?.ebCleanUp ()
    self.mCommentInSchematicsInspectorView?.ebCleanUp ()
    self.mCommentInSchematicsTextField?.ebCleanUp ()
    self.mCommentInSchematicsVerticalAlignmentSegmentedControl?.ebCleanUp ()
    self.mCommentSizeInSchematicsSlider?.ebCleanUp ()
    self.mCommentSizeInSchematicsTextField?.ebCleanUp ()
    self.mComponentCountTextField?.ebCleanUp ()
    self.mComponentInBoardCenterXPopUp?.ebCleanUp ()
    self.mComponentInBoardCenterXTextField?.ebCleanUp ()
    self.mComponentInBoardCenterYPopUp?.ebCleanUp ()
    self.mComponentInBoardCenterYTextField?.ebCleanUp ()
    self.mComponentInBoardInspectorView?.ebCleanUp ()
    self.mComponentNameFontSizeField?.ebCleanUp ()
    self.mComponentNameRotationSegmentedControl?.ebCleanUp ()
    self.mComponentNameRotationSlider?.ebCleanUp ()
    self.mComponentNameRotationTextField?.ebCleanUp ()
    self.mComponentPackagePopUpButton?.ebCleanUp ()
    self.mComponentSymbolComponentNameTextField?.ebCleanUp ()
    self.mComponentSymbolDeviceNameTextField?.ebCleanUp ()
    self.mComponentSymbolInspectorView?.ebCleanUp ()
    self.mComponentSymbolInstanceNameTextField?.ebCleanUp ()
    self.mComponentSymbolShowComponentValueSwitch?.ebCleanUp ()
    self.mComponentSymbolTypeNameTextField?.ebCleanUp ()
    self.mComponentSymbolValueTextField?.ebCleanUp ()
    self.mComponentTableView?.ebCleanUp ()
    self.mComponentValueFontSizeField?.ebCleanUp ()
    self.mComponentValueRotationSegmentedControl?.ebCleanUp ()
    self.mComponentValueRotationSlider?.ebCleanUp ()
    self.mComponentValueRotationTextField?.ebCleanUp ()
    self.mComponentsPageView?.ebCleanUp ()
    self.mConnectAllSymbolPinsSchematicHotKeyTextField?.ebCleanUp ()
    self.mConnectSchematicHotKeyTextField?.ebCleanUp ()
    self.mControlKeyHiliteDiameterSlider?.ebCleanUp ()
    self.mCurrentComponentNameTextField?.ebCleanUp ()
    self.mDataTableView?.ebCleanUp ()
    self.mDeviceLibraryTableView?.ebCleanUp ()
    self.mDevicePackageTableView?.ebCleanUp ()
    self.mDeviceSymbolTableView?.ebCleanUp ()
    self.mDeviceSymbolTypePinsTableView?.ebCleanUp ()
    self.mDeviceSymbolTypeTableView?.ebCleanUp ()
    self.mDirectionLockOnKnobDraggingPopUpButton?.ebCleanUp ()
    self.mDisconnectAllSymbolPinsSchematicHotKeyTextField?.ebCleanUp ()
    self.mDisconnectSchematicHotKeyTextField?.ebCleanUp ()
    self.mDisplayBackLayoutColorWell?.ebCleanUp ()
    self.mDisplayBackLayoutSwitch?.ebCleanUp ()
    self.mDisplayBackLegendColorWell?.ebCleanUp ()
    self.mDisplayBackLegendSwitch?.ebCleanUp ()
    self.mDisplayBackPadsColorWell?.ebCleanUp ()
    self.mDisplayBackPadsSwitch?.ebCleanUp ()
    self.mDisplayBackRestrictRectanglesColorWell?.ebCleanUp ()
    self.mDisplayBackRestrictRectanglesSwitch?.ebCleanUp ()
    self.mDisplayBoardClearanceColorWell?.ebCleanUp ()
    self.mDisplayBoardInspectorView?.ebCleanUp ()
    self.mDisplayBoardLimitsColorWell?.ebCleanUp ()
    self.mDisplayComponentNameSwitch?.ebCleanUp ()
    self.mDisplayComponentValueSwitch?.ebCleanUp ()
    self.mDisplayFrontLayoutColorWell?.ebCleanUp ()
    self.mDisplayFrontLayoutSwitch?.ebCleanUp ()
    self.mDisplayFrontLegendColorWell?.ebCleanUp ()
    self.mDisplayFrontLegendSwitch?.ebCleanUp ()
    self.mDisplayFrontPadsColorWell?.ebCleanUp ()
    self.mDisplayFrontPadsSwitch?.ebCleanUp ()
    self.mDisplayFrontRestrictRectanglesColorWell?.ebCleanUp ()
    self.mDisplayFrontRestrictRectanglesSwitch?.ebCleanUp ()
    self.mDisplayInner1LayoutColorWell?.ebCleanUp ()
    self.mDisplayInner1LayoutSwitch?.ebCleanUp ()
    self.mDisplayInner2LayoutColorWell?.ebCleanUp ()
    self.mDisplayInner2LayoutSwitch?.ebCleanUp ()
    self.mDisplayInner3LayoutColorWell?.ebCleanUp ()
    self.mDisplayInner3LayoutSwitch?.ebCleanUp ()
    self.mDisplayInner4LayoutColorWell?.ebCleanUp ()
    self.mDisplayInner4LayoutSwitch?.ebCleanUp ()
    self.mDisplayLegendSwitch?.ebCleanUp ()
    self.mDisplayPadNumbersColorWell?.ebCleanUp ()
    self.mDisplayPadNumbersSwitch?.ebCleanUp ()
    self.mDrawBoardLimitsSwitch?.ebCleanUp ()
    self.mDrawComponentNamesBottomSideSwitch?.ebCleanUp ()
    self.mDrawComponentNamesTopSideSwitch?.ebCleanUp ()
    self.mDrawComponentValuesBottomSideSwitch?.ebCleanUp ()
    self.mDrawComponentValuesTopSideSwitch?.ebCleanUp ()
    self.mDrawPackageLegendBottomSideSwitch?.ebCleanUp ()
    self.mDrawPackageLegendTopSideSwitch?.ebCleanUp ()
    self.mDrawPadsBottomSideSwitch?.ebCleanUp ()
    self.mDrawPadsTopSideSwitch?.ebCleanUp ()
    self.mDrawTextsLayoutBottomSideSwitch?.ebCleanUp ()
    self.mDrawTextsLayoutTopSideSwitch?.ebCleanUp ()
    self.mDrawTextsLegendBottomSideSwitch?.ebCleanUp ()
    self.mDrawTextsLegendTopSideSwitch?.ebCleanUp ()
    self.mDrawTracksBottomSideSwitch?.ebCleanUp ()
    self.mDrawTracksInner1LayerSwitch?.ebCleanUp ()
    self.mDrawTracksInner2LayerSwitch?.ebCleanUp ()
    self.mDrawTracksInner3LayerSwitch?.ebCleanUp ()
    self.mDrawTracksInner4LayerSwitch?.ebCleanUp ()
    self.mDrawTracksTopSideSwitch?.ebCleanUp ()
    self.mDrawTraversingPadsSwitch?.ebCleanUp ()
    self.mDrawViasSwitch?.ebCleanUp ()
    self.mDrillDataFileExtensionTextField?.ebCleanUp ()
    self.mDuplicateSelectedComponentsActionButton?.ebCleanUp ()
    self.mERCBoardInspectorView?.ebCleanUp ()
    self.mERCIssueTableView?.ebCleanUp ()
    self.mERCLogTextView?.ebCleanUp ()
    self.mERCStatusImageViewInToolbar?.ebCleanUp ()
    self.mEditDeviceButton?.ebCleanUp ()
    self.mEditFontButton?.ebCleanUp ()
    self.mEditNetClassButton?.ebCleanUp ()
    self.mErrorOrWarningIssueSlider?.ebCleanUp ()
    self.mExchangeSymbolPanel?.ebCleanUp ()
    self.mExchangeSymbolPopUpButton?.ebCleanUp ()
    self.mExchangeSymbolSchematicHotKeyTextField?.ebCleanUp ()
    self.mExportDeviceButton?.ebCleanUp ()
    self.mExportExistingTracksAndViasSwitch?.ebCleanUp ()
    self.mExportTrackAndViasToDSNSwitch?.ebCleanUp ()
    self.mExtensionTextField?.ebCleanUp ()
    self.mFontLibraryTableView?.ebCleanUp ()
    self.mFrontRestrictRectangleSwitch?.ebCleanUp ()
    self.mGenerateProductFilesActionButton?.ebCleanUp ()
    self.mGridZoomBoardInspectorView?.ebCleanUp ()
    self.mGridZoomBoardLimitsInspectorView?.ebCleanUp ()
    self.mGridZoomSchematicsInspectorView?.ebCleanUp ()
    self.mHideERCIssueButton?.ebCleanUp ()
    self.mHorizontalMirrorSwitch?.ebCleanUp ()
    self.mHotKeysSchematicInspectorView?.ebCleanUp ()
    self.mImportSESFromBasicTabButton?.ebCleanUp ()
    self.mIncorrectFileNameMessageView?.ebCleanUp ()
    self.mInner1LayerTrackCountTextField?.ebCleanUp ()
    self.mInner2LayerTrackCountTextField?.ebCleanUp ()
    self.mInner3LayerTrackCountTextField?.ebCleanUp ()
    self.mInner4LayerTrackCountTextField?.ebCleanUp ()
    self.mIsPreservedByAutoRouterSwitch?.ebCleanUp ()
    self.mLaunchFreeRouterWithDocumentButton?.ebCleanUp ()
    self.mLaunchFreeRouterWithoutDocumentButton?.ebCleanUp ()
    self.mLayerConfigurationPopUp?.ebCleanUp ()
    self.mLayerForNewLineMenu?.ebCleanUp ()
    self.mLayerForNewTextMenu?.ebCleanUp ()
    self.mLayoutClearancePopUp?.ebCleanUp ()
    self.mLayoutClearanceTextField?.ebCleanUp ()
    self.mLibraryPageView?.ebCleanUp ()
    self.mLimitCurveBezierControlPointsView?.ebCleanUp ()
    self.mMasterView?.ebCleanUp ()
    self.mMergeNetDialog?.ebCleanUp ()
    self.mMergeNetPopUpButton?.ebCleanUp ()
    self.mMergeSeveralSubnetsPanel?.ebCleanUp ()
    self.mMergeSeveralSubnetsPopUpButton?.ebCleanUp ()
    self.mMessageBoardIsRectangularView?.ebCleanUp ()
    self.mMinPPTPTTTWdisplayUnitTextField?.ebCleanUp ()
    self.mMinPPTPTTTWinEBUnitPopUp?.ebCleanUp ()
    self.mMoveSelectedObjectsToSheetPanel?.ebCleanUp ()
    self.mMoveSelectedObjectsToSheetPopUpButton?.ebCleanUp ()
    self.mNCInSchematicsInspectorView?.ebCleanUp ()
    self.mNCRotationSegmentedControl?.ebCleanUp ()
    self.mNetClassColorWell?.ebCleanUp ()
    self.mNetClassHoleDiameterDimensionTextField?.ebCleanUp ()
    self.mNetClassHoleDiameterUnitPopUpButton?.ebCleanUp ()
    self.mNetClassPadDiameterDimensionTextField?.ebCleanUp ()
    self.mNetClassPadDiameterUnitPopUpButton?.ebCleanUp ()
    self.mNetClassTableView?.ebCleanUp ()
    self.mNetClassWidthDimensionTextField?.ebCleanUp ()
    self.mNetClassWidthUnitPopUpButton?.ebCleanUp ()
    self.mNetClassesPageView?.ebCleanUp ()
    self.mNetCountTextField?.ebCleanUp ()
    self.mNetInfoTableView?.ebCleanUp ()
    self.mNetListPageView?.ebCleanUp ()
    self.mNetWarningImageView?.ebCleanUp ()
    self.mNetWarningTextField?.ebCleanUp ()
    self.mNewComponentFromDevicePullDownButton?.ebCleanUp ()
    self.mNewSheetButton?.ebCleanUp ()
    self.mNoArtworkMessageTextField?.ebCleanUp ()
    self.mOARUnitPopUp?.ebCleanUp ()
    self.mOARValueTextField?.ebCleanUp ()
    self.mOpenSetDateDialogButton?.ebCleanUp ()
    self.mOperationBoardLimitsInspectorView?.ebCleanUp ()
    self.mPDFBoardBackgroundColorWell?.ebCleanUp ()
    self.mPHDUnitPopUp?.ebCleanUp ()
    self.mPHDValueTextField?.ebCleanUp ()
    self.mPageSegmentedControl?.ebCleanUp ()
    self.mPinPadAssignmentTableView?.ebCleanUp ()
    self.mProductFileGenerationLogTextView?.ebCleanUp ()
    self.mProductGenerationTabView?.ebCleanUp ()
    self.mProductPageView?.ebCleanUp ()
    self.mRasnetComponentNameSelectionPopUpButton?.ebCleanUp ()
    self.mRasnetNetNameSelectionPopUpButton?.ebCleanUp ()
    self.mRastnetDisplayPopUpButton?.ebCleanUp ()
    self.mRectangularBoardHeightTextField?.ebCleanUp ()
    self.mRectangularBoardHeightUnitPopUp?.ebCleanUp ()
    self.mRectangularBoardWidthHeighView?.ebCleanUp ()
    self.mRectangularBoardWidthTextField?.ebCleanUp ()
    self.mRectangularBoardWidthUnitPopUp?.ebCleanUp ()
    self.mRemoveDeviceButton?.ebCleanUp ()
    self.mRemoveEmbeddedDevicesButton?.ebCleanUp ()
    self.mRemoveFontButton?.ebCleanUp ()
    self.mRemoveNetClassButton?.ebCleanUp ()
    self.mRemoveSelectedComponentsActionButton?.ebCleanUp ()
    self.mRemoveSheetButton?.ebCleanUp ()
    self.mRemoveWirePointSchematicHotKeyTextField?.ebCleanUp ()
    self.mRenameComponentButton?.ebCleanUp ()
    self.mRenameComponentErrorMessageTextField?.ebCleanUp ()
    self.mRenameComponentFromComponentSymbolButton?.ebCleanUp ()
    self.mRenameComponentIndexesPopUpButton?.ebCleanUp ()
    self.mRenameComponentPanel?.ebCleanUp ()
    self.mRenameComponentPrefixComboxBox?.ebCleanUp ()
    self.mRenameComponentValidationButton?.ebCleanUp ()
    self.mRenameDeviceErrorMessageTextField?.ebCleanUp ()
    self.mRenameDeviceNameTextField?.ebCleanUp ()
    self.mRenameDevicePanel?.ebCleanUp ()
    self.mRenameDeviceTitleTextField?.ebCleanUp ()
    self.mRenameDeviceValidationButton?.ebCleanUp ()
    self.mRenameNetErrorTextField?.ebCleanUp ()
    self.mRenameNetInNetTabButton?.ebCleanUp ()
    self.mRenameNetOkButton?.ebCleanUp ()
    self.mRenameNetPanel?.ebCleanUp ()
    self.mRenameNetTextField?.ebCleanUp ()
    self.mResetDevicesAndFontsVersionButton?.ebCleanUp ()
    self.mResetFontVersionButton?.ebCleanUp ()
    self.mResetSelectedDeviceVersionButton?.ebCleanUp ()
    self.mRestrictRectangleInspectorView?.ebCleanUp ()
    self.mRevealPackageOfSelectedComponentsButton?.ebCleanUp ()
    self.mRouterBoardInspectorView?.ebCleanUp ()
    self.mSaveDSNFileAuxiliaryView?.ebCleanUp ()
    self.mSchematicBackColorColorWell?.ebCleanUp ()
    self.mSchematicCustomHeightTextField?.ebCleanUp ()
    self.mSchematicCustomHeightUnitPopUp?.ebCleanUp ()
    self.mSchematicCustomSizeView?.ebCleanUp ()
    self.mSchematicCustomWidthTextField?.ebCleanUp ()
    self.mSchematicCustomWidthUnitPopUp?.ebCleanUp ()
    self.mSchematicLabelInsulateSubnetButton?.ebCleanUp ()
    self.mSchematicLabelMergeSubnetButton?.ebCleanUp ()
    self.mSchematicLabelNetClassButton?.ebCleanUp ()
    self.mSchematicStatusImageViewInToolbar?.ebCleanUp ()
    self.mSchematicWireInsulateSubnetButton?.ebCleanUp ()
    self.mSchematicWireMergeSubnetButton?.ebCleanUp ()
    self.mSchematicWireNetClassButton?.ebCleanUp ()
    self.mSchematicsDatePicker?.ebCleanUp ()
    self.mSchematicsGridDisplayFactorPopUpButton?.ebCleanUp ()
    self.mSchematicsGridStylePopUpButton?.ebCleanUp ()
    self.mSchematicsHorizontalFlipSwitch?.ebCleanUp ()
    self.mSchematicsInspectorSegmentedControl?.ebCleanUp ()
    self.mSchematicsLabelInspectorView?.ebCleanUp ()
    self.mSchematicsLabelNetNameTextField?.ebCleanUp ()
    self.mSchematicsLabelRenameNetButton?.ebCleanUp ()
    self.mSchematicsLabelRotationSegmentedControl?.ebCleanUp ()
    self.mSchematicsPageView?.ebCleanUp ()
    self.mSchematicsSheetOrientationSegmentedControl?.ebCleanUp ()
    self.mSchematicsSheetsInspectorView?.ebCleanUp ()
    self.mSchematicsTitleTextField?.ebCleanUp ()
    self.mSchematicsVersionTextField?.ebCleanUp ()
    self.mSchematicsVerticalFlipSwitch?.ebCleanUp ()
    self.mSchematicsView?.ebCleanUp ()
    self.mSchematicsWireInspectorView?.ebCleanUp ()
    self.mSelectComponentsMenuItem?.ebCleanUp ()
    self.mSelectNetClassInNetTabButton?.ebCleanUp ()
    self.mSelectNetClassPanel?.ebCleanUp ()
    self.mSelectNetClassPopUpButton?.ebCleanUp ()
    self.mSelectNetsMenuItem?.ebCleanUp ()
    self.mSelectedBoardLimitInspectorView?.ebCleanUp ()
    self.mSelectedLimitDisplayUnitPopUp?.ebCleanUp ()
    self.mSelectedLimitShapePopUpButton?.ebCleanUp ()
    self.mSelectedObjectsBoardInspectorView?.ebCleanUp ()
    self.mSelectedObjectsBoardLimitsInspectorView?.ebCleanUp ()
    self.mSelectedObjectsSchematicsInspectorView?.ebCleanUp ()
    self.mSelectedSheetTitleTextField?.ebCleanUp ()
    self.mSetDatePanel?.ebCleanUp ()
    self.mSetDateToNowButton?.ebCleanUp ()
    self.mSheetDownButton?.ebCleanUp ()
    self.mSheetPopUpButton?.ebCleanUp ()
    self.mSheetUpButton?.ebCleanUp ()
    self.mShowRotationKnobInBoardSwitch?.ebCleanUp ()
    self.mSlavePadsShouldBeRoutedPopUpButton?.ebCleanUp ()
    self.mSymbolMirrorSwitch?.ebCleanUp ()
    self.mSymbolRotationSegmentedControl?.ebCleanUp ()
    self.mTopSideTrackCountTextField?.ebCleanUp ()
    self.mTrackCountTextField?.ebCleanUp ()
    self.mTrackCustomWidthTextField?.ebCleanUp ()
    self.mTrackCustomWidthUnitPopUp?.ebCleanUp ()
    self.mTrackDefaultWidthTextField?.ebCleanUp ()
    self.mTrackDefaultWidthUnitPopUp?.ebCleanUp ()
    self.mTrackInBoardRotationSlider?.ebCleanUp ()
    self.mTrackInBoardRotationTextField?.ebCleanUp ()
    self.mTrackLengthTextField?.ebCleanUp ()
    self.mTrackLengthUnitPopUp?.ebCleanUp ()
    self.mTrackLockView?.ebCleanUp ()
    self.mTrackNetClassNameTextField?.ebCleanUp ()
    self.mTrackNetNameTextField?.ebCleanUp ()
    self.mUnplacedPackageTableView?.ebCleanUp ()
    self.mUnplacedPackagesBoardInspectorView?.ebCleanUp ()
    self.mUnplacedPackagesCountTextField?.ebCleanUp ()
    self.mUnplacedSymbolsSchematicsInspectorView?.ebCleanUp ()
    self.mUnplacedSymbolsTableView?.ebCleanUp ()
    self.mUnplacedSymbolsTextField?.ebCleanUp ()
    self.mUpdateDeviceButton?.ebCleanUp ()
    self.mUpdateDevicesAndFontsButton?.ebCleanUp ()
    self.mUpdateFontButton?.ebCleanUp ()
    self.mUsesCustomHoleDiameterSwitch?.ebCleanUp ()
    self.mUsesCustomPadDiameterSwitch?.ebCleanUp ()
    self.mUsesCustomTrackWidthSwitch?.ebCleanUp ()
    self.mViaCountTextField?.ebCleanUp ()
    self.mViaCustomHoleDiameterTextField?.ebCleanUp ()
    self.mViaCustomHoleDiameterUnitPopUp?.ebCleanUp ()
    self.mViaCustomPadDiameterTextField?.ebCleanUp ()
    self.mViaCustomPadDiameterUnitPopUp?.ebCleanUp ()
    self.mViaDefaultHoleDiameterTextField?.ebCleanUp ()
    self.mViaDefaultHoleDiameterUnitPopUp?.ebCleanUp ()
    self.mViaDefaultPadDiameterTextField?.ebCleanUp ()
    self.mViaDefaultPadDiameterUnitPopUp?.ebCleanUp ()
    self.mViaNetClassNameTextField?.ebCleanUp ()
    self.mViaNetNameTextField?.ebCleanUp ()
    self.mWireNetNameTextField?.ebCleanUp ()
    self.mWireRenameNetButton?.ebCleanUp ()
    self.mWireRenameNetWithUniqueNewNameButton?.ebCleanUp ()
    self.minValueForBoardLimitTextField?.ebCleanUp ()
    self.minValueForBoardLimitUnitPopUp?.ebCleanUp ()
  //--------------------------- Detach outlets
    self.mAddBottomSchematicHotKeyTextField = nil
    self.mAddCommentButton = nil
    self.mAddComponentButton = nil
    self.mAddFontButton = nil
    self.mAddLeftLabelSchematicHotKeyTextField = nil
    self.mAddLineInBoardButton = nil
    self.mAddNCSchematicHotKeyTextField = nil
    self.mAddNCToAllSymbolPinsSchematicHotKeyTextField = nil
    self.mAddNetClassButton = nil
    self.mAddNetClassErrorMessageTextField = nil
    self.mAddNetClassPanel = nil
    self.mAddNetClassTextField = nil
    self.mAddNetClassValidationButton = nil
    self.mAddRestrictRectangleButton = nil
    self.mAddRightLabelSchematicHotKeyTextField = nil
    self.mAddTextInBoardButton = nil
    self.mAddTopLabelSchematicHotKeyTextField = nil
    self.mAddTrackInBoardButton = nil
    self.mAddWireButton = nil
    self.mAddWirePointSchematicHotKeyTextField = nil
    self.mAllowTracksOnBackSideSwitch = nil
    self.mAllowTracksOnFrontSideSwitch = nil
    self.mAllowTracksOnInner1LayerSwitch = nil
    self.mAllowTracksOnInner2LayerSwitch = nil
    self.mAllowTracksOnInner3LayerSwitch = nil
    self.mAllowTracksOnInner4LayerSwitch = nil
    self.mArtworkCommentTextView = nil
    self.mArtworkLayerConfigurationTextField = nil
    self.mArtworkNameTextField = nil
    self.mArtworkSettingsTabView = nil
    self.mArtworkTitleTextField = nil
    self.mArtworkVersionTextField = nil
    self.mArtworlImportButton = nil
    self.mAutoRouterPreferredDirectionPopUp = nil
    self.mAutoRouterRouteDirectionPopUp = nil
    self.mAutoRouterRouteOriginPopUp = nil
    self.mAutorouterInterfaceModeTabVView = nil
    self.mAutorouterSnapAnglePopUp = nil
    self.mBackRestrictRectangleSwitch = nil
    self.mBackSideTrackCountTextField = nil
    self.mBaseBoardInspectorView = nil
    self.mBaseBoardLimitsInspectorView = nil
    self.mBaseSchematicsInspectorView = nil
    self.mBezierPathBoardHelperView = nil
    self.mBoardBackgroundColorWell = nil
    self.mBoardBorderPageView = nil
    self.mBoardClearanceTextField = nil
    self.mBoardClearanceUnitPopUp = nil
    self.mBoardComponentNameFontPopUpButton = nil
    self.mBoardComponentNameTextField = nil
    self.mBoardComponentRotationSegmentedControl = nil
    self.mBoardComponentRotationSlider = nil
    self.mBoardComponentRotationTextField = nil
    self.mBoardComponentSidePopUpButton = nil
    self.mBoardComponentValueFontPopUpButton = nil
    self.mBoardComponentValueTextField = nil
    self.mBoardConnectorInspectorView = nil
    self.mBoardCurveControlPointX1TextField = nil
    self.mBoardCurveControlPointX2TextField = nil
    self.mBoardCurveControlPointY1TextField = nil
    self.mBoardCurveControlPointY2TextField = nil
    self.mBoardCurveControlPointsUnitPopUp = nil
    self.mBoardCurvePointX1TextField = nil
    self.mBoardCurvePointX2TextField = nil
    self.mBoardCurvePointY1TextField = nil
    self.mBoardCurvePointY2TextField = nil
    self.mBoardCurveX2TextField = nil
    self.mBoardCurveY2TextField = nil
    self.mBoardDirectionForNewTrackMenu = nil
    self.mBoardGridDisplayFactorPopUpButton = nil
    self.mBoardGridStylePopUpButton = nil
    self.mBoardGridTextField = nil
    self.mBoardGridUnitPopUp = nil
    self.mBoardHorizontalFlipSwitch = nil
    self.mBoardInspectorSegmentedControl = nil
    self.mBoardLimitBorderBottomTextField = nil
    self.mBoardLimitBorderLeftTextField = nil
    self.mBoardLimitBorderRightTextField = nil
    self.mBoardLimitBorderTopTextField = nil
    self.mBoardLimitPointsBottomTextField = nil
    self.mBoardLimitPointsLeftTextField = nil
    self.mBoardLimitPointsRightTextField = nil
    self.mBoardLimitPointsTopTextField = nil
    self.mBoardLimitsBoundingBoxUnitPopUp = nil
    self.mBoardLimitsElementCountTextField = nil
    self.mBoardLimitsGridDisplayFactorPopUpButton = nil
    self.mBoardLimitsGridStylePopUpButton = nil
    self.mBoardLimitsGridTextField = nil
    self.mBoardLimitsGridUnitPopUp = nil
    self.mBoardLimitsHorizontalFlipSwitch = nil
    self.mBoardLimitsInspectorSegmentedControl = nil
    self.mBoardLimitsVerticalFlipSwitch = nil
    self.mBoardLimitsView = nil
    self.mBoardLimitsWidthTextField = nil
    self.mBoardLimitsWidthUnitPopUp = nil
    self.mBoardLineInspectorView = nil
    self.mBoardLineLayerPopUpButton = nil
    self.mBoardLineWidthTextField = nil
    self.mBoardLineWidthUnitPopUp = nil
    self.mBoardLineX1TextField = nil
    self.mBoardLineX1UnitPopUp = nil
    self.mBoardLineX2TextField = nil
    self.mBoardLineX2UnitPopUp = nil
    self.mBoardLineY1TextField = nil
    self.mBoardLineY1UnitPopUp = nil
    self.mBoardLineY2TextField = nil
    self.mBoardLineY2UnitPopUp = nil
    self.mBoardObjectsPageView = nil
    self.mBoardPointsBoundingBoxUnitPopUp = nil
    self.mBoardShapePopUp = nil
    self.mBoardSideForNewRestrictRectangleMenu = nil
    self.mBoardSideForNewTrackMenu = nil
    self.mBoardStatusImageViewInToolbar = nil
    self.mBoardTextFontPopUpButton = nil
    self.mBoardTextFontSizeField = nil
    self.mBoardTextHorizontalAlignmentSegmentedControl = nil
    self.mBoardTextInspectorView = nil
    self.mBoardTextLayerPopUpButton = nil
    self.mBoardTextObliqueSwitch = nil
    self.mBoardTextRotationSlider = nil
    self.mBoardTextRotationTextField = nil
    self.mBoardTextTextField = nil
    self.mBoardTextVerticalAlignmentSegmentedControl = nil
    self.mBoardTextWeightTextField = nil
    self.mBoardTrackInspectorView = nil
    self.mBoardTrackP1xTextField = nil
    self.mBoardTrackP1xUnitPopUp = nil
    self.mBoardTrackP1yTextField = nil
    self.mBoardTrackP1yUnitPopUp = nil
    self.mBoardTrackP2xTextField = nil
    self.mBoardTrackP2xUnitPopUp = nil
    self.mBoardTrackP2yTextField = nil
    self.mBoardTrackP2yUnitPopUp = nil
    self.mBoardTrackSidePopUpButton = nil
    self.mBoardVerticalFlipSwitch = nil
    self.mBoardView = nil
    self.mCanariDefaultNetClassPopUpButton = nil
    self.mChangeComponentValueComboxBox = nil
    self.mChangePackageComponentListTextField = nil
    self.mChangePackageOfSelectedComponentsActionButton = nil
    self.mChangePackagePanel = nil
    self.mChangePackagePopUpButton = nil
    self.mChangeValueComponentListTextField = nil
    self.mChangeValueOfSelectedComponentsActionButton = nil
    self.mChangeValuePanel = nil
    self.mChangeValueValidationButton = nil
    self.mCheckClearanceBetweenPadsOfSameNetSwitch = nil
    self.mCommentColorInSchematicsTextField = nil
    self.mCommentInSchematicsHorizontalAlignmentSegmentedControl = nil
    self.mCommentInSchematicsInspectorView = nil
    self.mCommentInSchematicsTextField = nil
    self.mCommentInSchematicsVerticalAlignmentSegmentedControl = nil
    self.mCommentSizeInSchematicsSlider = nil
    self.mCommentSizeInSchematicsTextField = nil
    self.mComponentCountTextField = nil
    self.mComponentInBoardCenterXPopUp = nil
    self.mComponentInBoardCenterXTextField = nil
    self.mComponentInBoardCenterYPopUp = nil
    self.mComponentInBoardCenterYTextField = nil
    self.mComponentInBoardInspectorView = nil
    self.mComponentNameFontSizeField = nil
    self.mComponentNameRotationSegmentedControl = nil
    self.mComponentNameRotationSlider = nil
    self.mComponentNameRotationTextField = nil
    self.mComponentPackagePopUpButton = nil
    self.mComponentSymbolComponentNameTextField = nil
    self.mComponentSymbolDeviceNameTextField = nil
    self.mComponentSymbolInspectorView = nil
    self.mComponentSymbolInstanceNameTextField = nil
    self.mComponentSymbolShowComponentValueSwitch = nil
    self.mComponentSymbolTypeNameTextField = nil
    self.mComponentSymbolValueTextField = nil
    self.mComponentTableView = nil
    self.mComponentValueFontSizeField = nil
    self.mComponentValueRotationSegmentedControl = nil
    self.mComponentValueRotationSlider = nil
    self.mComponentValueRotationTextField = nil
    self.mComponentsPageView = nil
    self.mConnectAllSymbolPinsSchematicHotKeyTextField = nil
    self.mConnectSchematicHotKeyTextField = nil
    self.mControlKeyHiliteDiameterSlider = nil
    self.mCurrentComponentNameTextField = nil
    self.mDataTableView = nil
    self.mDeviceLibraryTableView = nil
    self.mDevicePackageTableView = nil
    self.mDeviceSymbolTableView = nil
    self.mDeviceSymbolTypePinsTableView = nil
    self.mDeviceSymbolTypeTableView = nil
    self.mDirectionLockOnKnobDraggingPopUpButton = nil
    self.mDisconnectAllSymbolPinsSchematicHotKeyTextField = nil
    self.mDisconnectSchematicHotKeyTextField = nil
    self.mDisplayBackLayoutColorWell = nil
    self.mDisplayBackLayoutSwitch = nil
    self.mDisplayBackLegendColorWell = nil
    self.mDisplayBackLegendSwitch = nil
    self.mDisplayBackPadsColorWell = nil
    self.mDisplayBackPadsSwitch = nil
    self.mDisplayBackRestrictRectanglesColorWell = nil
    self.mDisplayBackRestrictRectanglesSwitch = nil
    self.mDisplayBoardClearanceColorWell = nil
    self.mDisplayBoardInspectorView = nil
    self.mDisplayBoardLimitsColorWell = nil
    self.mDisplayComponentNameSwitch = nil
    self.mDisplayComponentValueSwitch = nil
    self.mDisplayFrontLayoutColorWell = nil
    self.mDisplayFrontLayoutSwitch = nil
    self.mDisplayFrontLegendColorWell = nil
    self.mDisplayFrontLegendSwitch = nil
    self.mDisplayFrontPadsColorWell = nil
    self.mDisplayFrontPadsSwitch = nil
    self.mDisplayFrontRestrictRectanglesColorWell = nil
    self.mDisplayFrontRestrictRectanglesSwitch = nil
    self.mDisplayInner1LayoutColorWell = nil
    self.mDisplayInner1LayoutSwitch = nil
    self.mDisplayInner2LayoutColorWell = nil
    self.mDisplayInner2LayoutSwitch = nil
    self.mDisplayInner3LayoutColorWell = nil
    self.mDisplayInner3LayoutSwitch = nil
    self.mDisplayInner4LayoutColorWell = nil
    self.mDisplayInner4LayoutSwitch = nil
    self.mDisplayLegendSwitch = nil
    self.mDisplayPadNumbersColorWell = nil
    self.mDisplayPadNumbersSwitch = nil
    self.mDrawBoardLimitsSwitch = nil
    self.mDrawComponentNamesBottomSideSwitch = nil
    self.mDrawComponentNamesTopSideSwitch = nil
    self.mDrawComponentValuesBottomSideSwitch = nil
    self.mDrawComponentValuesTopSideSwitch = nil
    self.mDrawPackageLegendBottomSideSwitch = nil
    self.mDrawPackageLegendTopSideSwitch = nil
    self.mDrawPadsBottomSideSwitch = nil
    self.mDrawPadsTopSideSwitch = nil
    self.mDrawTextsLayoutBottomSideSwitch = nil
    self.mDrawTextsLayoutTopSideSwitch = nil
    self.mDrawTextsLegendBottomSideSwitch = nil
    self.mDrawTextsLegendTopSideSwitch = nil
    self.mDrawTracksBottomSideSwitch = nil
    self.mDrawTracksInner1LayerSwitch = nil
    self.mDrawTracksInner2LayerSwitch = nil
    self.mDrawTracksInner3LayerSwitch = nil
    self.mDrawTracksInner4LayerSwitch = nil
    self.mDrawTracksTopSideSwitch = nil
    self.mDrawTraversingPadsSwitch = nil
    self.mDrawViasSwitch = nil
    self.mDrillDataFileExtensionTextField = nil
    self.mDuplicateSelectedComponentsActionButton = nil
    self.mERCBoardInspectorView = nil
    self.mERCIssueTableView = nil
    self.mERCLogTextView = nil
    self.mERCStatusImageViewInToolbar = nil
    self.mEditDeviceButton = nil
    self.mEditFontButton = nil
    self.mEditNetClassButton = nil
    self.mErrorOrWarningIssueSlider = nil
    self.mExchangeSymbolPanel = nil
    self.mExchangeSymbolPopUpButton = nil
    self.mExchangeSymbolSchematicHotKeyTextField = nil
    self.mExportDeviceButton = nil
    self.mExportExistingTracksAndViasSwitch = nil
    self.mExportTrackAndViasToDSNSwitch = nil
    self.mExtensionTextField = nil
    self.mFontLibraryTableView = nil
    self.mFrontRestrictRectangleSwitch = nil
    self.mGenerateProductFilesActionButton = nil
    self.mGridZoomBoardInspectorView = nil
    self.mGridZoomBoardLimitsInspectorView = nil
    self.mGridZoomSchematicsInspectorView = nil
    self.mHideERCIssueButton = nil
    self.mHorizontalMirrorSwitch = nil
    self.mHotKeysSchematicInspectorView = nil
    self.mImportSESFromBasicTabButton = nil
    self.mIncorrectFileNameMessageView = nil
    self.mInner1LayerTrackCountTextField = nil
    self.mInner2LayerTrackCountTextField = nil
    self.mInner3LayerTrackCountTextField = nil
    self.mInner4LayerTrackCountTextField = nil
    self.mIsPreservedByAutoRouterSwitch = nil
    self.mLaunchFreeRouterWithDocumentButton = nil
    self.mLaunchFreeRouterWithoutDocumentButton = nil
    self.mLayerConfigurationPopUp = nil
    self.mLayerForNewLineMenu = nil
    self.mLayerForNewTextMenu = nil
    self.mLayoutClearancePopUp = nil
    self.mLayoutClearanceTextField = nil
    self.mLibraryPageView = nil
    self.mLimitCurveBezierControlPointsView = nil
    self.mMasterView = nil
    self.mMergeNetDialog = nil
    self.mMergeNetPopUpButton = nil
    self.mMergeSeveralSubnetsPanel = nil
    self.mMergeSeveralSubnetsPopUpButton = nil
    self.mMessageBoardIsRectangularView = nil
    self.mMinPPTPTTTWdisplayUnitTextField = nil
    self.mMinPPTPTTTWinEBUnitPopUp = nil
    self.mMoveSelectedObjectsToSheetPanel = nil
    self.mMoveSelectedObjectsToSheetPopUpButton = nil
    self.mNCInSchematicsInspectorView = nil
    self.mNCRotationSegmentedControl = nil
    self.mNetClassColorWell = nil
    self.mNetClassHoleDiameterDimensionTextField = nil
    self.mNetClassHoleDiameterUnitPopUpButton = nil
    self.mNetClassPadDiameterDimensionTextField = nil
    self.mNetClassPadDiameterUnitPopUpButton = nil
    self.mNetClassTableView = nil
    self.mNetClassWidthDimensionTextField = nil
    self.mNetClassWidthUnitPopUpButton = nil
    self.mNetClassesPageView = nil
    self.mNetCountTextField = nil
    self.mNetInfoTableView = nil
    self.mNetListPageView = nil
    self.mNetWarningImageView = nil
    self.mNetWarningTextField = nil
    self.mNewComponentFromDevicePullDownButton = nil
    self.mNewSheetButton = nil
    self.mNoArtworkMessageTextField = nil
    self.mOARUnitPopUp = nil
    self.mOARValueTextField = nil
    self.mOpenSetDateDialogButton = nil
    self.mOperationBoardLimitsInspectorView = nil
    self.mPDFBoardBackgroundColorWell = nil
    self.mPHDUnitPopUp = nil
    self.mPHDValueTextField = nil
    self.mPageSegmentedControl = nil
    self.mPinPadAssignmentTableView = nil
    self.mProductFileGenerationLogTextView = nil
    self.mProductGenerationTabView = nil
    self.mProductPageView = nil
    self.mRasnetComponentNameSelectionPopUpButton = nil
    self.mRasnetNetNameSelectionPopUpButton = nil
    self.mRastnetDisplayPopUpButton = nil
    self.mRectangularBoardHeightTextField = nil
    self.mRectangularBoardHeightUnitPopUp = nil
    self.mRectangularBoardWidthHeighView = nil
    self.mRectangularBoardWidthTextField = nil
    self.mRectangularBoardWidthUnitPopUp = nil
    self.mRemoveDeviceButton = nil
    self.mRemoveEmbeddedDevicesButton = nil
    self.mRemoveFontButton = nil
    self.mRemoveNetClassButton = nil
    self.mRemoveSelectedComponentsActionButton = nil
    self.mRemoveSheetButton = nil
    self.mRemoveWirePointSchematicHotKeyTextField = nil
    self.mRenameComponentButton = nil
    self.mRenameComponentErrorMessageTextField = nil
    self.mRenameComponentFromComponentSymbolButton = nil
    self.mRenameComponentIndexesPopUpButton = nil
    self.mRenameComponentPanel = nil
    self.mRenameComponentPrefixComboxBox = nil
    self.mRenameComponentValidationButton = nil
    self.mRenameDeviceErrorMessageTextField = nil
    self.mRenameDeviceNameTextField = nil
    self.mRenameDevicePanel = nil
    self.mRenameDeviceTitleTextField = nil
    self.mRenameDeviceValidationButton = nil
    self.mRenameNetErrorTextField = nil
    self.mRenameNetInNetTabButton = nil
    self.mRenameNetOkButton = nil
    self.mRenameNetPanel = nil
    self.mRenameNetTextField = nil
    self.mResetDevicesAndFontsVersionButton = nil
    self.mResetFontVersionButton = nil
    self.mResetSelectedDeviceVersionButton = nil
    self.mRestrictRectangleInspectorView = nil
    self.mRevealPackageOfSelectedComponentsButton = nil
    self.mRouterBoardInspectorView = nil
    self.mSaveDSNFileAuxiliaryView = nil
    self.mSchematicBackColorColorWell = nil
    self.mSchematicCustomHeightTextField = nil
    self.mSchematicCustomHeightUnitPopUp = nil
    self.mSchematicCustomSizeView = nil
    self.mSchematicCustomWidthTextField = nil
    self.mSchematicCustomWidthUnitPopUp = nil
    self.mSchematicLabelInsulateSubnetButton = nil
    self.mSchematicLabelMergeSubnetButton = nil
    self.mSchematicLabelNetClassButton = nil
    self.mSchematicStatusImageViewInToolbar = nil
    self.mSchematicWireInsulateSubnetButton = nil
    self.mSchematicWireMergeSubnetButton = nil
    self.mSchematicWireNetClassButton = nil
    self.mSchematicsDatePicker = nil
    self.mSchematicsGridDisplayFactorPopUpButton = nil
    self.mSchematicsGridStylePopUpButton = nil
    self.mSchematicsHorizontalFlipSwitch = nil
    self.mSchematicsInspectorSegmentedControl = nil
    self.mSchematicsLabelInspectorView = nil
    self.mSchematicsLabelNetNameTextField = nil
    self.mSchematicsLabelRenameNetButton = nil
    self.mSchematicsLabelRotationSegmentedControl = nil
    self.mSchematicsPageView = nil
    self.mSchematicsSheetOrientationSegmentedControl = nil
    self.mSchematicsSheetsInspectorView = nil
    self.mSchematicsTitleTextField = nil
    self.mSchematicsVersionTextField = nil
    self.mSchematicsVerticalFlipSwitch = nil
    self.mSchematicsView = nil
    self.mSchematicsWireInspectorView = nil
    self.mSelectComponentsMenuItem = nil
    self.mSelectNetClassInNetTabButton = nil
    self.mSelectNetClassPanel = nil
    self.mSelectNetClassPopUpButton = nil
    self.mSelectNetsMenuItem = nil
    self.mSelectedBoardLimitInspectorView = nil
    self.mSelectedLimitDisplayUnitPopUp = nil
    self.mSelectedLimitShapePopUpButton = nil
    self.mSelectedObjectsBoardInspectorView = nil
    self.mSelectedObjectsBoardLimitsInspectorView = nil
    self.mSelectedObjectsSchematicsInspectorView = nil
    self.mSelectedSheetTitleTextField = nil
    self.mSetDatePanel = nil
    self.mSetDateToNowButton = nil
    self.mSheetDownButton = nil
    self.mSheetPopUpButton = nil
    self.mSheetUpButton = nil
    self.mShowRotationKnobInBoardSwitch = nil
    self.mSlavePadsShouldBeRoutedPopUpButton = nil
    self.mSymbolMirrorSwitch = nil
    self.mSymbolRotationSegmentedControl = nil
    self.mTopSideTrackCountTextField = nil
    self.mTrackCountTextField = nil
    self.mTrackCustomWidthTextField = nil
    self.mTrackCustomWidthUnitPopUp = nil
    self.mTrackDefaultWidthTextField = nil
    self.mTrackDefaultWidthUnitPopUp = nil
    self.mTrackInBoardRotationSlider = nil
    self.mTrackInBoardRotationTextField = nil
    self.mTrackLengthTextField = nil
    self.mTrackLengthUnitPopUp = nil
    self.mTrackLockView = nil
    self.mTrackNetClassNameTextField = nil
    self.mTrackNetNameTextField = nil
    self.mUnplacedPackageTableView = nil
    self.mUnplacedPackagesBoardInspectorView = nil
    self.mUnplacedPackagesCountTextField = nil
    self.mUnplacedSymbolsSchematicsInspectorView = nil
    self.mUnplacedSymbolsTableView = nil
    self.mUnplacedSymbolsTextField = nil
    self.mUpdateDeviceButton = nil
    self.mUpdateDevicesAndFontsButton = nil
    self.mUpdateFontButton = nil
    self.mUsesCustomHoleDiameterSwitch = nil
    self.mUsesCustomPadDiameterSwitch = nil
    self.mUsesCustomTrackWidthSwitch = nil
    self.mViaCountTextField = nil
    self.mViaCustomHoleDiameterTextField = nil
    self.mViaCustomHoleDiameterUnitPopUp = nil
    self.mViaCustomPadDiameterTextField = nil
    self.mViaCustomPadDiameterUnitPopUp = nil
    self.mViaDefaultHoleDiameterTextField = nil
    self.mViaDefaultHoleDiameterUnitPopUp = nil
    self.mViaDefaultPadDiameterTextField = nil
    self.mViaDefaultPadDiameterUnitPopUp = nil
    self.mViaNetClassNameTextField = nil
    self.mViaNetNameTextField = nil
    self.mWireNetNameTextField = nil
    self.mWireRenameNetButton = nil
    self.mWireRenameNetWithUniqueNewNameButton = nil
    self.minValueForBoardLimitTextField = nil
    self.minValueForBoardLimitUnitPopUp = nil
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

