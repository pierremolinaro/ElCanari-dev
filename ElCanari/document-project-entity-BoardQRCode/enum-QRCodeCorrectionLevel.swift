//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum QRCodeCorrectionLevel : Int, EnumPropertyProtocol, Hashable, CaseIterable {
  case low = 0
  case medium = 1
  case quality = 2
  case high = 3

  //····················································································································
  // Function popupTitles
  //····················································································································

  static func popupTitles () -> [String] {
    return ["L", "M", "Q", "H"]
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> QRCodeCorrectionLevel? {
    if let v = QRCodeCorrectionLevel (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> QRCodeCorrectionLevel {
    var result = self
    let v : QRCodeCorrectionLevel? = QRCodeCorrectionLevel (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> QRCodeCorrectionLevel {
    var result = QRCodeCorrectionLevel.low
    if let number = object as? NSNumber, let v = QRCodeCorrectionLevel (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> QRCodeCorrectionLevel? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = QRCodeCorrectionLevel (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_QRCodeCorrectionLevel = EBReadOnlyEnumProperty <QRCodeCorrectionLevel>
typealias EBTransientProperty_QRCodeCorrectionLevel = EBTransientEnumProperty <QRCodeCorrectionLevel>
typealias EBReadWriteProperty_QRCodeCorrectionLevel = EBReadWriteEnumProperty <QRCodeCorrectionLevel>
typealias EBStoredProperty_QRCodeCorrectionLevel = EBStoredEnumProperty <QRCodeCorrectionLevel>
typealias EBComputedProperty_QRCodeCorrectionLevel = EBGenericComputedEnumProperty <QRCodeCorrectionLevel>
typealias EBPreferencesProperty_QRCodeCorrectionLevel = EBStoredEnumProperty <QRCodeCorrectionLevel>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
