//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_BoardText_selectionDisplay (
       _ self_mX : Int,                    
       _ self_mY : Int,                    
       _ self_mText : String,              
       _ self_mFontSize : Double,          
       _ self_mFont_descriptor : BoardFontDescriptor?,
       _ self_mHorizontalAlignment : HorizontalAlignment,
       _ self_mVerticalAlignment : BoardTextVerticalAlignment,
       _ self_mLayer : BoardTextLayer,     
       _ self_mRotation : Int,             
       _ self_mWeight : Double,            
       _ self_mOblique : Bool,             
       _ prefs_frontSideLegendColorForBoard : NSColor,
       _ prefs_frontSideLayoutColorForBoard : NSColor,
       _ prefs_backSideLayoutColorForBoard : NSColor,
       _ prefs_backSideLegendColorForBoard : NSColor,
       _ prefs_hiliteWidthMultipliedByTen : Int
) -> EBShape {
//--- START OF USER ZONE 2
        let (textBP, frameBP, origin, rotationKnob, _) = boardText_displayInfos (
          x: self_mX,
          y: self_mY,
          string: self_mText,
          fontSize: self_mFontSize,
          self_mFont_descriptor!,
          horizontalAlignment: self_mHorizontalAlignment,
          verticalAlignment: self_mVerticalAlignment,
          frontSide: (self_mLayer == .layoutFront) || (self_mLayer == .legendFront),
          rotation: self_mRotation,
          weight: self_mWeight,
          oblique: self_mOblique,
          extraWidth: 0.0
        )
        let textColor : NSColor
        switch self_mLayer {
        case .legendFront :
          textColor = prefs_frontSideLegendColorForBoard
        case .layoutFront :
          textColor = prefs_frontSideLayoutColorForBoard
        case .layoutBack :
          textColor = prefs_backSideLayoutColorForBoard
        case .legendBack :
          textColor = prefs_backSideLegendColorForBoard
        }
      //--- Background
        var shape = EBShape ()
        shape.add (filled: [frameBP], (textColor == .white) ? .lightGray : .white)
        shape.add (stroke: [frameBP], .cyan)
        shape.add (stroke: [textBP], textColor)
      //--- Rotation knob
        var knobLine = EBBezierPath ()
        knobLine.move (to : origin)
        knobLine.line (to : rotationKnob)
        knobLine.lineWidth = CGFloat (prefs_hiliteWidthMultipliedByTen) / 10.0
        knobLine.lineCapStyle = .round
        knobLine.lineJoinStyle = .round
        shape.add (stroke: [knobLine], .cyan)
        shape.add (knobAt:  rotationKnob, knobIndex: BOARD_TEXT_ROTATION_KNOB, .circ, 2.0)
      //--- Knob
        shape.add (knobAt:  origin, knobIndex: BOARD_TEXT_ORIGIN_KNOB, .rect, 2.0)
      //---
        return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
