//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_CommentInSchematic_selectionDisplay (
       _ self_mComment : String,                               
       _ self_mColor : NSColor,                                
       _ self_mSize : Double,                                  
       _ self_mHorizontalAlignment : HorizontalAlignment,      
       _ self_mVerticalAlignment : VerticalAlignment,          
       _ prefs_schematicBackColor : NSColor,                   
       _ self_mX : Int,                                        
       _ self_mY : Int
) -> EBShape {
//--- START OF USER ZONE 2
        let s = CGFloat (self_mSize)
        let font = NSFont (name: "LucidaGrande", size: s)!
        let p = CanariPoint (x: self_mX, y: self_mY).cocoaPoint
        var shape = EBShape ()
        shape.add (
          textKnob: (self_mComment.isEmpty) ? "Empty comment" : self_mComment,
          p,
          font,
          foreColor: self_mColor,
          backColor: prefs_schematicBackColor,
          self_mHorizontalAlignment.ebTextShapeHorizontalAlignment,
          self_mVerticalAlignment.ebTextShapeVerticalAlignment,
          .rect,
          knobIndex: 0
        )
        shape.add (knobAt: p, knobIndex: 0, .rect, SCHEMATIC_KNOB_SIZE)
        return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
