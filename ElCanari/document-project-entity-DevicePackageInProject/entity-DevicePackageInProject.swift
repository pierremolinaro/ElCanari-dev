//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DevicePackageInProject_mPackageName : AnyObject {
  var mPackageName : String { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DevicePackageInProject_mStrokeBezierPath : AnyObject {
  var mStrokeBezierPath : NSBezierPath { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor protocol DevicePackageInProject_packagePadDictionary : AnyObject {
  var packagePadDictionary : PackageMasterPadDictionary? { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Entity: DevicePackageInProject
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class DevicePackageInProject : EBManagedObject,
         DevicePackageInProject_mPackageName,
         DevicePackageInProject_mStrokeBezierPath,
         DevicePackageInProject_packagePadDictionary {

  //····················································································································
  //   To many property: mMasterPads
  //····················································································································

  final let mMasterPads_property = StoredArrayOf_DeviceMasterPadInProject (usedForSignature: false, key: "mMasterPads")

  //····················································································································

  //····················································································································

  final var mMasterPads : EBReferenceArray <DeviceMasterPadInProject> {
    get { return self.mMasterPads_property.propval }
    set { self.mMasterPads_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mPackageName
  //····················································································································

  final let mPackageName_property : EBStoredProperty_String

  //····················································································································

  final func reset_mPackageName_toDefaultValue () {
    self.mPackageName = ""
  }

  //····················································································································

  final var mPackageName : String {
    get { return self.mPackageName_property.propval }
    set { self.mPackageName_property.setProp (newValue) }
  }

  //····················································································································
  //   Atomic property: mStrokeBezierPath
  //····················································································································

  final let mStrokeBezierPath_property : EBStoredProperty_NSBezierPath

  //····················································································································

  final func reset_mStrokeBezierPath_toDefaultValue () {
    self.mStrokeBezierPath = NSBezierPath ()
  }

  //····················································································································

  final var mStrokeBezierPath : NSBezierPath {
    get { return self.mStrokeBezierPath_property.propval }
    set { self.mStrokeBezierPath_property.setProp (newValue) }
  }

  //····················································································································
  //   Transient property: packagePadDictionary
  //····················································································································

  final let packagePadDictionary_property = EBTransientProperty_PackageMasterPadDictionary ()

  //····················································································································

  final var packagePadDictionary : PackageMasterPadDictionary? {
    return self.packagePadDictionary_property.optionalValue
  }

  //····················································································································
  //    init
  //····················································································································

  required init (_ inUndoManager : UndoManager?) {
    self.mPackageName_property = EBStoredProperty_String (defaultValue: "", undoManager: inUndoManager, key: "mPackageName")
    self.mStrokeBezierPath_property = EBStoredProperty_NSBezierPath (defaultValue: NSBezierPath (), undoManager: inUndoManager, key: "mStrokeBezierPath")
    super.init (inUndoManager)
//    gInitSemaphore.wait ()
  //--- To many property: mMasterPads (no option)
    self.mMasterPads_property.undoManager = inUndoManager
  //--- Atomic property: packagePadDictionary
    self.packagePadDictionary_property.mReadModelFunction = { [weak self] in
      if let unwSelf = self {
        let s0 = unwSelf.mMasterPads_property.selection
        switch (s0) {
        case (.single (let v0)) :
          return .single (transient_DevicePackageInProject_packagePadDictionary (v0))
        case (.multiple) :
          return .multiple
        default :
          return .empty
        }
      }else{
        return .empty
      }
    }
    self.mMasterPads_property.toMany_descriptor_StartsToBeObserved (by: self.packagePadDictionary_property)
//    gInitSemaphore.signal ()
  //--- Install undoers and opposite setter for relationships
  //--- Register properties for handling signature
  //--- Extern delegates
   }
  
  //····················································································································
  //    Extern delegates
  //····················································································································


  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

