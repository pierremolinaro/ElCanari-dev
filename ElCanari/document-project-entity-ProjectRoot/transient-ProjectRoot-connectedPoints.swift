//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_ProjectRoot_connectedPoints (
       _ self_mSelectedSheet_connectedPoints : EBShape?,
       _ self_selectedSheetIssues : CanariIssueArray
) -> EBShape {
//--- START OF USER ZONE 2
        var shape = EBShape ()
      //--- Issues
        var warningPathes = [EBBezierPath] ()
        var errorPathes = [EBBezierPath] ()
        for issue in self_selectedSheetIssues {
          switch issue.kind {
          case .warning :
            warningPathes += issue.pathes
          case .error :
            errorPathes += issue.pathes
          }
        }
        if !warningPathes.isEmpty {
          shape.add (filled: warningPathes, NSColor.myOrange)
        }
        if !errorPathes.isEmpty {
          shape.add (filled: errorPathes, .red)
        }
      //--- Connected points
        if let connectedPointShape = self_mSelectedSheet_connectedPoints {
          shape.add (connectedPointShape)
        }
        return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
