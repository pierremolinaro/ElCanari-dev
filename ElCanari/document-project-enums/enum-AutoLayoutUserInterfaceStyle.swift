//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum AutoLayoutUserInterfaceStyle : Int, EnumPropertyProtocol, Hashable, CaseIterable {
  case roundedBezel = 0
  case roundRect = 1
  case texturedRounded = 2
  case texturedSquare = 3
  case shadowlessSquare = 4

  //····················································································································
  // Function popupTitles
  //····················································································································

  static func popupTitles () -> [String] {
    return ["Rounded Bezel", "Round Rect", "Textured Rounded", "Textured Square", "Shadowless Square"]
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> AutoLayoutUserInterfaceStyle? {
    if let v = AutoLayoutUserInterfaceStyle (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> AutoLayoutUserInterfaceStyle {
    var result = self
    let v : AutoLayoutUserInterfaceStyle? = AutoLayoutUserInterfaceStyle (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> AutoLayoutUserInterfaceStyle {
    var result = AutoLayoutUserInterfaceStyle.roundedBezel
    if let number = object as? NSNumber, let v = AutoLayoutUserInterfaceStyle (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> AutoLayoutUserInterfaceStyle? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = AutoLayoutUserInterfaceStyle (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_AutoLayoutUserInterfaceStyle = EBReadOnlyEnumProperty <AutoLayoutUserInterfaceStyle>
typealias EBTransientProperty_AutoLayoutUserInterfaceStyle = EBTransientEnumProperty <AutoLayoutUserInterfaceStyle>
typealias EBReadWriteProperty_AutoLayoutUserInterfaceStyle = EBReadWriteEnumProperty <AutoLayoutUserInterfaceStyle>
typealias EBStoredProperty_AutoLayoutUserInterfaceStyle = EBStoredEnumProperty <AutoLayoutUserInterfaceStyle>
typealias EBPropertyProxy_AutoLayoutUserInterfaceStyle = EBPropertyEnumProxy <AutoLayoutUserInterfaceStyle>
typealias EBPreferencesProperty_AutoLayoutUserInterfaceStyle = EBStoredEnumProperty <AutoLayoutUserInterfaceStyle>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
