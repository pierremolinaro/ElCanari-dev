//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum RastnetDisplay : Int, EnumPropertyProtocol, Hashable {
  case hidden = 0
  case allNets = 1
  case oneNet = 2
  case componentNets = 3
  case selectedComponents = 4

  //····················································································································
  // Function popupTitles
  //····················································································································

  static func popupTitles () -> [String] {
    return ["No", "All Nets", "This Net", "Nets of Component", "Selected Components Nets"]
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> RastnetDisplay? {
    if let v = RastnetDisplay (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> RastnetDisplay {
    var result = self
    let v : RastnetDisplay? = RastnetDisplay (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> RastnetDisplay {
    var result = RastnetDisplay.hidden
    if let number = object as? NSNumber, let v = RastnetDisplay (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> RastnetDisplay? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = RastnetDisplay (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadWriteProperty_RastnetDisplay = EBEnumReadWriteProperty <RastnetDisplay> // EBObservableMutableProperty <RastnetDisplay>
typealias EBStoredProperty_RastnetDisplay = EBEnumStoredProperty <RastnetDisplay>
typealias EBComputedProperty_RastnetDisplay = EBEnumGenericComputedProperty <RastnetDisplay>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
