//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————

enum TrackEndStyle : Int, EBEnumPropertyProtocol, Hashable {
  case round = 0
  case square = 1

  //································································································
  // Function popupTitles
  //································································································

  static func popupTitles () -> [String] {
    return ["Round", "Square"]
  }

  //································································································
  //  Enum generic bindings utility functions
  //································································································

  static func buildfromRawValue (rawValue : Int) -> TrackEndStyle? {
    if let v = TrackEndStyle (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //································································································

  func enumfromRawValue (rawValue : Int) -> TrackEndStyle {
    var result = self
    let v : TrackEndStyle? = TrackEndStyle (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //································································································
  //  EBStoredPropertyProtocol
  //································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //································································································

  static func convertFromNSObject (object : NSObject) -> TrackEndStyle {
    var result = TrackEndStyle.round
    if let number = object as? NSNumber, let v = TrackEndStyle (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> TrackEndStyle? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = TrackEndStyle (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadWriteProperty_TrackEndStyle = EBEnumReadWriteProperty <TrackEndStyle> // EBObservableMutableProperty <TrackEndStyle>
typealias EBStoredProperty_TrackEndStyle = EBEnumStoredProperty <TrackEndStyle>
typealias EBComputedProperty_TrackEndStyle = EBEnumGenericComputedProperty <TrackEndStyle>

//——————————————————————————————————————————————————————————————————————————————————————————————————
