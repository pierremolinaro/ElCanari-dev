//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_SymbolPin_selectionDisplay (
       _ self_xPin : Int,                  
       _ self_yPin : Int,                  
       _ self_xName : Int,                 
       _ self_yName : Int,                 
       _ self_xNumber : Int,               
       _ self_yNumber : Int,               
       _ self_nameHorizontalAlignment : HorizontalAlignment,
       _ self_numberHorizontalAlignment : HorizontalAlignment
) -> EBShape {
//--- START OF USER ZONE 2
    var shape = EBShape ()
    let pinPoint = NSPoint (x: canariUnitToCocoa (self_xPin), y: canariUnitToCocoa (self_yPin))
    let namePoint = NSPoint (x: canariUnitToCocoa (self_xName), y: canariUnitToCocoa (self_yName))
    let numberPoint = NSPoint (x: canariUnitToCocoa (self_xNumber), y: canariUnitToCocoa (self_yNumber))
    var bp = EBBezierPath ()
    bp.move (to: numberPoint)
    bp.line (to: pinPoint)
    bp.line (to: namePoint)
    bp.lineWidth = 0.25
    bp.lineCapStyle = .round
    shape.add (stroke: [bp], NSColor.cyan)
  //--- Pin
    shape.add (knobAt:  pinPoint, knobIndex: SYMBOL_PIN_ENDPOINT, .rect, 2.0)
  //--- Name
    shape.add (knobAt:  namePoint, knobIndex: SYMBOL_PIN_LABEL, .diamond, 2.0)
  //--- Number
    shape.add (knobAt:  numberPoint, knobIndex: SYMBOL_PIN_NUMBER, .diamond, 2.0)
  //---
    return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
