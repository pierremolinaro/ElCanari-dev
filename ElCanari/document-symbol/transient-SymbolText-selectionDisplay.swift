//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func transient_SymbolText_selectionDisplay (
       _ prefs_selectionHiliteColor : NSColor,         
       _ self_x : Int,                                 
       _ self_y : Int,                                 
       _ self_text : String,                           
       _ self_horizontalAlignment : HorizontalAlignment,
       _ prefs_pinNameFont : NSFont
) -> EBShape {
//--- START OF USER ZONE 2
    var shape = EBShape ()
    let origin = NSPoint (x: canariUnitToCocoa (self_x), y: canariUnitToCocoa (self_y))
    let textAttributes : [NSAttributedString.Key : Any] = [
      NSAttributedString.Key.font : prefs_pinNameFont
    ]
    let textShape = EBShape (text: self_text, origin, textAttributes, self_horizontalAlignment.ebTextShapeHorizontalAlignment, .center)
    var bp = EBBezierPath (rect: textShape.boundingBox)
    bp.lineWidth = 0.25
    shape.add (stroke: [bp], prefs_selectionHiliteColor)
    shape.add (knobAt:  origin, knobIndex: 0, .rect, 2.0)
    return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
