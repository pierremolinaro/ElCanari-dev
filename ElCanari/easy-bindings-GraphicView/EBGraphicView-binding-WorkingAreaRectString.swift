//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGraphicView
//——————————————————————————————————————————————————————————————————————————————————————————————————

extension EBGraphicView {

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final fileprivate func updateOutlet (_ inString : EBObservableProperty <String>) {
    switch inString.selection {
    case .empty, .multiple :
      ()
    case .single (let v) :
      if self.mWorkingArea == nil {
        self.mWorkingArea = WorkingArea ()
        self.mWorkingArea?.set (color: preferences_workingAreaColorForBoard_property.propval)
      }
      self.mWorkingArea?.set (rectString: v, self)
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func bind_workingAreaRectString (_ inObject : EBObservableMutableProperty <String>) {
    self.mWorkingAreaRectStringController = EBGenericReadWritePropertyController <String> (
      observedObject: inObject,
      callBack: { [weak self] in self?.updateOutlet (inObject) }
    )
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

//  final func unbind_workingAreaRectString () {
//    self.mWorkingAreaRectStringController?.unregister ()
//    self.mWorkingAreaRectStringController = nil
//  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//——————————————————————————————————————————————————————————————————————————————————————————————————
