//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGraphicView
//——————————————————————————————————————————————————————————————————————————————————————————————————

extension EBGraphicView {

  //····················································································································

  final func bind_backgroundImageData (_ model : EBObservableProperty <Data>) {
    self.mBackgroundImageDataController = EBObservablePropertyController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateBackgroundImageData (from: model) }
    )
  }

  //····················································································································

//  final func unbind_backgroundImageData () {
//    self.mBackgroundImageDataController?.unregister ()
//    self.mBackgroundImageDataController = nil
//  }

  //····················································································································

  final private func updateBackgroundImageData (from model : EBObservableProperty <Data>) {
    if self.mBackgroundImage != nil {
      self.mBackgroundImage = nil
      self.setNeedsDisplayAndUpdateViewBounds ()
    }
    switch model.selection {
    case .empty :
      break
    case .single (let v) :
      if let ciImage = CIImage (data: v) {
        self.mBackgroundImage = ciImage
        self.setNeedsDisplayAndUpdateViewBounds ()
      }
    case .multiple :
      break
    }
  }

  //····················································································································

//  final func bind_backgroundImageOpacity (_ model : EBReadOnlyProperty_Double, file : String, line : Int) {
//    self.mBackgroundImageOpacityController = EBObservablePropertyController (
//      observedObjects: [model],
//      callBack: { [weak self] in self?.updateBackgroundImageOpacity (from: model) }
//    )
//  }

  //····················································································································

//  final func unbind_backgroundImageOpacity () {
//    self.mBackgroundImageOpacityController?.unregister ()
//    self.mBackgroundImageOpacityController = nil
//  }

  //····················································································································

//  final private func updateBackgroundImageOpacity (from model : EBReadOnlyProperty_Double) {
//    switch model.selection {
//    case .empty :
//      break
//    case .single (let v) :
//      self.mBackgroundImageOpacity = CGFloat (v)
//      self.needsDisplay = true
//    case .multiple :
//      break
//    }
//  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————
