//
//  AutoLayoutStatusView.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 19/08/2024.
//
/////--------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//--------------------------------------------------------------------------------------------------

import AppKit

//--------------------------------------------------------------------------------------------------

private let BADGE_WIDTH : CGFloat = 16.0

//--------------------------------------------------------------------------------------------------
//   AutoLayoutStatusView
//--------------------------------------------------------------------------------------------------

final class AutoLayoutStatusView : ALB_NSView {

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // 0 -> unknown, 1 -> ok, 2 -> error
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private var mStatus : Int = 0

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override var intrinsicContentSize : NSSize {
    return NSSize (width: BADGE_WIDTH * 2.0, height: BADGE_WIDTH * 2.0)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  override func draw (_ inDirtyRect : NSRect) {
  //--- Color and text
    let color : NSColor
    if self.mStatus == 2 {
      color = NSColor.systemRed
    }else if self.mStatus == 1 {
      color = NSColor.systemGreen
    }else{
      color = NSColor.systemGray
    }
    color.setFill ()
    let r = NSRect (
      center: self.bounds.center,
      size: NSSize (width: BADGE_WIDTH, height: BADGE_WIDTH)
    )
    let bp = NSBezierPath (ovalIn: r)
    bp.fill ()
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //  tooltip binding
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  fileprivate func updateTooltip (_ inObjectSelection : EBSelection <String>) {
    switch inObjectSelection {
    case .empty, .multiple :
      self.toolTip = nil
    case .single (let propertyValue) :
      self.toolTip = propertyValue
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private var mTooltipController : EBObservablePropertyController? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func bind_tooltip (_ inObject : EBObservableProperty <String>) -> Self {
    self.mTooltipController = EBObservablePropertyController (
      observedObjects: [inObject],
      callBack: { [weak self] in self?.updateTooltip (inObject.selection) }
    )
    return self
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  //  $status binding
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  private var mStatusController : EBObservablePropertyController? = nil

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  final func bind_status (_ inObject : EBObservableProperty <Int>) -> Self {
    self.mStatusController = EBObservablePropertyController (
      observedObjects: [inObject],
      callBack: { [weak self] in self?.updateStatus (inObject.selection) }
    )
    return self
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  fileprivate func updateStatus (_ inObjectSelection : EBSelection <Int>) {
    switch inObjectSelection {
    case .empty, .multiple :
      self.mStatus = 0
    case .single (let propertyValue) :
      self.mStatus = propertyValue
    }
    self.needsDisplay = true
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//--------------------------------------------------------------------------------------------------
