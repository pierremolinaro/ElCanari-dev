//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————

struct EBFileMetadata {
  let metadataStatus : MetadataStatus
  let metadataDictionary : [String : Any]
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

func getFileMetadata (atPath inFilePath : String) throws -> EBFileMetadata {
//--- Open file
  let f = try FileHandle (forReadingFrom: (URL (fileURLWithPath: inFilePath)))
//--- Try binary format ?
  if let metadata = getBinaryFileMetadata (forFileHandle: f) {
    f.closeFile ()
    return metadata
  }else if let metadata = getTextFileMetadata (forFileHandle: f) {
    f.closeFile ()
    return metadata
  }else{
    f.closeFile ()
    let dictionary : [String : String] = [
      NSLocalizedDescriptionKey : "Cannot read '\(inFilePath)' file",
      NSLocalizedRecoverySuggestionErrorKey : "File does not have the required format.",
    ]
    throw NSError (
      domain: Bundle.main.bundleIdentifier!,
      code: 1,
      userInfo: dictionary
    )
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————

extension FileHandle {

  //····················································································································

  func readByte () -> UInt8 {
    let statusData : Data = self.readData (ofLength: 1)
    return statusData [0]
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————
