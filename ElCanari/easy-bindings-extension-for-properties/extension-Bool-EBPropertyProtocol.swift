//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    extension Bool : EBStoredPropertyProtocol
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension Bool : EBStoredPropertyProtocol {

  //····················································································································

  func ebHashValue () -> UInt32 {
    var crc : UInt32 = 0
    crc.accumulate (u8: self ? 1 : 0)
    return crc
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> Bool {
    let number = object as! NSNumber
    return number.boolValue
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    let v : ASCII = self ? .T : .F
    ioData.append (v.rawValue)
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> Bool? {
    if inRange.length == 1 {
      let c = inData [inRange.location]
      if c == ASCII.T.rawValue {
        return true
      }else if c == ASCII.F.rawValue {
        return false
      }else{
        return nil
      }
    }else{
      return nil
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func < (left : Bool, right : Bool) -> Bool {
  return !left && right
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func > (left : Bool, right : Bool) -> Bool {
  return left && !right
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
