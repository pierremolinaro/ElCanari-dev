//——————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————
//   EBObservablePropertyController
//——————————————————————————————————————————————————————————————————————————————————————————————————

class EBObservablePropertyController : EBOutletEvent {

  //································································································

  final private var mPrivateObservedObjects = [WeakObservedObject] ()

  //································································································

  init (observedObjects inObservedObjects : [EBObservableObjectProtocol],
        callBack inCallBack : Optional <() -> Void>) {
    for object in inObservedObjects {
      self.mPrivateObservedObjects.append (WeakObservedObject (object))
    }
    super.init ()
    self.mEventCallBack = inCallBack
    for object in inObservedObjects {
      object.startsBeingObserved (by: self)
    }
  }

  //································································································

  final func unregister () {
    for weakObject in self.mPrivateObservedObjects {
      weakObject.weakObservedObject?.stopsBeingObserved (by: self)
    }
    self.mPrivateObservedObjects.removeAll ()
    self.mEventCallBack = nil
  }

  //································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————

fileprivate struct WeakObservedObject {

  //································································································

  private weak var mWeakObservedObject : EBObservableObjectProtocol?
  var weakObservedObject : EBObservableObjectProtocol? { return self.mWeakObservedObject }

  //································································································

  init (_ inObservedObject : EBObservableObjectProtocol) {
    self.mWeakObservedObject = inObservedObject
  }

  //································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————
