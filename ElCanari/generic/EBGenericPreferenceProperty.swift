//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGenericPreferenceProperty <T>
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class EBGenericPreferenceProperty <T : EBStoredPropertyProtocol> : EBObservableMutableProperty <T> {

  //····················································································································

  private let mPreferenceKey : String

  //····················································································································

  init (defaultValue inValue : T, prefKey inPreferenceKey : String) {
    self.mPreferenceKey = inPreferenceKey
    self.mValue = inValue
    super.init ()
  //--- Read from preferences
    let possibleValue = UserDefaults.standard.object (forKey: inPreferenceKey)
    if let object = possibleValue as? NSObject {
      let value = T.convertFromNSObject (object: object)
      setProp (value)
    }
  }

  //····················································································································
  //  Value
  //····················································································································

  private var mValue : T

  //····················································································································

  var propval : T { return self.mValue }

  //····················································································································

  override var selection : EBSelection <T> { return .single (self.propval) }

  //····················································································································

  override func setProp (_ inValue : T) {
    if self.mValue != inValue {
      self.mValue = inValue
      self.observedObjectDidChange ()
    }
  }

  //····················································································································

  override func observedObjectDidChange () {
    UserDefaults.standard.set (self.propval.convertToNSObject (), forKey: self.mPreferenceKey)
    super.observedObjectDidChange ()
  }


  //····················································································································

  final var validationFunction : (T, T) -> EBValidationResult <T> = defaultValidationFunction

  //····················································································································

  override func validateAndSetProp (_ candidateValue : T,
                                    windowForSheet inWindow:NSWindow?) -> Bool {
    var result = true
    let validationResult = validationFunction (propval, candidateValue)
    switch validationResult {
    case .ok (let validatedValue) :
      self.setProp (validatedValue)
    case .rejectWithBeep :
      result = false
      __NSBeep ()
    case .rejectWithAlert (let informativeText) :
      result = false
      let alert = NSAlert ()
      alert.messageText = "The value " + String (describing: candidateValue) + " is invalid."
      alert.informativeText = informativeText
      alert.addButton (withTitle: "Ok")
      alert.addButton (withTitle: "Discard Change")
      if let window = inWindow {
        alert.beginSheetModal (for:window) { (response : NSApplication.ModalResponse) in
          if response == .alertSecondButtonReturn { // Discard Change
            self.observedObjectDidChange ()
          }
        }
      }else{
        alert.runModal ()
      }
    }
    return result
  }
  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
