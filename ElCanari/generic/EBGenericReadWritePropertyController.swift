//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class EBGenericReadWritePropertyController <T> : EBObservablePropertyController where T : Equatable {

  //····················································································································

  private weak var mObject : EBObservableMutableProperty <T>?

  //····················································································································

  init (observedObject inObject : EBObservableMutableProperty <T>, callBack inCallBack : @escaping () -> Void) {
    self.mObject = inObject
    super.init (observedObjects : [inObject], callBack : inCallBack)
  }

  //····················································································································

  func updateModel (withCandidateValue inValue : T, windowForSheet inWindow : NSWindow?) -> Bool {
    return self.mObject?.validateAndSetProp (inValue, windowForSheet: inWindow) ?? false
  }

  //····················································································································

  var value : T? {
    if let s = self.mObject?.selection {
      switch s {
      case .empty, .multiple :
        return nil
      case .single (let v) :
        return v
      }
    }else{
      return nil
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
