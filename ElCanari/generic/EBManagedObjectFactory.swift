//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

let ENTITY_KEY = "--entity"

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

fileprivate let kEntityDictionary : [String : EBManagedObject.Type] = [
  "CanariLibraryEntry" : CanariLibraryEntry.self,
  "FontCharacter" : FontCharacter.self,
  "SegmentForFontCharacter" : SegmentForFontCharacter.self,
  "FontRoot" : FontRoot.self,
  "ArtworkRoot" : ArtworkRoot.self,
  "ArtworkFileGenerationParameters" : ArtworkFileGenerationParameters.self,
  "BoardModelPad" : BoardModelPad.self,
  "SegmentEntity" : SegmentEntity.self,
  "BoardModelVia" : BoardModelVia.self,
  "BoardModel" : BoardModel.self,
  "MergerBoardInstance" : MergerBoardInstance.self,
  "MergerRoot" : MergerRoot.self,
  "SymbolObject" : SymbolObject.self,
  "SymbolPin" : SymbolPin.self,
  "SymbolText" : SymbolText.self,
  "SymbolSolidRect" : SymbolSolidRect.self,
  "SymbolOval" : SymbolOval.self,
  "SymbolSolidOval" : SymbolSolidOval.self,
  "SymbolBezierCurve" : SymbolBezierCurve.self,
  "SymbolSegment" : SymbolSegment.self,
  "SymbolRoot" : SymbolRoot.self,
  "PackageRoot" : PackageRoot.self,
  "PackageObject" : PackageObject.self,
  "PackagePad" : PackagePad.self,
  "PackageSlavePad" : PackageSlavePad.self,
  "PackageZone" : PackageZone.self,
  "PackageModelImageDoublePoint" : PackageModelImageDoublePoint.self,
  "PackageSegment" : PackageSegment.self,
  "PackageBezier" : PackageBezier.self,
  "PackageOval" : PackageOval.self,
  "PackageArc" : PackageArc.self,
  "PackageGuide" : PackageGuide.self,
  "PackageDimension" : PackageDimension.self,
  "ForbiddenPadNumber" : ForbiddenPadNumber.self,
  "DeviceRoot" : DeviceRoot.self,
  "DeviceDocumentation" : DeviceDocumentation.self,
  "PackageInDevice" : PackageInDevice.self,
  "SymbolTypeInDevice" : SymbolTypeInDevice.self,
  "SymbolInstanceInDevice" : SymbolInstanceInDevice.self,
  "PadProxyInDevice" : PadProxyInDevice.self,
  "MasterPadInDevice" : MasterPadInDevice.self,
  "SlavePadInDevice" : SlavePadInDevice.self,
  "SymbolPinTypeInDevice" : SymbolPinTypeInDevice.self,
  "SymbolPinInstanceInDevice" : SymbolPinInstanceInDevice.self,
  "ProjectRoot" : ProjectRoot.self,
  "BoardObject" : BoardObject.self,
  "BoardLine" : BoardLine.self,
  "BoardRestrictRectangle" : BoardRestrictRectangle.self,
  "BoardText" : BoardText.self,
  "FontInProject" : FontInProject.self,
  "NetInProject" : NetInProject.self,
  "BorderCurve" : BorderCurve.self,
  "SchematicObject" : SchematicObject.self,
  "DeviceInProject" : DeviceInProject.self,
  "DevicePackageInProject" : DevicePackageInProject.self,
  "ComponentSymbolInProject" : ComponentSymbolInProject.self,
  "PointInSchematic" : PointInSchematic.self,
  "DeviceSymbolInstanceInProject" : DeviceSymbolInstanceInProject.self,
  "DevicePadAssignmentInProject" : DevicePadAssignmentInProject.self,
  "DeviceMasterPadInProject" : DeviceMasterPadInProject.self,
  "DeviceSlavePadInProject" : DeviceSlavePadInProject.self,
  "DevicePinInProject" : DevicePinInProject.self,
  "DeviceSymbolTypeInProject" : DeviceSymbolTypeInProject.self,
  "LabelInSchematic" : LabelInSchematic.self,
  "NCInSchematic" : NCInSchematic.self,
  "NetClassInProject" : NetClassInProject.self,
  "SheetInProject" : SheetInProject.self,
  "WireInSchematic" : WireInSchematic.self,
  "BoardConnector" : BoardConnector.self,
  "ComponentInProject" : ComponentInProject.self,
  "BoardTrack" : BoardTrack.self,
  "CommentInSchematic" : CommentInSchematic.self
]

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  newInstanceOfEntityNamed
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func newInstanceOfEntityNamed (_ ebUndoManager : EBUndoManager?,
                                          _ inEntityTypeName : String) -> EBManagedObject? {
  if let T = kEntityDictionary [inEntityTypeName] {
    return T.init (ebUndoManager)
  }else{
    return nil
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   makeManagedObjectFromDictionary
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@MainActor func makeManagedObjectFromDictionary (_ inUndoManager : EBUndoManager?,
                                                 _ inDictionary : NSDictionary) -> EBManagedObject? {
  let entityName = inDictionary.value (forKey: ENTITY_KEY) as! String
  if let object = newInstanceOfEntityNamed (inUndoManager, entityName) {
    object.setUpAtomicPropertiesWithDictionary (inDictionary)
    return object
  }else{
    return nil
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
