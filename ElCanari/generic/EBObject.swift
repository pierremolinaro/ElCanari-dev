//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

protocol ObjectIndexProtocol : AnyObject {
  var objectIndex : Int { get }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

fileprivate var gEasyBindingsObjectIndex = 0

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    EBObjcBaseObject class
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class EBObjcBaseObject : NSObject, ObjectIndexProtocol {

  //····················································································································

  final let objectIndex : Int

  //····················································································································

  override init () {
    self.objectIndex = gEasyBindingsObjectIndex
    gEasyBindingsObjectIndex += 1
    super.init ()
    noteObjectAllocation (self)
  }

  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    EBSwiftBaseObject class
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class EBSwiftBaseObject : ObjectIndexProtocol {

  //····················································································································

  final let objectIndex : Int

  //····················································································································

  init () {
    self.objectIndex = gEasyBindingsObjectIndex
    gEasyBindingsObjectIndex += 1
    noteObjectAllocation (self)
  }

  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//private let explorerLetters = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L",
//                               "M", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
//
//func explorerObjectIndexString (_ idx : Int) -> String {
//  var result = String (idx % 10)
//  var n = idx / 10
//  result += "\(n % 10)"
//  n /= 10
//  result += explorerLetters [n % explorerLetters.count]
//  n /= explorerLetters.count
//  result += explorerLetters [n % explorerLetters.count]
//  n /= explorerLetters.count
//  result += explorerLetters [n % explorerLetters.count]
//  n /= explorerLetters.count
//  if n > 0 {
//    result += "\(n)"
//  }
//  return result
//}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
