//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBObservedObjectProtocol
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//protocol EBObservedObjectProtocol : AnyObject {
//  func addEBObserver (_ inObserver : EBObserverProtocol)
//  func removeEBObserver (_ inObserver : EBObserverProtocol)
//  func observedObjectDidChange ()
//}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBObservedObject
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//actor EBObservedObjectActor {
//
//  //····················································································································
//
//  private final var mObservers = EBWeakEventSet ()
//
//  //····················································································································
//
//  func addEBObserver (_ inObserver : EBObserverProtocol) {
//    self.mObservers.insert (inObserver)
//    inObserver.observedObjectDidChange ()
//  }
//
//  //····················································································································
//
//  func removeEBObserver (_ inObserver : EBObserverProtocol) {
//    self.mObservers.remove (inObserver)
//  }
//
//  //····················································································································
//
//  func observedObjectDidChange () {
//    for (_, entry) in self.mObservers.dictionary {
//      if let observer = entry.observer {
//        observer.observedObjectDidChange ()
//      }else{
//        self.mObservers.triggerPacking ()
//      }
//    }
//  }
//
//  //····················································································································
//
//}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBObservedObject
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class EBObservedObject : EBSwiftBaseObject {

  //····················································································································

  private final var mObservers = EBWeakEventSet ()
//  private final var mMutex = DispatchSemaphore (value: 1)

  //····················································································································

  final func addEBObserver (_ inObserver : EBObserverProtocol) {
//    self.mMutex.wait ()
//    Task {
      self.mObservers.insert (inObserver)
//    }
    inObserver.observedObjectDidChange ()
//    self.mMutex.signal ()
  }

  //····················································································································

  final func removeEBObserver (_ inObserver : EBObserverProtocol) {
//    self.mMutex.wait ()
//    Task {
      self.mObservers.remove (inObserver)
//    }
//    self.mMutex.signal ()
  }

  //····················································································································

  func observedObjectDidChange () {
//    self.mMutex.wait ()
//    Task {
      for (_, entry) in self.mObservers.dictionary {
        if let observer = entry.observer {
          observer.observedObjectDidChange ()
        }else{
          self.mObservers.triggerPacking ()
        }
      }
//    }
//    self.mMutex.signal ()
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
