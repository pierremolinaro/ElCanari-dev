//
//  EBWeakReferenceArray.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 18/11/2022.
//
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Foundation

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct EBWeakReferenceArray <T : AnyObject> {

  //····················································································································

  private var mArray : [EBWeakArrayElement <T>]

  //····················································································································

  init () {
    self.mArray = [EBWeakArrayElement <T>] ()
  }

  //····················································································································

  mutating func append (_ inObject : T) {
  //--- Remove nil elements
    let array = self.mArray
    self.mArray.removeAll ()
    for entry in array {
      if entry.possibleElement != nil {
        self.mArray.append (entry)
      }
    }
  //--- Append
    self.mArray.append (EBWeakArrayElement (inObject))
  }

  //····················································································································

  var values : [T] {
    var result = [T] ()
    for weakElement in self.mArray {
      if let element = weakElement.possibleElement {
        result.append (element)
      }
    }
    return result
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

fileprivate struct EBWeakArrayElement <T : AnyObject> {

  //····················································································································

  private weak var mWeakElement : T?

  //····················································································································

  init (_ inElement : T) {
    self.mWeakElement = inElement
  }

  //····················································································································

  var possibleElement : T?  { return self.mWeakElement }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
