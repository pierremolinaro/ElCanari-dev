//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    extension NSFont : EBStoredPropertyProtocol
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension NSFont : EBStoredPropertyProtocol {

  //····················································································································

  final func ebHashValue () -> UInt32 {
    let s = self.archiveToString ()
    return s.ebHashValue ()
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    let s = self.archiveToString ()
    return s as NSString
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> Self {
    let string = object as! String
    return Self.unarchiveFromString (string: string) as! Self
  }

  //····················································································································

  func archiveToString () -> String {
    let s = "\(self.displayName!):\(self.pointSize)"
    return s
  }

  //····················································································································

  static func unarchiveFromData (data : Data) -> NSObject? {
 //   return NSKeyedUnarchiver.unarchiveObject (with: data) as? NSFont
    return try? NSKeyedUnarchiver.unarchivedObject (ofClass: NSFont.self, from: data)
  }

  //····················································································································

  static func unarchiveFromString (string : String) -> NSObject? {
    let components = string.components (separatedBy: ":")
    if components.count == 2, let fontSize = Double (components [1]) {
      let fontName = components [0]
      let fs = CGFloat (fontSize)
      if let font = NSFont (name: fontName, size: fs) {
        return font
      }else{
        return NSFont.systemFont (ofSize: fs)
      }
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (self.archiveToString ().data (using: .utf8)!)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
