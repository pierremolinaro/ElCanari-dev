//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Scalar property Int
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_Int    = EBObservableProperty <Int>
typealias EBTransientProperty_Int   = EBTransientProperty <Int>
typealias EBReadWriteProperty_Int   = EBObservableMutableProperty <Int>
typealias EBComputedProperty_Int    = EBComputedProperty <Int>
typealias EBStoredProperty_Int      = EBStoredProperty <Int>
typealias EBPreferencesProperty_Int = EBPreferenceProperty <Int>
typealias EBReadWritePropertyController_Int = EBGenericReadWritePropertyController <Int>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

/* func values_Int_are_ordered (_ inLeft : Int,
                                _ inAscending : Bool,
                                _ inRight : Int) -> Bool {
  let left  = inAscending ? inLeft  : inRight
  let right = inAscending ? inRight : inLeft
  return left < right
} */

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

/* @MainActor func compare_Int_properties (_ inLeft : EBReadOnlyProperty_Int,
                                           _ inAscending : Bool,
                                           _ inRight : EBReadOnlyProperty_Int) -> ComparisonResult {
  let left  = inAscending ? inLeft  : inRight
  let right = inAscending ? inRight : inLeft
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
} */

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

/*final class EBReadWritePropertyController_Int : EBObservablePropertyController {

  //····················································································································

  private weak var mObject : EBReadWriteProperty_Int?

  //····················································································································

  init (observedObject inObject : EBReadWriteProperty_Int, callBack inCallBack : @escaping () -> Void) {
    self.mObject = inObject
    super.init (observedObjects : [inObject], callBack : inCallBack)
  }

  //····················································································································

  func updateModel (withValue inValue : Int) {
    self.mObject?.setProp (inValue)
  }

  //····················································································································

  var value : Int? {
    if let s = self.mObject?.selection {
      switch s {
      case .empty, .multiple :
        return nil
      case .single (let v) :
        return v
      }
    }else{
      return nil
    }
  }

  //····················································································································

}*/

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
