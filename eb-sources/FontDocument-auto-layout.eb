//——————————————————————————————————————————————————————————————————————————————
//     F O N T    D O C U M E N T
//——————————————————————————————————————————————————————————————————————————————

transient property struct CharacterGerberCode ;
transient property struct CharacterSegmentList ;

//——————————————————————————————————————————————————————————————————————————————

autoLayoutDocument AutoLayoutFontDocument root FontRoot stackView mDocumentMainView {

  stackView mPageMasterView vStack { }

  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, size : .regular) {
          addPage (title: "Font", tooltip: "Characters Definition", pageView: stackView mFontPage)
          addPage (title: "Infos", tooltip: "Document Infos", pageView: stackView mInfoPage)
          $selectedPage root.selectedTab
        }
        hStack { space StaticLabel (title: "Page", bold: no, size : .small) space }
      }
      vStack {
        SignatureField (size : .regular) { $signature signature }
        StaticLabel (title: "Signature", bold: no, size : .small) { set (alignment: .center)  expandableWidth () }
      }
      vStack {
        VersionField (size : .regular) { $version version $versionShouldChange versionShouldChange }
        StaticLabel (title: "Version", bold: no, size : .small) { set (alignment: .center) expandableWidth () }
      }
      space
      vStack {
        hStack { space ImageObserverView (size : .regular) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, size : .small) { set (alignment: .center) }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom root.issues ;
  transient String statusTitle dependsFrom root.issues ;
  transient String statusMessage dependsFrom root.issues ;
  transient MetadataStatus metadataStatus dependsFrom root.issues ;

//------------------------------------------------------------------------------
//  Font Page
//------------------------------------------------------------------------------

  autolayout tableViewController #selectedCharacterController
     (allowsEmptySelection: no, allowsMultipleSelection: no) root.characters ;
  selectionController FontCharacter #characterSelection : #selectedCharacterController.selectedArray ;

  stackView mFontPageInspectorMasterView : vStack ;

  stackView mFontPage vStack set (margins: 8) {
  //--- Sample string display
    CanariSampleFontStringView { $bezierPath root.sampleStringBezierPath }
    hStack {
      vStack {
        SegmentedControlWithPages (documentView: stackView mFontPageInspectorMasterView, equalWidth: yes, size: .small)
          [outlet mFontInspectorSegmentedControl configurator fontPageSegmentedControl] {
          expandableWidth ()
          addPage (title: "", tooltip: "Selected Character Inspector", pageView: stackView mSelectedCharacterInspectorView)
          addPage (title: "", tooltip: "Sample String Inspector", pageView: stackView mSampleStringInspectorView)
          addPage (title: "", tooltip: "Issue Inspector", pageView: stackView mIssuesInspectorView)
          $selectedPage root.selectedInspector
          $segmentImage self.statusImage (segmentIndex : 2)
          $segmentTitle self.statusTitle (segmentIndex : 2)
        }
        vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (spacing: 12) {
          view mFontPageInspectorMasterView
        }
      }
      CanariFontCharacterView [outlet mFontGraphicView configurator fontGraphicView] {
        $advance #characterSelection.advance
        $characterSegmentList #characterSelection.segmentArrayForDrawing
        $transparency prefs.fontEditionTransparency
        $displayFlow prefs.showGerberDrawingFlow
        $displayDrawingIndexes prefs.showGerberDrawingIndexes
      }
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   Issues inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mIssuesInspectorView vStack {
    hStack { space Label (bold: no, size: .small) { $title self.statusMessage } space }
    CanariIssueTableView (hasHideIssueButton: no) { $issues root.issues }
  }
  
//----------------------------------------------------------------------------------------------------------------------
//   Display inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mSampleStringInspectorView vStack {
    hStack { space StaticLabel (title: "Sample String", bold: yes, size: .small) space }
    TextView { $value prefs.sampleString }
    hStack { space StaticLabel (title: "Sample String Metrics", bold: yes, size: .small) space }
    hStack {
      space
      TwoColumnsGridView {
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Size", bold: no, size: .small),
          right: DoubleField (width: 64, size: .small) { $value prefs.sampleStringSize (sendContinously: yes) }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Width", bold: no, size: .small),
          right: Label (bold: yes, size: .small) { $title root.sampleStringBezierPathWidth }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Ascenders", bold: no, size: .small),
          right: Label (bold: yes, size: .small) { $title root.sampleStringBezierPathAscent }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Descenders", bold: no, size: .small),
          right: Label (bold: yes, size: .small) { $title root.sampleStringBezierPathDescent }
        )
      }
      space
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   Selected objects inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mSelectedCharacterInspectorView vStack {
    hStack {
      StaticLabel (title: "Font Nominal Size", bold: yes, size: .small)
      IntField (width: 56, size: .small) { $value root.nominalSize (sendContinously:no) }
      space
    }
    separator
    hStack {
      StaticLabel (title: "Segment Opacity", bold: yes, size: .small)
      space
      StaticLabel (title: "(for edition)", bold: no, size: .mini)
    }
    hStack {
      DoubleSlider (width: -1, min: 0, max: 1, ticks: 11) { $value prefs.fontEditionTransparency }
      DoubleField (width: 56, size: .small) { $value prefs.fontEditionTransparency (sendContinously:no) }
    }
    separator
    hStack {
      StaticLabel (title: "Current Character", bold: yes, size: .small)
      Button (title: "Delete", size: .small) { $run deleteCurrentCharacterAction $enabled self.canDeleteCurrentCharacter }
      space
      Button (title: "New Character…", size: .small) { $run newCharacterAction }
    }
    hStack {
      CanariFontCharacterSelectButton {
        $codePoint root.currentCharacterCodePoint
        $characters root.definedCharacters
      }
      Stepper { $value root .currentCharacterCodePoint (sendContinously: yes) }
      StaticLabel (title: "Code", bold: no, size: .small)
      Label (bold: no, size: .small) { $title root.currentCharacterCodePointString }
      space
      Button (title: "New Segment", size : .small) { $run addSegmentAction }
    }
    hStack {
      StaticLabel (title: "Advancement", bold: no, size: .small)
      space
    }
    hStack {
      IntSlider (width: -1, min: 0, max: 32, ticks: 33) { $value #characterSelection.advance }
      IntField (width: 56, size: .small) { $value #characterSelection.advance (sendContinously:no) }
    }
    hStack {
      StaticLabel (title: "Warns", bold: no, size: .small)
      Checkbox (title: "No Segment", size: .small) { $value #characterSelection.mWarnsWhenNoSegment }
      space
      Checkbox (title: "Zero Advancement", size: .small) { $value #characterSelection.mWarnsWhenAdvanceIsZero }
    }
    separator
    hStack {
      StaticLabel (title: "Gerber Code", bold: yes, size: .small)
      space
      Label (bold: no, size: .small) { $title #characterSelection.gerberCodeInstructionCountMessage } 
    }
    hStack {
      Checkbox (title: "Show Gerber Flow", size: .small) { $value prefs.showGerberDrawingFlow }
      space
      Checkbox (title: "Show Indexes", size: .small) { $value prefs.showGerberDrawingIndexes }
    }
    CanariFontCharacterGerberCodeTableView (size: .small) { $characterGerberCode #characterSelection.gerberCode }
  }

  action newCharacterAction ;
  transient Bool canDeleteCurrentCharacter dependsFrom root.definedCharacters ;
  action deleteCurrentCharacterAction ;
  action addSegmentAction ;

//------------------------------------------------------------------------------
//  Infos Page
//------------------------------------------------------------------------------

  action resetVersionAndSignatureAction ;

  stackView mInfoPage vStack set (margins: 8) {
    hStack setTopAlignment () {
      StaticLabel (title: "Description", bold: no, size : .regular)
      TextView { $value root.comments }
    }
    hStack {
      space
      Button (title: "Reset Version and Signature", size : .small) { $run resetVersionAndSignatureAction }
    }
  }
  
//------------------------------------------------------------------------------

}

//——————————————————————————————————————————————————————————————————————————————
