//——————————————————————————————————————————————————————————————————————————————
//     F O N T    D O C U M E N T
//——————————————————————————————————————————————————————————————————————————————

transient property struct CharacterGerberCode ;
transient property struct CharacterSegmentList ;

//——————————————————————————————————————————————————————————————————————————————

extern outlet class NewCharacterView ;

//——————————————————————————————————————————————————————————————————————————————

extern outlet class CanariCharacterGerberCodeTableView ;
binding CanariCharacterGerberCodeTableView $characterGerberCode : transient CharacterGerberCode ;

//——————————————————————————————————————————————————————————————————————————————

extern outlet class CanariFontSampleStringView ;
binding CanariFontSampleStringView $bezierPath : transient NSBezierPath ;
binding CanariFontSampleStringView $sampleStringFontSize : transient Double ;

//——————————————————————————————————————————————————————————————————————————————

autoLayoutDocument AutoLayoutFontDocument root FontRoot stackView mDocumentMainView {

  stackView mPageMasterView vStack { }

  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, size : .regular) {
          addPage (title: "Font", tooltip: "Characters Definition", pageView: stackView mFontPage)
          addPage (title: "Infos", tooltip: "Document Infos", pageView: stackView mInfoPage)
          $selectedPage root.selectedTab
        }
        hStack { space StaticLabel (title: "Page", bold: no, size : .small) space }
      }
      vStack {
        SignatureField (size : .regular) { $signature signature }
        StaticLabel (title: "Signature", bold: no, size : .small) { set (alignment: .center)  expandableWidth () }
      }
      vStack {
        VersionField (size : .regular) { $version version $versionShouldChange versionShouldChange }
        StaticLabel (title: "Version", bold: no, size : .small) { set (alignment: .center) expandableWidth () }
      }
      space
      vStack {
        hStack { space ImageObserverView (size : .regular) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, size : .small) { set (alignment: .center) }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom root.issues ;
  transient String statusMessage dependsFrom root.issues ;
  transient MetadataStatus metadataStatus dependsFrom root.issues ;

//------------------------------------------------------------------------------
//  Font Page
//------------------------------------------------------------------------------

  autolayout tableViewController #mSelectedCharacterController
     (allowsEmptySelection:no, allowsMultipleSelection:no) root.characters ;
  selectionController FontCharacter #mCharacterSelection : #mSelectedCharacterController.selectedArray ;

  stackView mFontPage vStack set (margins: 8) {
  //--- Sample string display
    CanariSampleFontStringView { $bezierPath root.sampleStringBezierPath }
    hStack {
      StaticLabel (title: "Temp", bold: no, size : .regular)
      separator
      CanariFontCharacterView {
        $advance #mCharacterSelection.advance
        $characterSegmentList #mCharacterSelection.segmentArrayForDrawing
        $transparency prefs.fontEditionTransparency
        $displayFlow prefs.showGerberDrawingFlow
        $displayDrawingIndexes prefs.showGerberDrawingIndexes
      }
    }
  }
  
//------------------------------------------------------------------------------
//  Infos Page
//------------------------------------------------------------------------------

  action resetVersionAndSignatureAction ;

  stackView mInfoPage vStack set (margins: 8) {
    hStack setTopAlignment () {
      StaticLabel (title: "Description", bold: no, size : .regular)
      TextView { $value root.comments }
    }
    hStack {
      space
      Button (title: "Reset Version and Signature", size : .small) { $run resetVersionAndSignatureAction }
    }
  }
  
//------------------------------------------------------------------------------

//--- Toolbar
//  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.selectedTab ;
//  outlet NSView mMasterView ;
//
//  outlet CanariSignatureField mSignatureTextField $signature signature ;
//  outlet CanariVersionField mVersionField $version version $versionShouldChange versionShouldChange ;

//------------ Page Font
//  outlet CanariViewWithKeyView mFontPageView ;
//
//  outlet CanariSegmentedControl mInspectorSegmentedControl $selectedPage root.selectedInspector ;
//  outlet NSView mMasterFontPageView ;
//  outlet CanariViewWithKeyView mSelectedCharacterInspectorView ;
//  outlet CanariViewWithKeyView mCharacterIssuesInspectorView ;
//
//  tableViewController #mSelectedCharacterController {allowsEmptySelection:no, allowsMultipleSelection:no} root.characters ;
//  selectionController FontCharacter #mCharacterSelection : #mSelectedCharacterController.selectedArray ;

//--- Advancement
//  outlet EBIntField advancementTextField $value #mCharacterSelection.advance (sendContinously:yes, autoFormatter:yes) ;
//  outlet EBSlider advancementSlider $intValue #mCharacterSelection.advance (sendContinously:yes) ;

//--- Transparency
//  outlet EBDoubleField transparencyTextField $value prefs.fontEditionTransparency (sendContinously:no, autoFormatter:no) ;
//  outlet EBSlider transparencySlider $doubleValue prefs.fontEditionTransparency (sendContinously:yes) ;

//--- Warning checkboxes
//  outlet EBSwitch mWarnsWhenNoSegmentCheckbox $value #mCharacterSelection.mWarnsWhenNoSegment ;
//  outlet EBSwitch mWarnsWhenAdvanceIsZeroCheckbox $value #mCharacterSelection.mWarnsWhenAdvanceIsZero ;

//--- Font
//  outlet EBButton mAddCharacterButton $run addCharacterAction ;
//  action addCharacterAction ;
//
//  outlet EBIntField mFontNominalSizeTextField $value root.nominalSize (sendContinously:no, autoFormatter:no) ;

//--- Current Character
//  outlet FontCharacterSelectButton mFontCharacterSelectButton
//    $codePoint root.currentCharacterCodePoint
//    $characters root.definedCharacters
//  ;
//
//  outlet EBTextObserverField mCurrentCharacterTextField $valueObserver root.currentCharacterCodePointString ;
//
//  outlet EBStepper currentCharacterStepper
//    $value root .currentCharacterCodePoint (sendContinously:yes)
//  ;
//
//  transient Bool canDeleteCurrentCharacter dependsFrom root.definedCharacters ;
//
//  outlet EBButton mDeleteCurrentCharacterButton
//    $run deleteCurrentCharacterAction
//    $enabled self.canDeleteCurrentCharacter
//  ;
//  action deleteCurrentCharacterAction ;
//
//  outlet EBButton mAddSegmentButton $run addSegmentAction ;
//  action addSegmentAction ;

//--- Gerber Code inspector
//  outlet CanariViewWithKeyView mSampleStringInspectorView ;
//  outlet EBSwitch mShowGerberDrawingFlowCheckbox $value prefs.showGerberDrawingFlow ;
//
//  outlet EBSwitch mShowGerberDrawingIndexesCheckbox $value prefs.showGerberDrawingIndexes ;
//
//  outlet EBTextObserverField gerberCodeInstructionCountMessageTextField
//    $valueObserver #mCharacterSelection.gerberCodeInstructionCountMessage
//  ;
//  outlet CanariCharacterGerberCodeTableView mGerberCodeTableView $characterGerberCode #mCharacterSelection.gerberCode ;

//--- Sample String
//  outlet EBTextField mSampleStringField $value prefs.sampleString (sendContinously:yes);


//--- Sample String Display
//  outlet EBDoubleField mSampleStringSizeField $value prefs.sampleStringSize (sendContinously:no, autoFormatter:no);
//  outlet EBTextObserverField mSampleStringWidthTextField $valueObserver root.sampleStringBezierPathWidth ;
//  outlet EBTextObserverField mSampleStringAscentTextField $valueObserver root.sampleStringBezierPathAscent;
//  outlet EBTextObserverField mSampleStringDescentTextField $valueObserver root.sampleStringBezierPathDescent ;

//--- View
//  outlet CanariCharacterView currentCharacterView
//    $advance #mCharacterSelection.advance
//    $characterSegmentList #mCharacterSelection.segmentArrayForDrawing
//    $transparency prefs.fontEditionTransparency
//    $displayFlow prefs.showGerberDrawingFlow
//    $displayDrawingIndexes prefs.showGerberDrawingIndexes
//  ;

//--- Issues
//  transient Bool noIssue dependsFrom root.issues ;
//  outlet IssueTableView mIssueTableView $issues root.issues $hidden self.noIssue ;
//
//  outlet EBImageObserverView mStatusImageViewInToolbar $image self.mStatusImage $tooltip self.mStatusMessage ;
//  outlet EBTextObserverField mIssueTextField $valueObserver self.mStatusMessage ;

}

//——————————————————————————————————————————————————————————————————————————————
