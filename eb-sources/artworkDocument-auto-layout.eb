//------------------------------------------------------------------------------
//     A R T W O R K    D O C U M E N T
//------------------------------------------------------------------------------

autoLayoutDocument AutoLayoutArtworkDocument root ArtworkRoot stackView \DocumentMainView {

//------------------------------------------------------------------------------
//   MAIN VIEW
//------------------------------------------------------------------------------

  transient NSImage segmentedControlDataIssueImage dependsFrom
    root.fileGenerationParameterArray.all.fileExtension,
    root.fileGenerationParameterArray.all.name,
    root.hasDataWarning,
    root.emptyDrillFileExtension
  ;

  stackView \PageMasterView vStack { }
 
  stackView \DocumentMainView vStack set (spacing: .zero) {
    newView pageMasterView = \PageMasterView ()
    newView descriptionPage = \DescriptionPage ()
    newView minimaPage = \MinimaPage ()
    newView dataPage = \DataPage ()
    hStack set (margins: .regular) {
      vStack set (spacing: .zero) {
        SegmentedControlWithPages (documentView: view pageMasterView, equalWidth: no, size : .regular) {
          addPage (title: "Description", tooltip: "Artwork Description", pageView: view descriptionPage)
          addPage (title: "Minima", tooltip: "Minima Editor", pageView: view minimaPage)
          addPage (title: "Data", tooltip: "Data Editor", pageView: view dataPage)
          $selectedPage root.selectedTab
          $segmentImage self.segmentedControlDataIssueImage (segmentIndex : 2)
        }
        gutter
        StaticLabel (title: "Page", bold: no, size : .regular, alignment: .center)
      }
      vStack set (spacing: .zero) {
        SignatureField (size : .regular) { $signature signature }
        gutter
        StaticLabel (title: "Signature", bold: no, size : .regular, alignment: .center)
      }
      vStack set (spacing: .zero) {
        VersionField (size : .regular) { $version version $versionShouldChange versionShouldChange }
        gutter
        StaticLabel (title: "Version", bold: no, size : .regular, alignment: .center)
      }
      space
      vStack set (spacing: .zero) $hidden prefs.fileSystemLibraryIsOk {
        Button (title: "Show Consistency Window", size: .regular)  { 
          $run prefs.showLibraryConsistencyLogWindowAction
          $image prefs.fileSystemLibraryStatusImage
        }
        gutter
        StaticLabel (title: "File System Library requires attention", bold: no, size : .regular, alignment: .center)
      }
      space
      vStack set (spacing: .zero) {
        StatusBadgeView () {
          $tooltip self.statusMessage
          $errorCount self.statusErrorCount
          $warningCount self.statusWarningCount
        }
        gutter
        StaticLabel (title: "Status", bold: no, size : .regular, alignment: .center)
      }
    }
    separator
    view pageMasterView
  }

  transient Int statusWarningCount dependsFrom
    root.fileGenerationParameterArray.all.fileExtension,
    root.fileGenerationParameterArray.all.name,
    root.fileGenerationParameterArray.all.hasNoData,
    root.emptyDrillFileExtension,
    self.documentFileName
  ;

  transient Int statusErrorCount dependsFrom
    root.fileGenerationParameterArray.all.fileExtension,
    root.fileGenerationParameterArray.all.name,
    root.fileGenerationParameterArray.all.hasNoData,
    root.emptyDrillFileExtension,
    self.documentFileName
  ;

  transient String statusMessage dependsFrom
    root.fileGenerationParameterArray.all.fileExtension,
    root.fileGenerationParameterArray.all.name,
    root.fileGenerationParameterArray.all.hasNoData,
    root.emptyDrillFileExtension,
    self.documentFileName
  ;

//------------------------------------------------------------------------------
//  Description Page
//------------------------------------------------------------------------------

  action resetVersionAndSignatureAction ;

  stackView \DescriptionPage vStack set (margins: .regular) {
    TextField (minWidth: 56, size : .regular) { expandableWidth () set (alignment: .left) $value root.title (sendContinously: yes) }
    hStack {
      space
      StaticLabel (title: "Layout", bold: no, size : .regular, alignment: .center)
      EnumPopUpButton (titles : enum LayerConfiguration.popupTitles, size: .regular) { $selectedIndex root.layerConfiguration }
      space
    }
    TextView { $value root.comments }
    hStack {
      space
      Button (title: "Reset Version and Signature", size : .small) { $run resetVersionAndSignatureAction }
    }
  }

//------------------------------------------------------------------------------
//  Minima Page
//------------------------------------------------------------------------------

  stackView \MinimaPage vStack set (margins: .regular) {
    space
    hStack {
      space
      vStack {
        space
        StaticLabel (title: "PP: Pad to Pad Distance", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "TP: Track to Pad Distance", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "TT: Track to Track Distance", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "TW: Track Width", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "PHD: Production Hole Diameter (tool size)", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "OAR: Outer Annular Ring", bold: no, size : .small, alignment: .center)
        StaticLabel (title: "OAR is equal to (pad diameter - PHD) / 2", bold: no, size : .small, alignment: .center)
        space
      }
      space
      StaticImageView (name: "artwork")
      space
    }
    space
    hStack {
      space
      vStack set (leftMargin: .large) set (rightMargin: .large) set (topMargin: .regular) {
        hStack {
          StaticLabel (title: "Minimum Value for PP, TP, TT and TW", bold: no, size : .regular, alignment: .center)
          gutter
          CanariDimensionAndPopUp(size : .small) { $dimensionAndUnit root.minPPTPTTTW, root.minPPTPTTTWdisplayUnit }
        }
        hStack {
          StaticLabel (title: "Minimum Value for PHD", bold: no, size : .regular, alignment: .center)
          gutter
          CanariDimensionAndPopUp(size : .small) {
            $dimensionAndUnit root.minValueForPHDinEBUnit, root.minValueForPHDdisplayUnit
          }
        }
        hStack {
          StaticLabel (title: "Minimum Value for OAR", bold: no, size : .regular, alignment: .center)
          gutter
          CanariDimensionAndPopUp(size : .small) {
            $dimensionAndUnit root.minValueForOARinEBUnit, root.minValueForOARdisplayUnit
          }
        }
        hStack {
          StaticLabel (title: "Minimum Value for Board Limit Width", bold: no, size : .regular, alignment: .center)
          gutter
          CanariDimensionAndPopUp(size : .small) {
            $dimensionAndUnit root.minValueForBoardLimitWidth, root.minValueForBoardLimitWidthDisplayUnit
          }
        }
      }
      space
    }
    space
  }

//------------------------------------------------------------------------------
//  Data Page
//------------------------------------------------------------------------------

  transient NSImage emptyDrillFileExtensionImage dependsFrom root.emptyDrillFileExtension ;

  tableViewController #mDataController (allowsEmptySelection:no, allowsMultipleSelection:no) root.fileGenerationParameterArray {
    editableColumn name (title: "Name", minWidth: 60, maxWidth: 200, headerAlignment: .left, contentAlignment: .left) sortkey name
    column parameterStatusImage (title: "", minWidth: 30, maxWidth: 30, headerAlignment: .center, contentAlignment: .center)
  }


  selectionController ArtworkFileGenerationParameters #mDataSelection : #mDataController.selectedArray ;

  stackView \DataPage vStack set (spacing: .zero) {
    hStack set (margins: .regular) {
      StaticLabel (title: "Drill File Extension", bold: no, size : .small, alignment: .center)
      TextField (minWidth: 112, size : .small) { $value root.drillDataFileExtension (sendContinously: yes) }
      ImageObserverView (size: .small) { $image self.emptyDrillFileExtensionImage }
      space
    }
    separator
    hStack set (leftMargin: .regular) set (rightMargin: .regular) {
      vStack set (topMargin: .regular) {
        Label (bold: yes, size : .small) { $title self.generatedFileCountString }
        TableView (size : .small, addControlButtons: yes) { $tableValue #mDataController }
        space
      }
      separator
      vStack set (topMargin: .regular) {
        hStack {
          hStack {
            StaticLabel (title: "File Extension", bold: yes, size : .small, alignment: .center)
            TextField (minWidth: 56, size : .small) { $value #mDataSelection.fileExtension (sendContinously: yes) }
          }
          ImageObserverView (size: .small) { $image #mDataSelection.emptyFileExtensionImage }
         space
         StaticLabel (title: "Empty Data File", bold: yes, size : .small, alignment: .center) { setOrangeTextColor () $hidden !#mDataSelection.hasNoData}
       }
        space
        StaticLabel (title: "Front Side Elements", bold: yes, size : .small, alignment: .left)
        hStack {
          vStack set (leftMargin: .large) {
            hStack {
              Checkbox (title: "Front Side Images", size : .small) {
                $value #mDataSelection.drawImagesTopSide
              }
              gutter
              Checkbox (title: "Front Side QRCodes", size : .small) {
                $value #mDataSelection.drawQRCodesTopSide
              }
            }
            hStack {
              Checkbox (title: "Legend Front Side Texts", size : .small) {
                $value #mDataSelection.drawTextsLegendTopSide
              }
              gutter
              Checkbox (title: "Layout Front Side Texts", size : .small) {
                $value #mDataSelection.drawTextsLayoutTopSide
              }
            }
            hStack {
              Checkbox (title: "Front Side Tracks", size : .small) { $value #mDataSelection.drawTracksTopSide }
              gutter
              Checkbox (title: "Front Side Pads", size : .small) { $value #mDataSelection.drawPadsTopSide }
            }
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Front Side Component Names", size : .small) {
            $value #mDataSelection.drawComponentNamesTopSide
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Front Side Component Values", size : .small) {
            $value #mDataSelection.drawComponentValuesTopSide
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Front Side Package Legends", size : .small) {
            $value #mDataSelection.drawPackageLegendTopSide
          }
          space
        }
        StaticLabel (title: "Inner Elements", bold: yes, size : .small, alignment: .left)
        hStack {
          vStack set (leftMargin: .large) {
            hStack $hidden !root.hasInnerElements {
              Checkbox (title: "Traversing Pads", size : .small) {
                $value #mDataSelection.drawTraversingPads
              }
              gutter
              space
            }
            hStack $hidden root.hasInnerElements {
              Checkbox (title: "Traversing Pads", size : .small) {
                $enabled root.hasInnerElements  
              }
              gutter
              space
            }
            hStack $hidden !root.hasInnerElements {
              Checkbox (title: "Inner 1 Layer Tracks", size : .small) {
                $value #mDataSelection.drawTracksInner1Layer
              }
              gutter
              Checkbox (title: "Inner 2 Layer Tracks", size : .small) {
                $value #mDataSelection.drawTracksInner2Layer
              }
            }
            hStack $hidden root.hasInnerElements {
              Checkbox (title: "Inner 1 Layer Tracks", size : .small) {
                $enabled root.hasInnerElements
              }
              gutter
              Checkbox (title: "Inner 2 Layer Tracks", size : .small) {
                $enabled root.hasInnerElements
              }
            }
            hStack $hidden !root.hasSixLayers {
              Checkbox (title: "Inner 3 Layer Tracks", size : .small) {
                $value #mDataSelection.drawTracksInner3Layer
              }
              gutter
              Checkbox (title: "Inner 4 Layer Tracks", size : .small) {
                $value #mDataSelection.drawTracksInner4Layer
              }
            }
            hStack $hidden root.hasSixLayers {
              Checkbox (title: "Inner 3 Layer Tracks", size : .small) {
                $enabled root.hasSixLayers
              }
              gutter
              Checkbox (title: "Inner 4 Layer Tracks", size : .small) {
                $enabled root.hasSixLayers
              }
            }
          }
          space
        }
        StaticLabel (title: "Back Side Elements", bold: yes, size : .small, alignment: .left)
        hStack {
          vStack set (leftMargin: .large) {
            hStack {
              Checkbox (title: "Back Side Images", size : .small) {
                $value #mDataSelection.drawImagesBottomSide
              }
              gutter
              Checkbox (title: "Back Side QRCodes", size : .small) {
                $value #mDataSelection.drawQRCodesBottomSide
              }
            }
            hStack {
              Checkbox (title: "Legend Back Side Texts", size : .small) {
                $value #mDataSelection.drawTextsLegendBottomSide
              }
              gutter
              Checkbox (title: "Layout Back Side Texts", size : .small) {
                $value #mDataSelection.drawTextsLayoutBottomSide
              }
            }
            hStack {
              Checkbox (title: "Back Side Tracks", size : .small) { $value #mDataSelection.drawTracksBottomSide }
              gutter
              Checkbox (title: "Back Side Pads", size : .small) { $value #mDataSelection.drawPadsBottomSide }
            }
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Back Side Component Names", size : .small) {
            $value #mDataSelection.drawComponentNamesBottomSide
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Back Side Component Values", size : .small) {
            $value #mDataSelection.drawComponentValuesBottomSide
          }
          space
        }
        hStack set (leftMargin: .large) {
          Checkbox (title: "Back Side Package Legends", size : .small) {
            $value #mDataSelection.drawPackageLegendBottomSide
          }
          space
        }
        StaticLabel (title: "Other Elements", bold: yes, size : .small, alignment: .left)
        hStack set (leftMargin: .large) {
          Checkbox (title: "Vias", size : .small) { $value #mDataSelection.drawVias }
          space
          Checkbox (title: "Internal Board Limits", size : .small) { $value #mDataSelection.drawInternalBoardLimits }
          space
          Checkbox (title: "Board Limits", size : .small) { $value #mDataSelection.drawBoardLimits }
        }
        StaticLabel (title: "Option", bold: yes, size : .small, alignment: .left)
        hStack set (leftMargin: .large) {
          Checkbox (title: "Horizontal Mirror", size : .small) {
            $value #mDataSelection.horizontalMirror
          }
          space
        }
        space
      }
    }
  }

  transient String generatedFileCountString dependsFrom #mDataController.sortedArray.count ;

}

//------------------------------------------------------------------------------
//     A R T W O R K    R O O T
//------------------------------------------------------------------------------

handlingOpposite entity ArtworkRoot {
  toMany @generateDirectRead @signature ArtworkFileGenerationParameters fileGenerationParameterArray inverse toOne mArtwork ;

  property @generateDirectRead @signature LayerConfiguration layerConfiguration default twoLayers ;

  property Int selectedTab default 0 ;
  property @generateDirectRead @signature String comments default "" ;

  property Int minPPTPTTTWdisplayUnit default 90 ; // 1µm
  property @generateDirectRead @signature Int minPPTPTTTW default 18_000 ; // 200µm

  property Int minValueForOARdisplayUnit default 90 ; // 1µm
  property @generateDirectRead @signature Int minValueForOARinEBUnit default 18_000 ; // 200µm

  property Int minValueForPHDdisplayUnit default 90 ; // 1µm
  property @generateDirectRead @signature Int minValueForPHDinEBUnit default 18_000 ; // 200µm

  property @generateDirectRead Int minValueForBoardLimitWidthDisplayUnit default 90_000 ; // 1mm
  property @generateDirectRead @signature Int minValueForBoardLimitWidth default 90_000 ; // 1mm

  property @generateDirectRead @signature String title default "" ;

//--- Excellon drill data
  property @generateDirectRead @signature String drillDataFileExtension default "DRF" ;

//--- For artwork embedded in document
  transient UInt32 signatureForERCChecking dependsFrom
     self.minPPTPTTTW, self.minValueForOARinEBUnit, self.minValueForBoardLimitWidth, self.minValueForPHDinEBUnit ;
     
  transient Bool hasInnerElements dependsFrom self.layerConfiguration ;
  transient Bool hasSixLayers dependsFrom self.layerConfiguration ;
  transient Bool hasDataWarning dependsFrom self.fileGenerationParameterArray.all.hasNoData ;
  transient Bool emptyDrillFileExtension dependsFrom self.drillDataFileExtension ;
}

//------------------------------------------------------------------------------

handlingOpposite entity ArtworkFileGenerationParameters {
  toOne @weak ArtworkRoot mArtwork inverse toMany fileGenerationParameterArray ;
  
  property @signature Bool drawBoardLimits default no ;
  property @signature Bool drawInternalBoardLimits default no ;
  property @signature Bool drawComponentNamesTopSide default no ;
  property @signature Bool drawComponentNamesBottomSide default no ;
  property @signature Bool drawComponentValuesTopSide default no ;
  property @signature Bool drawComponentValuesBottomSide default no ;
  property @signature Bool drawPackageLegendTopSide default no ;
  property @signature Bool drawPackageLegendBottomSide default no ;
  property @signature Bool drawPadsTopSide default no ;
  property @signature Bool drawPadsBottomSide default no ;
  property @signature Bool drawTextsLayoutTopSide default no ;
  property @signature Bool drawTextsLayoutBottomSide default no ;
  property @signature Bool drawTextsLegendTopSide default no ;
  property @signature Bool drawTextsLegendBottomSide default no ;
  property @signature Bool drawTracksTopSide default no ;
  property @signature Bool drawTracksInner1Layer default no ;
  property @signature Bool drawTracksInner2Layer default no ;
  property @signature Bool drawTracksInner3Layer default no ;
  property @signature Bool drawTracksInner4Layer default no ;
  property @signature Bool drawTracksBottomSide default no ;
  property @signature Bool drawTraversingPads default no ;
  property @signature Bool drawImagesTopSide default no ;
  property @signature Bool drawImagesBottomSide default no ;
  property @signature Bool drawQRCodesTopSide default no ;
  property @signature Bool drawQRCodesBottomSide default no ;
  property @signature Bool drawVias default no ;
  property @signature String fileExtension default "" ;
  property @signature Bool horizontalMirror default no ;
  property @signature @generateDirectAccess String name default "Unnamed" ;
//  property @signature Bool drawPadHolesInPDF default no ;
//  property @signature Int measurementUnitForPadHoleInPDF default 90_000 ; // mm
//  property @signature Int padHoleDiameterInPDF default 90_000 ; // 1 mm
  
  transient Bool hasNoData dependsFrom
    self.mArtwork.one.layerConfiguration,
    self.drawBoardLimits,
    self.drawInternalBoardLimits,
    self.drawComponentNamesTopSide,
    self.drawComponentNamesBottomSide,
    self.drawComponentValuesTopSide,
    self.drawComponentValuesBottomSide,
    self.drawPackageLegendTopSide,
    self.drawPackageLegendBottomSide,
    self.drawPadsTopSide,
    self.drawPadsBottomSide,
    self.drawTextsLayoutTopSide,
    self.drawTextsLayoutBottomSide,
    self.drawTextsLegendTopSide,
    self.drawTextsLegendBottomSide,
    self.drawTracksTopSide,
    self.drawTracksInner1Layer,
    self.drawTracksInner2Layer,
    self.drawTracksInner3Layer,
    self.drawTracksInner4Layer,
    self.drawTracksBottomSide,
    self.drawTraversingPads,
    self.drawVias,
    self.drawImagesTopSide,
    self.drawImagesBottomSide,
    self.drawQRCodesTopSide,
    self.drawQRCodesBottomSide
  ;
  
  transient NSImage parameterStatusImage dependsFrom self.name, self.fileExtension, self.hasNoData ;
  
  transient NSImage emptyFileExtensionImage dependsFrom self.fileExtension ;
}

//------------------------------------------------------------------------------
