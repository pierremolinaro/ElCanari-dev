//------------------------------------------------------------------------------
//     A R T W O R K    D O C U M E N T
//------------------------------------------------------------------------------

autoLayoutDocument AutoLayoutArtworkDocument root ArtworkRoot stackView mDocumentMainView {

//------------------------------------------------------------------------------
//   MAIN VIEW
//------------------------------------------------------------------------------

  stackView mPageMasterView vStack { }
 
  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, size : .regular) {
          addPage (title: "Description", tooltip: "Artwork Description", pageView: stackView mDescriptionPage)
          addPage (title: "Minima", tooltip: "Minima Editor", pageView: stackView mMinimaPage)
          addPage (title: "Data", tooltip: "DataEditor", pageView: stackView mDataPage)
          $selectedPage root.selectedTab
        }
        hStack { space StaticLabel (title: "Page", bold: no, size : .small) space }
      }
      vStack {
        SignatureField (size : .regular) { $signature signature }
        StaticLabel (title: "Signature", bold: no, size : .small) { set (alignment: .center)  expandableWidth () }
      }
      vStack {
        VersionField (size : .regular) { $version version $versionShouldChange versionShouldChange }
        StaticLabel (title: "Version", bold: no, size : .small) { set (alignment: .center) expandableWidth () }
      }
      space
      vStack {
        hStack { space ImageObserverView (size : .regular) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, size : .small) { set (alignment: .center) }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom
      root.fileGenerationParameterArray.all.fileExtension,
      root.fileGenerationParameterArray.all.name,
      self.documentFileName
  ;

  transient String statusMessage dependsFrom
    root.fileGenerationParameterArray.all.fileExtension,
    root.fileGenerationParameterArray.all.name,
    self.documentFileName
  ;

//------------------------------------------------------------------------------
//  Description Page
//------------------------------------------------------------------------------

  action resetVersionAndSignatureAction ;

  stackView mDescriptionPage vStack set (margins: 8) {
    TextField (width: 56, size : .regular) { expandableWidth () set (alignment: .left) $value root.title (sendContinously: yes) }
    hStack {
      space
      TwoColumnsGridView {
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Layout", bold: no, size : .regular),
          right: EnumPopUpButton (titles : enum LayerConfiguration.popupTitles, size: .regular) { $selectedIndex root.layerConfiguration }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Drill File Extension", bold: no, size : .regular),
          right: TextField (width: 56, size : .regular) { $value root.drillDataFileExtension (sendContinously: no) }
        )
      }
      space
    }
    TextView { $value root.comments }
    hStack {
      space
      Button (title: "Reset Version and Signature", size : .small) { $run resetVersionAndSignatureAction }
    }
  }

//------------------------------------------------------------------------------
//  Minima Page
//------------------------------------------------------------------------------

  stackView mMinimaPage vStack set (margins: 8) {
    space
    hStack {
      space
      vStack {
        space
        StaticLabel (title: "PP: Pad to Pad Distance", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "TP: Track to Pad Distance", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "TT: Track to Track Distance", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "TW: Track Width", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "PHD: Production Hole Diameter (tool size)", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "OAR: Outer Annular Ring", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        StaticLabel (title: "OAR is equal to (pad diameter - PHD) / 2", bold: no, size : .small) { set (alignment: .left) expandableWidth () }
        space
      }
      space
      StaticImageView (name: "artwork")
      space
    }
    space
    hStack {
      space
      TwoColumnsGridView {
        set (leftMargin: 20) set (rightMargin: 20) set (topMargin: 8)
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Minimum Value for PP, TP, TT and TW", bold: no, size : .regular),
          right: CanariDimensionAndPopUp(size : .small) { $dimensionAndUnit root.minPPTPTTTW, root.minPPTPTTTWdisplayUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Minimum Value for PHD", bold: no, size : .regular),
          right: CanariDimensionAndPopUp(size : .small) { $dimensionAndUnit root.minValueForPHDinEBUnit, root.minValueForPHDdisplayUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Minimum Value for OAR", bold: no, size : .regular),
          right: CanariDimensionAndPopUp(size : .small) { $dimensionAndUnit root.minValueForOARinEBUnit, root.minValueForOARdisplayUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Minimum Value for Board Limit Width", bold: no, size : .regular),
          right: CanariDimensionAndPopUp(size : .small) { $dimensionAndUnit root.minValueForBoardLimitWidth, root.minValueForBoardLimitWidthDisplayUnit }
        )
      }
      space
    }
    space
  }

//------------------------------------------------------------------------------
//  Data Page
//------------------------------------------------------------------------------

  autolayout tableViewController #mDataController (allowsEmptySelection:no, allowsMultipleSelection:no) root.fileGenerationParameterArray {
     editableColumn name (title: "Name", minWidth: 60, maxWidth: 200, headerAlignment: .left, contentAlignment: .left) sortkey name
  }

  selectionController ArtworkFileGenerationParameters #mDataSelection : #mDataController.selectedArray ;

  stackView mDataPage hStack set (leftMargin: 8) set (rightMargin: 8) {
    vStack set (topMargin: 8) {
      Label (bold: yes, size : .small) { $title self.generatedFileCountString }
      TableView (size : .small, addControlButtons: yes) { $tableValue #mDataController }
      space
    }
    separator
    vStack set (topMargin: 8) {
      hStack setFirstBaselineAlignment () {
        StaticLabel (title: "File Extension", bold: yes, size : .small)
        TextField (width: 150, size : .small) { $value #mDataSelection.fileExtension (sendContinously: no) }
        space
      }
      space
      hStack { StaticLabel (title: "Front Side Elements", bold: yes, size : .small) space }
      hStack {
        TwoColumnsGridView {
          set (leftMargin: 20)
          addFirstBaseLineAligned (
            left: Switch (title: "Legend Front Side Texts", size : .small) { $value #mDataSelection.drawTextsLegendTopSide },
            right: Switch (title: "Layout Front Side Texts", size : .small) { $value #mDataSelection.drawTextsLayoutTopSide }
          )
          addFirstBaseLineAligned (
            left: Switch (title: "Front Side Tracks", size : .small) { $value #mDataSelection.drawTracksTopSide },
            right: Switch (title: "Front Side Pads", size : .small) { $value #mDataSelection.drawPadsTopSide }
          )
        }
        space
      }
      hStack set (leftMargin: 20) { Switch (title: "Front Side Component Names", size : .small) { $value #mDataSelection.drawComponentNamesTopSide } space }
      hStack set (leftMargin: 20) { Switch (title: "Front Side Component Values", size : .small) { $value #mDataSelection.drawComponentValuesTopSide } space }
      hStack set (leftMargin: 20) { Switch (title: "Front Side Package Legends", size : .small) { $value #mDataSelection.drawPackageLegendTopSide } space }
      hStack { StaticLabel (title: "Inner Elements", bold: yes, size : .small) space }
      hStack {
        TwoColumnsGridView {
          set (leftMargin: 20)
          addFirstBaseLineAligned (
            left: Switch (title: "Inner 1 Layer Tracks", size : .small) { $value #mDataSelection.drawTracksInner1Layer $enabled root.hasInnerElements },
            right: Switch (title: "Inner 2 Layer Tracks", size : .small) { $value #mDataSelection.drawTracksInner2Layer $enabled root.hasInnerElements }
          )
          addFirstBaseLineAligned (
            left: Switch (title: "Inner 3 Layer Tracks", size : .small) { $value #mDataSelection.drawTracksInner3Layer $enabled root.hasInnerElements },
            right: Switch (title: "Inner 4 Layer Tracks", size : .small) { $value #mDataSelection.drawTracksInner4Layer $enabled root.hasSixLayers }
          )
        }
        space
      }
      hStack { StaticLabel (title: "Back Side Elements", bold: yes, size : .small) space }
      hStack {
        TwoColumnsGridView {
          set (leftMargin: 20)
          addFirstBaseLineAligned (
            left: Switch (title: "Legend Back Side Texts", size : .small) { $value #mDataSelection.drawTextsLegendBottomSide },
            right: Switch (title: "Layout Back Side Texts", size : .small) { $value #mDataSelection.drawTextsLayoutBottomSide }
          )
          addFirstBaseLineAligned (
            left: Switch (title: "Back Side Tracks", size : .small) { $value #mDataSelection.drawTracksBottomSide },
            right: Switch (title: "Back Side Pads", size : .small) { $value #mDataSelection.drawPadsBottomSide }
          )
        }
        space
      }
      hStack set (leftMargin: 20) { Switch (title: "Back Side Component Names", size : .small) { $value #mDataSelection.drawComponentNamesBottomSide } space }
      hStack set (leftMargin: 20) { Switch (title: "Back Side Component Values", size : .small) { $value #mDataSelection.drawComponentValuesBottomSide } space }
      hStack set (leftMargin: 20) { Switch (title: "Back Side Package Legends", size : .small) { $value #mDataSelection.drawPackageLegendBottomSide } space }
      hStack { StaticLabel (title: "Other Elements", bold: yes, size : .small) space }
      hStack set (leftMargin: 20) {
        Switch (title: "Vias", size : .small) { $value #mDataSelection.drawVias }
        space
        Switch (title: "Internal Board Limits", size : .small) { $value #mDataSelection.drawInternalBoardLimits }
        space
        Switch (title: "Board Limits", size : .small) { $value #mDataSelection.drawBoardLimits }
      }
      hStack set (leftMargin: 20) setFirstBaselineAlignment () {
        Switch (title: "Pad Holes in PDF file, with diameter", size : .small) { $value #mDataSelection.drawPadHolesInPDF }
        space
        CanariDimensionAndPopUp (size : .small) { $dimensionAndUnit #mDataSelection.padHoleDiameterInPDF, #mDataSelection.measurementUnitForPadHoleInPDF $enabled #mDataSelection.drawPadHolesInPDF }
      }
      hStack { StaticLabel (title: "Option", bold: yes, size : .small) space }
      hStack set (leftMargin: 20) { Switch (title: "Horizontal Mirror", size : .small) { $value #mDataSelection.horizontalMirror } space }
      space
    }
  }

  transient String generatedFileCountString dependsFrom #mDataController.sortedArray.count ;

}

//------------------------------------------------------------------------------
//     A R T W O R K    R O O T
//------------------------------------------------------------------------------

entity ArtworkRoot {
  toMany @signature ArtworkFileGenerationParameters fileGenerationParameterArray ;

  property @signature LayerConfiguration layerConfiguration default twoLayers ;

  property Int selectedTab default 0 ;
  property @signature String comments default "" ;

  property Int minPPTPTTTWdisplayUnit default 90 ; // 1µm
  property @signature Int minPPTPTTTW default 18_000 ; // 200µm

  property Int minValueForOARdisplayUnit default 90 ; // 1µm
  property @signature Int minValueForOARinEBUnit default 18_000 ; // 200µm

  property Int minValueForPHDdisplayUnit default 90 ; // 1µm
  property @signature Int minValueForPHDinEBUnit default 18_000 ; // 200µm

  property Int minValueForBoardLimitWidthDisplayUnit default 90_000 ; // 1mm
  property @signature Int minValueForBoardLimitWidth default 90_000 ; // 1mm

  property @signature String title default "" ;

//--- Excellon drill data
  property @signature String drillDataFileExtension default "drf" ;

//--- For artwork embedded in document
  transient UInt32 signatureForERCChecking dependsFrom
     self.minPPTPTTTW, self.minValueForOARinEBUnit, self.minValueForBoardLimitWidth, self.minValueForPHDinEBUnit ;
     
  transient Bool hasInnerElements dependsFrom self.layerConfiguration ;
  transient Bool hasSixLayers dependsFrom self.layerConfiguration ;
}

//------------------------------------------------------------------------------

entity ArtworkFileGenerationParameters {
  property @signature Bool drawBoardLimits default no ;
  property @signature Bool drawInternalBoardLimits default no ;
  property @signature Bool drawComponentNamesTopSide default no ;
  property @signature Bool drawComponentNamesBottomSide default no ;
  property @signature Bool drawComponentValuesTopSide default no ;
  property @signature Bool drawComponentValuesBottomSide default no ;
  property @signature Bool drawPackageLegendTopSide default no ;
  property @signature Bool drawPackageLegendBottomSide default no ;
  property @signature Bool drawPadHolesInPDF default no ;
  property @signature Bool drawPadsTopSide default no ;
  property @signature Bool drawPadsBottomSide default no ;
  property @signature Bool drawTextsLayoutTopSide default no ;
  property @signature Bool drawTextsLayoutBottomSide default no ;
  property @signature Bool drawTextsLegendTopSide default no ;
  property @signature Bool drawTextsLegendBottomSide default no ;
  property @signature Bool drawTracksTopSide default no ;
  property @signature Bool drawTracksInner1Layer default no ;
  property @signature Bool drawTracksInner2Layer default no ;
  property @signature Bool drawTracksInner3Layer default no ;
  property @signature Bool drawTracksInner4Layer default no ;
  property @signature Bool drawTracksBottomSide default no ;
  property @signature Bool drawVias default no ;
  property @signature String fileExtension default "?" ;
  property @signature Bool horizontalMirror default no ;
  property @signature String name default "Unnamed" ;
  property @signature Int measurementUnitForPadHoleInPDF default 90_000 ; // mm
  property @signature Int padHoleDiameterInPDF default 90_000 ; // 1 mm
}

//------------------------------------------------------------------------------
