//——————————————————————————————————————————————————————————————————————————————

enum AutoLayoutUserInterfaceStyle {
  roundedBezel, roundRect, texturedRounded, texturedSquare, shadowlessSquare
}

func enum AutoLayoutUserInterfaceStyle.popupTitles {
  roundedBezel : "Rounded Bezel" ;
  roundRect : "Round Rect" ;
  texturedRounded : "Textured Rounded" ;
  texturedSquare : "Textured Square" ;
  shadowlessSquare : "Shadowless Square" ;
}

enum TextAlignment {
  left, right, center
}


enum EBControlSize {
  mini, small, regular
}


enum LayerConfiguration {
  twoLayers, fourLayers, sixLayers
}

func enum LayerConfiguration.popupTitles {
  twoLayers : "2 Layers" ;
  fourLayers : "4 Layers" ;
  sixLayers : "6 Layers" ;
}

enum TrackCreationDirection {
  anyAngle, octolinear, rectilinear
}

//——————————————————————————————————————————————————————————————————————————————

enum MetadataStatus {
  unknown, ok, warning, error
}

//——————————————————————————————————————————————————————————————————————————————

enum PadSide {
  traversing, front, back
}

//——————————————————————————————————————————————————————————————————————————————

enum PadStyle {
  traversing, surface
}

func enum PadStyle.popupTitles {
  traversing : "Traversing" ;
  surface : "Surface" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum SlavePadStyle {
  traversing, componentSide, oppositeSide
}

func enum SlavePadStyle.popupTitles {
  traversing : "Traversing" ;
  componentSide : "Component Side" ;
  oppositeSide : "Opposite Side" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum PadShape {
  rect, round, octo
}

func enum PadShape.popupTitles {
  rect : "Rectangular" ;
  round : "Round" ;
  octo : "Octogonal" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum HorizontalAlignment {
  onTheRight, center, onTheLeft
}

//——————————————————————————————————————————————————————————————————————————————

enum VerticalAlignment {
  above, base, center, below
}

//——————————————————————————————————————————————————————————————————————————————

enum QuadrantRotation {
  rotation0, rotation90, rotation180, rotation270
}

func enum QuadrantRotation.popupTitles {
  rotation0 : "0" ;
  rotation90 : "90" ;
  rotation180 : "180" ;
  rotation270 : "270" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum SchematicSheetOrientation { a4Vertical, a4Horizontal, custom }

//——————————————————————————————————————————————————————————————————————————————

enum AutorouterPreferredDirections {
  vFrontHback, hFrontVback
}

//——————————————————————————————————————————————————————————————————————————————

enum AutorouterSnapAngle {
  rectilinear, octolinear, anyAngle
}

//——————————————————————————————————————————————————————————————————————————————

enum RastnetDisplay {
  hidden, allNets, oneNet, componentNets, selectedComponents
}

func enum RastnetDisplay.popupTitles {
  hidden : "No" ;
  allNets : "All Nets" ;
  oneNet : "This Net" ;
  componentNets : "Nets of Component" ;
  selectedComponents : "Selected Components Nets" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum BoardTextLayer {
  legendFront, layoutFront, layoutBack, legendBack
}

//——————————————————————————————————————————————————————————————————————————————

enum BoardTextVerticalAlignment {
  above, base, center, below
}

//——————————————————————————————————————————————————————————————————————————————

enum BoardShape {
  rectangular, bezierPathes
}

//——————————————————————————————————————————————————————————————————————————————

enum RestrictRectangleLayer {
  frontSide, backSide, bothSides
}

//——————————————————————————————————————————————————————————————————————————————

enum RouteDirection {
  from, to
}

//——————————————————————————————————————————————————————————————————————————————

enum RouteOrigin {
  center,
  bottomLeft,
  middleBottom,
  bottomRight,
  middleRight,
  topRight,
  middleTop,
  topLeft,
  middleLeft
}

//——————————————————————————————————————————————————————————————————————————————
