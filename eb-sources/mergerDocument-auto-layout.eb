//------------------------------------------------------------------------------
//     M E R G E R    D O C U M E N T
//------------------------------------------------------------------------------

autoLayoutDocument AutoLayoutMergerDocument root MergerRoot stackView mDocumentMainView {

  stackView mPageMasterView vStack { }

  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, size : .regular) {
          addPage (title: "Model", tooltip: "Model Description", pageView: stackView mModelPage)
          addPage (title: "Board", tooltip: "Board Description", pageView: stackView mBoardPage)
          addPage (title: "Product", tooltip: "Product Description", pageView: stackView mProductPage)
          $selectedPage root.selectedPageIndex
        }
        hStack { space StaticLabel (title: "Page", bold: no, size : .small) space }
      }
      vStack setCenterAlignment () {
        Button (title: "Display Settings", size : .regular) {
          $enabled root.selectedPageIndex <= 1
          $run showPrefsForSettingMergerDisplayAction
        }
        StaticLabel (title: "for Model and Board Views", bold: no, size : .small) {
          set (alignment: .center) expandableWidth ()
        }
      }
      space
      vStack {
        hStack { space ImageObserverView (size : .regular) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, size : .small) { set (alignment: .center) }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom self.issues ;
  transient String statusMessage dependsFrom self.issues ;
  transient CanariIssueArray issues dependsFrom
    root.overlapingArrangment, root.boardRect, root.boardDisplayRect,
    root.boardInstances.all.instanceRect, root.boardInstances.all.boardLimitWidth
  ;
  action showPrefsForSettingMergerDisplayAction ;
  autolayout tableViewController #mBoardModelController (allowsEmptySelection:no, allowsMultipleSelection:no) root.boardModels {
    column name (title: "", minWidth: 100, maxWidth: 300, headerAlignment: .center, contentAlignment: .right)
  }

  action dismissDisplaySettingView ;

  //············································································
  //     Model Page
  //············································································

  stackView mModelPage hStack {
    vStack set (bottomMargin: 8) set (width: 250) $hidden !root.showDisplaySettingView {
      VerticalScrollView (content: 
        TwoColumnsGridView {
          set (margins: 8)
          addCenterYAligned (
            left: space,
            right: hStack {
              StaticLabel (title: "Model", bold: yes, size: .small)
              space
              StaticLabel (title: "Board", bold: yes, size: .small)
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Horizontal Flip", bold: no, size: .small),
            right: hStack {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewHorizontalFlip }
              space
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewHorizontalFlip }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Vertical Flip", bold: no, size: .small),
            right: hStack {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewVerticalFlip }
              space
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewVerticalFlip }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Holes", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayHoles }
              ColorWell { $color prefs.mergerColorHoles (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayHoles }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Vias", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayVias }
              ColorWell { $color prefs.mergerColorVias (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayVias }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Board Limits", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBoardLimits }
              ColorWell { $color prefs.mergerColorBoardLimits (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBoardLimits }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Internal Board Limits", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayInternalBoardsLimits }
              ColorWell { $color prefs.mergerColorInternalBoardsLimits (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayInternalBoardsLimits }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Background", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              space
              ColorWell { $color prefs.mergerColorBackground (sendContinously: no) }
              space
            }
          )
          addCenterYAligned (
            left: hStack { StaticLabel (title: "Front", bold: yes, size: .small) space },
            right: space
          )
          addCenterYAligned (
            left: StaticLabel (title: "Pads", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontPads }
              ColorWell { $color prefs.mergerColorFrontPads (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontPads }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Component Names", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontComponentNames }
              ColorWell { $color prefs.mergerColorFrontComponentNames (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontComponentNames }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Component Values", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontComponentValues }
              ColorWell { $color prefs.mergerColorFrontComponentValues (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontComponentValues }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Packages", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontPackages }
              ColorWell { $color prefs.mergerColorFrontPackages (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontPackages }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Legend Texts", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontLegendTexts }
              ColorWell { $color prefs.mergerColorFrontLegendTexts (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontLegendTexts }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Legend Lines", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontLegendLines }
              ColorWell { $color prefs.mergerColorFrontLegendLines (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontLegendLines }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Layout Texts", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontLayoutTexts }
              ColorWell { $color prefs.mergerColorFrontLayoutTexts (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontLayoutTexts }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayFrontTracks }
              ColorWell { $color prefs.mergerColorFrontTracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayFrontTracks }
            }
          )
          addCenterYAligned (
            left: hStack { StaticLabel (title: "Inner", bold: yes, size: .small) space },
            right: space
          )
          addCenterYAligned (
            left: StaticLabel (title: "Traversing Pads", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayTraversingPads }
              ColorWell { $color prefs.mergerColorTraversingPads (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayTraversingPads }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Inner 1 Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayInner1Tracks }
              ColorWell { $color prefs.mergerColorInner1Tracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayInner1Tracks }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Inner 2 Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayInner2Tracks }
              ColorWell { $color prefs.mergerColorInner2Tracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayInner2Tracks }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Inner 3 Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayInner3Tracks }
              ColorWell { $color prefs.mergerColorInner3Tracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayInner3Tracks }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Inner 4 Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayInner4Tracks }
              ColorWell { $color prefs.mergerColorInner4Tracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayInner4Tracks }
            }
          )
          addCenterYAligned (
            left: hStack { StaticLabel (title: "Back", bold: yes, size: .small) space },
            right: space
          )
          addCenterYAligned (
            left: StaticLabel (title: "Pads", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackPads }
              ColorWell { $color prefs.mergerColorBackPads (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackPads }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Component Names", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackComponentNames }
              ColorWell { $color prefs.mergerColorBackComponentNames (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackComponentNames }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Component Values", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackComponentValues }
              ColorWell { $color prefs.mergerColorBackComponentValues (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackComponentValues }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Packages", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackPackages }
              ColorWell { $color prefs.mergerColorBackPackages (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackPackages }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Legend Texts", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackLegendTexts }
              ColorWell { $color prefs.mergerColorBackLegendTexts (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackLegendTexts }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Legend Lines", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackLegendLines }
              ColorWell { $color prefs.mergerColorBackLegendLines (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackLegendLines }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Layout Texts", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackLayoutTexts }
              ColorWell { $color prefs.mergerColorBackLayoutTexts (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackLayoutTexts }
            }
          )
          addCenterYAligned (
            left: StaticLabel (title: "Tracks", bold: no, size: .small),
            right: hStack setCenterYAlignment () {
              Checkbox (title: "", size: .small) { $value prefs.mergerModelViewDisplayBackTracks }
              ColorWell { $color prefs.mergerColorBackTracks (sendContinously: no) }
              Checkbox (title: "", size: .small) { $value prefs.mergerBoardViewDisplayBackTracks }
            }
          )
        }
      )
      space
      hStack { space Button (title: "Done", size : .regular) { $run dismissDisplaySettingView } }
    }
    vStack set (margins: 8) set (width: 250) $hidden root.showDisplaySettingView {
      hStack {
        Button (title: "+", size : .small) {
          set (width: 40)
          $run addBoardModelAction
        }
        Button (title: "Update…", size : .small) {
          expandableWidth ()
          $run updateBoardModelAction
          $enabled #mBoardModelController.selectedArray.count > 0
        }
        Button (title: "-", size : .small) {
          set (width: 40)
          $run #mBoardModelController.remove
          $enabled (#mBoardModelController.selectedArray.count > 0) & (#mBoardModelSelection.instanceCount == 0)
        }
      }
      TableView (size : .regular, addControlButtons: no) {
        noHeaderView ()
        $tableValue #mBoardModelController
      }
      TwoColumnsGridView {
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Artwork Name", bold: no, size : .small),
          right: Label (bold: yes, size: .small) { $title #mBoardModelSelection.artworkName  }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Layout", bold: no, size : .small),
          right: Label (bold: yes, size: .small) { $title #mBoardModelSelection.layerConfigurationString }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Model Width", bold: no, size : .small),
          right: CanariDimensionAndPopUp (size: .small) {
            $dimensionAndUnit #mBoardModelSelection.modelWidth, #mBoardModelSelection.modelWidthUnit
          }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Model Height", bold: no, size : .small),
          right: CanariDimensionAndPopUp (size: .small) {
            $dimensionAndUnit #mBoardModelSelection.modelHeight, #mBoardModelSelection.modelHeightUnit
          }
        )        
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Limit Width", bold: no, size : .small),
          right: CanariDimensionAndPopUp (size: .small) {
            $dimensionAndUnit #mBoardModelSelection.modelLimitWidth, #mBoardModelSelection.modelLimitWidthUnit
          }
        )        
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Board Count", bold: no, size : .small),
          right: IntObserverField (bold: yes, size: .small) {
            set (alignment: .left)
            $observedValue #mBoardModelSelection.instanceCount
          }
        )
      }
    }
    separator
    GraphicView (minZoom: 10, maxZoom: 4000) {
      $hidden root.boardModels.count == 0
      $zoom #mBoardModelSelection.zoom
      $horizontalFlip prefs.mergerModelViewHorizontalFlip
      $verticalFlip prefs.mergerModelViewVerticalFlip
      $overObjectsDisplay #mBoardModelSelection.imageForModel
    }
    vStack {
      space
      hStack {
        space
        StaticLabel (title: "No Model", bold: yes, size: .regular) { $hidden root.boardModels.count > 0 }
        space
      }
      space
    }
  }

  action addBoardModelAction ;
  action updateBoardModelAction ;
  selectionController BoardModel #mBoardModelSelection : #mBoardModelController.selectedArray ;

  //············································································
  //     Board Page
  //············································································

  stackView mBoardPage vStack {
  }

  //············································································
  //     Product Page
  //············································································

  stackView mProductPage vStack {
  }

  //············································································

//--- Selected Page

//--- Show Preferences for setting display
//  outlet EBButton dismissPrefsForSettingMergerDisplayButton
//    $run showPrefsForSettingMergerDisplayAction ;

//--- Issues
//  outlet EBTextObserverField mIssueTextField $valueObserver self.mStatusMessage ;
//
//  outlet EBButton mDeselectIssueButton ;
//  outlet IssueTableView mIssueTableView $issues self.issues ;

//------------------------------------- Board Page
//  outlet CanariViewWithKeyView mBoardPageView ;
//
//  outlet NSPopUpButton mInsertedInstanceDefaultOrientation ;

//--- Board model name
//  outlet EBTextObserverField mInstanceModelNameTextField $valueObserver #mBoardInstanceSelection.modelName ;

//--- Automatic Board size
//  outlet EBSwitch mAutomaticBoardSizeSwitch $value root.automaticBoardSize ;
//  outlet NSView mAutomaticBoardSizeView $hidden !root.automaticBoardSize ;
//  outlet NSView mManualBoardSizeView $hidden root.automaticBoardSize ;


//--- Arrow Magnitude
//  outlet EBPopUpButton mArrowMagnitudeUnitPopUp $selectedTag root.arrowMagnitudeUnit ;
//  outlet CanariDimensionTextField mArrowMagnitudeTextField
//     $dimensionAndUnit root.arrowMagnitude, root.arrowMagnitudeUnit
//  ;


//--- Shift Arrow Magnitude
//  outlet EBPopUpButton mShiftArrowMagnitudeUnitPopUp $selectedTag root.shiftArrowMagnitudeUnit ;
//  outlet CanariDimensionTextField mShiftArrowMagnitudeTextField
//     $dimensionAndUnit root.shiftArrowMagnitude, root.shiftArrowMagnitudeUnit
//  ;


//--- Manual Board width display
//  outlet EBPopUpButton mManualBoardWidthUnitPopUp $selectedTag root.boardWidthUnit ;
//  outlet CanariDimensionTextField mManualBoardWidthTextField
//     $dimensionAndUnit root.boardManualWidth, root.boardWidthUnit
//  ;

//--- Manual Board Height display
//  outlet EBPopUpButton mManualBoardHeightUnitPopUp $selectedTag root.boardHeightUnit ;
//  outlet CanariDimensionTextField mManualBoardHeightTextField
//     $dimensionAndUnit root.boardManualHeight, root.boardHeightUnit
//  ;

//--- Automatic Board width display
//  outlet EBPopUpButton mBoardWidthUnitPopUp $selectedTag root.boardWidthUnit ;
//  outlet CanariDimensionObserverTextField mBoardWidthTextField
//     $dimensionAndUnit root.boardWidth, root.boardWidthUnit
//  ;

//--- Automatic Board Height display
//  outlet EBPopUpButton mBoardHeightUnitPopUp $selectedTag root.boardHeightUnit ;
//  outlet CanariDimensionObserverTextField mBoardHeightTextField
//     $dimensionAndUnit root.boardHeight, root.boardHeightUnit
//  ;

//--- Help
//  action showBoardHelpAction ;
//  outlet EBButton showBoardHelpButton $run showBoardHelpAction ;

//--- Table view, source of model drag
//  outlet CanariDragSourceTableView mModelDragSourceTableView $models root.modelNames ;

//--- Board Limit Width display
//  outlet EBPopUpButton mBoardLimitWidthUnitPopUp $selectedTag root.boardLimitWidthUnit ;
//  outlet CanariDimensionTextField mBoardBoardLimitTextField
//     $dimensionAndUnit root.boardLimitWidth, root.boardLimitWidthUnit
//  ;

//--- "Empty Board" message
// outlet EBTextField mEmptyBoardMessage $hidden root.boardInstances.count > 0 ;

//--- Composed Board View
//  arrayController #mBoardInstanceController : root.boardInstances ;
//  selectionController MergerBoardInstance #mBoardInstanceSelection : #mBoardInstanceController.selectedArray ;
//  outlet EBEnclosingGraphicView mComposedBoardView
//    $zoom root.zoom
//    $horizontalFlip prefs.mergerBoardViewHorizontalFlip
//    $verticalFlip prefs.mergerBoardViewVerticalFlip
//    $overObjectsDisplay root.boardOutlineRectDisplay
//    $graphicController #mBoardInstanceController
//    $arrowKeyMagnitude root.arrowMagnitude
//    $shiftArrowKeyMagnitude root.shiftArrowMagnitude
//  ;
//
//  outlet CanariSegmentedControl mBoardInspectorSegmentedControl ;
//  outlet NSView mBoardInspectorMasterView ;
//
//  outlet CanariViewWithKeyView mBoardOperationInspectorView ;
//  outlet CanariViewWithKeyView mBoardIssueInspectorView ;
//
//  outlet EBPopUpButton mSelectedBoardXUnitPopUp $selectedTag root.selectedBoardXUnit ;
//  outlet CanariDimensionTextField mSelectedBoardXTextField
//     $dimensionAndUnit #mBoardInstanceSelection.x, root.selectedBoardXUnit
//  ;
//
//  outlet EBPopUpButton mSelectedBoardYUnitPopUp $selectedTag root.selectedBoardYUnit ;
//  outlet CanariDimensionTextField mSelectedBoardYTextField
//     $dimensionAndUnit #mBoardInstanceSelection.y, root.selectedBoardYUnit
//  ;


//--- Instance rotation
//  outlet CanariQuadrantSegmentedControl mInstanceRotation $quadrant #mBoardInstanceSelection.instanceRotation ;

//--- Arrange & move selection
//  outlet EBSwitch mOverlapSwitch $enabled root.boardInstances.count > 0 $value root.overlapingArrangment ;
//
//  action moveRightAction ;
//  outlet EBButton mMoveRightButton $enabled #mBoardInstanceController.selectedArray.count > 0 $run moveRightAction ;
//  action moveLeftAction ;
//  outlet EBButton mMoveLeftButton $enabled #mBoardInstanceController.selectedArray.count > 0 $run moveLeftAction ;
//  action moveUpAction ;
//  outlet EBButton mMoveUpButton $enabled #mBoardInstanceController.selectedArray.count > 0 $run moveUpAction ;
//  action moveDownAction ;
//  outlet EBButton mMoveDownButton $enabled #mBoardInstanceController.selectedArray.count > 0 $run moveDownAction ;

//------------------------------------- Product Page
//  outlet CanariViewWithKeyView mProductPageView ;
//
//  outlet EBTextField mNoArtworkMessage $hidden !root.mArtwork.none ;
//  outlet EBTextObserverField mLayoutLayerWarningMessageTextField $valueObserver root.layoutLayerWarningMessage ;
//
//  transient String incorrectDocumentFileErrorMessage dependsFrom self.documentFileName ;
//  outlet EBTextObserverField mIncorrectDocumentNameTextField $valueObserver self.incorrectDocumentFileErrorMessage ;
//
//  outlet EBTextObserverField mArtwortNameTextField $valueObserver root.mArtworkName ;
//
//  transient Bool documentFileNameOk dependsFrom self.documentFileName ;
//  transient Bool documentIsUnnamed dependsFrom self.documentFileName ;
//  outlet NSView mDangerView $hidden self.documentFileNameOk ;
//
//  action generateProductFilesAction ;
//  outlet EBButton mGenerateProductFilesActionButton
//    $enabled !root.mArtwork.none & (root.boardInstances.count > 0) & !self.documentIsUnnamed
//    $run generateProductFilesAction
//  ;
//
//  action importArtworkAction ;
//  transient String importArtworkButtonTitle dependsFrom root.mArtworkName ;
//  outlet EBButton mImportArtworkButton $run importArtworkAction $title self.importArtworkButtonTitle ;
//
//  outlet NSTabView mProductGenerationTabView ;
//  outlet NSTabView mArtworkSettingsTabView $hidden root.mArtwork.none ;
//  outlet NSTextView mLogTextView ;
//  outlet EBColorWell mPDFBoardBackgroundColorWell $color root.mPDFBoardBackgroundColor (sendContinously : no);

//---------------- Minima Page
//  outlet EBPopUpButton mMinPPTPTTTWinEBUnitPopUp $selectedTag root.minPPTPTTTWdisplayUnit ;
//  outlet CanariDimensionObserverTextField mMinPPTPTTTWdisplayUnitTextField
//     $dimensionAndUnit root.minPPTPTTTW, root.minPPTPTTTWdisplayUnit
//  ;
//
//  outlet EBPopUpButton mOARUnitPopUp $selectedTag root.minValueForOARdisplayUnit ;
//  outlet CanariDimensionObserverTextField mOARValueTextField
//     $dimensionAndUnit root.minValueForOARinEBUnit, root.minValueForOARdisplayUnit
//  ;
//
//  outlet EBPopUpButton mPHDUnitPopUp $selectedTag root.minValueForPHDdisplayUnit ;
//  outlet CanariDimensionObserverTextField mPHDValueTextField
//     $dimensionAndUnit root.minValueForPHDinEBUnit, root.minValueForPHDdisplayUnit
//  ;
//
//  outlet EBPopUpButton minValueForBoardLimitUnitPopUp $selectedTag root.minValueForBoardLimitWidthDisplayUnit ;
//  outlet CanariDimensionObserverTextField minValueForBoardLimitTextField
//     $dimensionAndUnit root.minValueForBoardLimitWidth, root.minValueForBoardLimitWidthDisplayUnit
//  ;


//--- Drill Page
//  outlet EBTextObserverField mDrillDataFileExtensionTextField $valueObserver root.drillDataFileExtension ;

//--- Data Tab
//  outlet EBTableView mDataTableView $tableValue #mDataController ;
//  selectionController ArtworkFileGenerationParameters #mDataSelection : #mDataController.selectedArray ;
//  tableViewController #mDataController {allowsEmptySelection:no, allowsMultipleSelection:no} root.fileGenerationParameterArray {
//     column "name" sortkey name EBTextObserverField $valueObserver self.name
//  }
//
//  outlet EBTextObserverField mExtensionTextField $valueObserver #mDataSelection.fileExtension ;
////  outlet CanariObserverSwitch mDrawBoardInternalLimitsSwitch $valueObserver #mDataSelection.drawInternalBoardLimits ;
//  outlet CanariObserverSwitch mDrawBoardLimitsSwitch $valueObserver #mDataSelection.drawBoardLimits ;
//  outlet CanariObserverSwitch mDrawComponentValuesTopSideSwitch $valueObserver #mDataSelection.drawComponentValuesTopSide ;
//  outlet CanariObserverSwitch mDrawComponentValuesBottomSideSwitch $valueObserver #mDataSelection.drawComponentValuesBottomSide ;
//  outlet CanariObserverSwitch mDrawComponentNamesTopSideSwitch $valueObserver #mDataSelection.drawComponentNamesTopSide ;
//  outlet CanariObserverSwitch mDrawComponentNamesBottomSideSwitch $valueObserver #mDataSelection.drawComponentNamesBottomSide ;
//  outlet CanariObserverSwitch mDrawPackageLegendTopSideSwitch $valueObserver #mDataSelection.drawPackageLegendTopSide ;
//  outlet CanariObserverSwitch mDrawPackageLegendBottomSideSwitch $valueObserver #mDataSelection.drawPackageLegendBottomSide ;
////  outlet CanariObserverSwitch mDrawPadHolesInPDFSwitch $valueObserver #mDataSelection.drawPadHolesInPDF ;
//  outlet CanariObserverSwitch mDrawPadsTopSideSwitch $valueObserver #mDataSelection.drawPadsTopSide ;
//  outlet CanariObserverSwitch mDrawPadsBottomSideSwitch $valueObserver #mDataSelection.drawPadsBottomSide ;
//  outlet CanariObserverSwitch mDrawTextsLayoutTopSideSwitch $valueObserver #mDataSelection.drawTextsLayoutTopSide ;
//  outlet CanariObserverSwitch mDrawTextsLayoutBottomSideSwitch $valueObserver #mDataSelection.drawTextsLayoutBottomSide ;
//  outlet CanariObserverSwitch mDrawTextsLegendTopSideSwitch $valueObserver #mDataSelection.drawTextsLegendTopSide ;
//  outlet CanariObserverSwitch mDrawTextsLegendBottomSideSwitch $valueObserver #mDataSelection.drawTextsLegendBottomSide ;
//  outlet CanariObserverSwitch mDrawTracksTopSideSwitch $valueObserver #mDataSelection.drawTracksTopSide ;
//  outlet CanariObserverSwitch mDrawTracksBottomSideSwitch $valueObserver #mDataSelection.drawTracksBottomSide ;
//  outlet CanariObserverSwitch mDrawViasSwitch $valueObserver #mDataSelection.drawVias ;
//  outlet CanariObserverSwitch mHorizontalMirrorSwitch $valueObserver #mDataSelection.horizontalMirror ;
//--- Artwork info tab
//  outlet EBTextObserverView mCommentTextView $valueObserver root.comments ;
//  outlet EBIntObserverField mArtworkVersionTextField $valueObserver root.mArtworkVersion (autoFormatter: no) ;


}

//——————————————————————————————————————————————————————————————————————————————
