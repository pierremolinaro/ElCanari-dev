//——————————————————————————————————————————————————————————————————————————————
//   BoardTrack
//——————————————————————————————————————————————————————————————————————————————

enum TrackSide {
  front, back, inner1, inner2, inner3, inner4
}

func enum TrackSide.popupTitles {
  front  : "Front" ;
  back   : "Back" ;
  inner1 : "Inner 1" ;
  inner2 : "Inner 2" ;
  inner3 : "Inner 3" ;
  inner4 : "Inner 4" ;
}

//——————————————————————————————————————————————————————————————————————————————

enum TrackLockDirection {
  unlocked, locked, octolinear, rectilinear
}

func enum TrackLockDirection.popupTitles {
  unlocked : "Free Angle" ;
  locked : "Locked Angle" ;
  octolinear : "Octolinear" ;
  rectilinear : "Rectilinear" ;
}

//——————————————————————————————————————————————————————————————————————————————

graphic handlingOpposite entity BoardTrack : BoardObject {
  toOne @weak BoardConnector mConnectorP1 inverse toMany mTracksP1 ;
  toOne @weak BoardConnector mConnectorP2 inverse toMany mTracksP2 ;
  toOne @weak NetInProject mNet inverse toMany mTracks ;

  property @generateDirectAccess TrackSide mSide default front ;

  property Int mDefaultTrackWidthUnit default 2_286 ; // mil
  property @generateDirectAccess Int mCustomTrackWidth default 45_720 ; // 20 mil
  property Int mCustomTrackWidthUnit default 2_286 ; // mil
  property @generateDirectAccess Bool mUsesCustomTrackWidth default no ;
  property @generateDirectAccess Bool mIsPreservedByAutoRouter default no ;

  property @generateDirectAccess Int mP1XUnit default 2_286 ; // mil
  property @generateDirectAccess Int mP1YUnit default 2_286 ; // mil
  property @generateDirectAccess Int mP2XUnit default 2_286 ; // mil
  property @generateDirectAccess Int mP2YUnit default 2_286 ; // mil
  property Bool mManualLockP1 default no ;
  property Bool mManualLockP2 default no ;
  
  property TrackLockDirection mDirectionLockOnKnobDragging default unlocked ;

  override transient EBShape objectDisplay dependsFrom
    self.mConnectorP1.one.location,
    self.mConnectorP2.one.location,
    super.BoardObject.displayFrontLayoutForBoard default yes,
    prefs.frontSideLayoutColorForBoard,
    super.BoardObject.displayBackLayoutForBoard default yes,
    prefs.backSideLayoutColorForBoard,
    super.BoardObject.displayInner1LayoutForBoard default yes,
    prefs.inner1LayoutColorForBoard,
    super.BoardObject.displayInner2LayoutForBoard default yes,
    prefs.inner2LayoutColorForBoard,
    super.BoardObject.displayInner3LayoutForBoard default yes,
    prefs.inner3LayoutColorForBoard,
    super.BoardObject.displayInner4LayoutForBoard default yes,
    prefs.inner4LayoutColorForBoard,
    self.actualTrackWidth, self.mSide
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mConnectorP1.one.location, self.p1CanMove,
    self.mConnectorP2.one.location, self.p2CanMove,
    prefs.frontSideLayoutColorForBoard,
    prefs.inner1LayoutColorForBoard,
    prefs.inner2LayoutColorForBoard,
    prefs.inner3LayoutColorForBoard,
    prefs.inner4LayoutColorForBoard,
    prefs.backSideLayoutColorForBoard,
    self.mSide,
    self.actualTrackWidth
  ;
  
  transient Int actualTrackWidth dependsFrom
    self.mNet.one.netClassTrackWidth,
    self.mUsesCustomTrackWidth, self.mCustomTrackWidth
  ;

  transient String netName dependsFrom self.mNet.one.mNetName ;
  transient String netClassName dependsFrom self.mNet.one.netClassName ;
  transient Int netClassTrackWidth dependsFrom self.mNet.one.netClassTrackWidth ;
  transient Int netClassViaHoleDiameter dependsFrom self.mNet.one.netClassViaHoleDiameter ;
  transient Int netClassViaPadDiameter dependsFrom self.mNet.one.netClassViaPadDiameter ;
  
  override transient Double trackLengthInCanariUnit
    dependsFrom self.mConnectorP1.one.location, self.mConnectorP2.one.location ;

  override transient TrackSide trackSide dependsFrom self.mSide ;

  override transient UInt32 signatureForERCChecking dependsFrom self.mSide, self.actualTrackWidth ;

  transient Bool p1ConnectedToSomePad dependsFrom self.mConnectorP1.one.isConnectedToSomePad ;

  transient Bool p2ConnectedToSomePad dependsFrom self.mConnectorP2.one.isConnectedToSomePad ;

  transient Bool p1CanMove dependsFrom
    self.mManualLockP1, self.p1ConnectedToSomePad
  ;

  transient Bool p2CanMove dependsFrom
    self.mManualLockP2, self.p2ConnectedToSomePad
  ;

  transient Bool trackCanRotate dependsFrom
    self.p1CanMove, self.p2CanMove
  ;

  computed Int trackDirectionInDegrees dependsFrom
    self.mConnectorP1.one.location,
    self.mConnectorP2.one.location
  ;
  
  computed Int computedP1X dependsFrom self.mConnectorP1.one.location ;
 
  computed Int computedP1Y dependsFrom self.mConnectorP1.one.location ;
  
  computed Int computedP2X dependsFrom self.mConnectorP2.one.location ;
  
  computed Int computedP2Y dependsFrom self.mConnectorP2.one.location ; 
}

//——————————————————————————————————————————————————————————————————————————————
