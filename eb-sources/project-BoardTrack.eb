//——————————————————————————————————————————————————————————————————————————————
//   BoardTrack
//——————————————————————————————————————————————————————————————————————————————

enum TrackSide {
  front, back, inner1, inner2, inner3, inner4
}

//——————————————————————————————————————————————————————————————————————————————

enum TrackLockDirection {
  unlocked, locked, octolinear, rectilinear
}

//——————————————————————————————————————————————————————————————————————————————

graphic entity BoardTrack : BoardObject {
  toOne BoardConnector mConnectorP1 inverse toMany mTracksP1 ;
  toOne BoardConnector mConnectorP2 inverse toMany mTracksP2 ;
  toOne NetInProject mNet inverse toMany mTracks ;

  property TrackSide mSide default front ;

  property Int mDefaultTrackWidthUnit default 2_286 ; // mil
  property Int mCustomTrackWidth default 45_720 ; // 20 mil
  property Int mCustomTrackWidthUnit default 2_286 ; // mil
  property Bool mUsesCustomTrackWidth default no ;
  property Bool mIsPreservedByAutoRouter default no ;

  property Int mP1XUnit default 2_286 ; // mil
  property Int mP1YUnit default 2_286 ; // mil
  property Int mP2XUnit default 2_286 ; // mil
  property Int mP2YUnit default 2_286 ; // mil
  property Bool mManualLockP1 default no ;
  property Bool mManualLockP2 default no ;
  
  property TrackLockDirection mDirectionLockOnKnobDragging default unlocked ;

  override transient EBShape objectDisplay dependsFrom
    self.mConnectorP1.one.location,
    self.mConnectorP2.one.location,
    prefs.displayFrontLayoutForBoard,
    prefs.frontSideLayoutColorForBoard,
    prefs.displayBackLayoutForBoard,
    prefs.backSideLayoutColorForBoard,
    prefs.displayInner1LayoutForBoard,
    prefs.inner1LayoutColorForBoard,
    prefs.displayInner2LayoutForBoard,
    prefs.inner2LayoutColorForBoard,
    prefs.displayInner3LayoutForBoard,
    prefs.inner3LayoutColorForBoard,
    prefs.displayInner4LayoutForBoard,
    prefs.inner4LayoutColorForBoard,
    self.actualTrackWidth, self.mSide
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mConnectorP1.one.location, self.p1CanMove,
    self.mConnectorP2.one.location, self.p2CanMove,
    prefs.frontSideLayoutColorForBoard,
    prefs.inner1LayoutColorForBoard,
    prefs.inner2LayoutColorForBoard,
    prefs.inner3LayoutColorForBoard,
    prefs.inner4LayoutColorForBoard,
    prefs.backSideLayoutColorForBoard,
    self.mSide,
    self.actualTrackWidth
  ;
  
  transient Int actualTrackWidth dependsFrom
    self.mNet.one.netClassTrackWidth,
    self.mUsesCustomTrackWidth, self.mCustomTrackWidth
  ;

  transient String netName dependsFrom self.mNet.one.mNetName ;
  transient String netClassName dependsFrom self.mNet.one.netClassName ;
  transient Int netClassTrackWidth dependsFrom self.mNet.one.netClassTrackWidth ;
  transient Int netClassViaHoleDiameter dependsFrom self.mNet.one.netClassViaHoleDiameter ;
  transient Int netClassViaPadDiameter dependsFrom self.mNet.one.netClassViaPadDiameter ;
  
  override transient Double trackLengthInCanariUnit
    dependsFrom self.mConnectorP1.one.location, self.mConnectorP2.one.location ;

  override transient TrackSide trackSide dependsFrom self.mSide ;

  override transient UInt32 signatureForERCChecking dependsFrom self.mSide, self.actualTrackWidth ;

  computed Int trackDirectionInDegrees
    dependsFrom self.mConnectorP1.one.location, self.mConnectorP2.one.location ;

  transient Bool p1ConnectedToSomePad dependsFrom self.mConnectorP1.one.isConnectedToSomePad ;

  transient Bool p2ConnectedToSomePad dependsFrom self.mConnectorP2.one.isConnectedToSomePad ;

  transient Bool p1CanMove dependsFrom
    self.mManualLockP1, self.p1ConnectedToSomePad
  ;

  transient Bool p2CanMove dependsFrom
    self.mManualLockP2, self.p2ConnectedToSomePad
  ;

  transient Bool trackCanRotate dependsFrom
    self.p1CanMove, self.p2CanMove
  ;
  
  computed Int computedP1X dependsFrom self.mConnectorP1.one.location ;
 
  computed Int computedP1Y dependsFrom self.mConnectorP1.one.location ;
  
  computed Int computedP2X dependsFrom self.mConnectorP2.one.location ;
  
  computed Int computedP2Y dependsFrom self.mConnectorP2.one.location ; 
}

//——————————————————————————————————————————————————————————————————————————————
