//——————————————————————————————————————————————————————————————————————————————

enum ComponentSide {
  front, back
}

func enum ComponentSide.popupTitles {
  front : "Front Side" ;
  back : "Back Side" ;
}

//——————————————————————————————————————————————————————————————————————————————

graphic handlingOpposite entity ComponentInProject : BoardObject {
//--- Device
  toOne @weak DeviceInProject mDevice inverse toMany mComponents ;

  transient String deviceName dependsFrom self.mDevice.one.mDeviceName ;

//--- Package
  property @generateDirectAccess Bool mSlavePadsShouldBeRouted default yes ;
 
  override transient UInt32 signatureForERCChecking dependsFrom
    self.mSlavePadsShouldBeRouted ;

  toOne DevicePackageInProject mSelectedPackage ;
  
  arrayController #componentAvailablePackagesController : self.mPackages ;
  
  toMany proxy DevicePackageInProject mPackages : mDevice.mPackages ;

  transient ComponentPadDescriptorDictionary componentPadDictionary dependsFrom 
    self.mX, self.mY, self.mRotation, self.mSide,
    self.packagePadDictionary
  ;

  transient PackageMasterPadDictionary packagePadDictionary dependsFrom
     self.mSelectedPackage.one.packagePadDictionary
   ;

  transient String selectedPackageName dependsFrom self.mSelectedPackage.one.mPackageName ;

  transient StringArray availablePackages dependsFrom self.mDevice.one.packageNames ;

//--- Display in board
  property @generateDirectAccess Bool mDisplayLegend default yes ;

  toMany @generateDirectAccess BoardConnector mConnectors inverse toOne mComponent ;
  
  override transient CanariIssueArray issues dependsFrom self.mConnectors.all.issues ;

  transient Bool componentIsPlacedInBoard dependsFrom super.BoardObject.isPlacedInBoard ;

  transient String componentIsPlacedInBoardString dependsFrom self.componentIsPlacedInBoard ;

  transient EBBezierPath strokeBezierPath dependsFrom self.mSelectedPackage.one.mStrokeBezierPath ;

  transient PadNetDictionary padNetDictionary dependsFrom self.mSymbols.all.symbolInfo ;
 
  override transient EBShape objectDisplay dependsFrom
    self.mX, self.mY, self.mRotation, self.mSide,
    self.packagePadDictionary, self.padNetDictionary,
    self.strokeBezierPath,
    self.mDisplayLegend,
    prefs.frontSideLayoutColorForBoard,
    prefs.backSideLayoutColorForBoard,
    prefs.frontSideLegendColorForBoard,
    prefs.backSideLegendColorForBoard,
    super.BoardObject.packageDrawingWidthMultpliedByTenForBoard default 10,
    prefs.frontSidePadColorForBoard,
    super.BoardObject.displayFrontPadsForBoard default yes,
    prefs.backSidePadColorForBoard,
    super.BoardObject.displayBackPadsForBoard default yes,
    super.BoardObject.displayFrontLegendForBoard default yes,
    super.BoardObject.displayBackLegendForBoard default yes,
    prefs.padNumberFontForBoard,
    prefs.padNumberColorForBoard,
    super.BoardObject.displayPadNumbersForBoard default yes,
    self.mNameIsVisibleInBoard, self.mXName, self.mYName,
    self.mNameFont.one.descriptor, self.mNameFontSize,
    self.mNameRotation,
    self.componentName,
    self.mValueIsVisibleInBoard, self.mXValue, self.mYValue,
    self.mValueFont.one.descriptor, self.mValueFontSize,
    self.mValueRotation, self.mComponentValue,
    self.mDevice.one.pinPadAssignments
  ;

  transient ThreeStringArray pinPadAssignments dependsFrom self.mDevice.one.pinPadAssignments ;
 
  override transient EBShape selectionDisplay dependsFrom
    prefs.selectionHiliteColor,
    prefs.frontSideLayoutColorForBoard,
    prefs.backSideLayoutColorForBoard,
    prefs.frontSideLegendColorForBoard,
    prefs.backSideLegendColorForBoard,
    super.BoardObject.displayFrontLegendForBoard default yes,
    super.BoardObject.displayBackLegendForBoard default yes,
    self.mX, self.mY, self.mRotation, self.mSide, self.strokeBezierPath,
    self.mDisplayLegend,
    self.mNameIsVisibleInBoard, self.mXName, self.mYName, self.mNameFont.one.descriptor, self.mNameFontSize,
    self.mNameRotation, self.componentName,
    self.packagePadDictionary, self.padNetDictionary,
    self.mValueIsVisibleInBoard, self.mXValue, self.mYValue, self.mValueFont.one.descriptor, self.mValueFontSize,
    self.mValueRotation, self.mComponentValue,
    prefs.hiliteWidthMultipliedByTen,
    prefs.mShowComponentRotationKnobInBoard
  ;

  transient Bool hasSlavePads dependsFrom self.packagePadDictionary ;
  
//--- Symbols
  toMany @generateDirectAccess ComponentSymbolInProject mSymbols inverse toOne mComponent ;

  transient StringTagArray unplacedSymbols dependsFrom
    self.componentName,
    self.mSymbols,
    self.mSymbols.all.symbolInSchematic,
    self.mSymbols.all.mSymbolInstanceName,
    self.mSymbols.all.mSymbolTypeName,
    self.mComponentValue
  ;

  transient String placementInSchematic dependsFrom self.mSymbols.all.symbolInSchematic ;

  transient DeviceSymbolDictionary deviceSymbolDictionary dependsFrom self.mDevice.one.deviceSymbolDictionary ;  

//--- Component Name
  property @generateDirectAccess String mNamePrefix default "" ;
  property @generateDirectAccess Int mNameIndex default 0 ;
  override transient String componentName dependsFrom self.mNamePrefix, self.mNameIndex ;

//--- Component location in board  
  property @generateDirectAccess Int mX default 0 ;
  property @generateDirectAccess Int mXUnit default 2_286 ; // mils
  property @generateDirectAccess Int mY default 0 ;
  property @generateDirectAccess Int mYUnit default 2_286 ; // mils
  property @generateDirectAccess Int mRotation default 0 ; // 1000 -> 1°
  property @generateDirectAccess ComponentSide mSide default front ;

//--- Component name display
  toOne @weak FontInProject mNameFont inverse toMany mComponentNames ;
  property @generateDirectAccess Double mNameFontSize default 4.0 ;
  property @generateDirectAccess Int mXName default 0 ;
  property Int mXNameUnit default 2_286 ; // mils
  property @generateDirectAccess Int mYName default 685_800 ; // 300 mils
  property Int mYNameUnit default 2_286 ; // mils
  property @generateDirectAccess Bool mNameIsVisibleInBoard default yes ;
  property @generateDirectAccess Int mNameRotation default 0 ; // 1000 -> 1°

  transient String componentNameFontName dependsFrom self.mNameFont.one.mFontName ;

//--- Component value display
  property @generateDirectAccess String mComponentValue default "" ;
  toOne @weak FontInProject mValueFont inverse toMany mComponentValues ;
  property @generateDirectAccess Double mValueFontSize default 4.0 ;
  property @generateDirectAccess Int mXValue default 0 ;
  property Int mXValueUnit default 2_286 ; // mils
  property @generateDirectAccess Int mYValue default -685_800 ; // 300 mils
  property Int mYValueUnit default 2_286 ; // mils
  property @generateDirectAccess Bool mValueIsVisibleInBoard default yes ;
  property @generateDirectAccess Int mValueRotation default 0 ; // 1000 -> 1°

  transient String componentValueFontName dependsFrom self.mValueFont.one.mFontName ;
}

//——————————————————————————————————————————————————————————————————————————————
