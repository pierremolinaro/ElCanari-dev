//------------------------------------------------------------------------------
//     P R O J E C T    D O C U M E N T
//------------------------------------------------------------------------------

autoLayoutDocument AutoLayoutProjectDocument root ProjectRoot stackView mDocumentMainView {

  stackView mPageMasterView vStack { }

  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
//      vStack {
//        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, size : .regular) {
//          addPage (title: "Description", tooltip: "Artwork Description", pageView: stackView mDescriptionPage)
//          addPage (title: "Minima", tooltip: "Minima Editor", pageView: stackView mMinimaPage)
//          addPage (title: "Data", tooltip: "Data Editor", pageView: stackView mDataPage)
//          $selectedPage root.selectedTab
//          $segmentImage self.segmentedControlDataIssueImage (segmentIndex : 2)
//        }
//        hStack { space StaticLabel (title: "Page", bold: no, size : .small) space }
//      }
//      vStack {
//        SignatureField (size : .regular) { $signature signature }
//        StaticLabel (title: "Signature", bold: no, size : .small) { set (alignment: .center)  expandableWidth () }
//      }
//      vStack {
//        VersionField (size : .regular) { $version version $versionShouldChange versionShouldChange }
//        StaticLabel (title: "Version", bold: no, size : .small) { set (alignment: .center) expandableWidth () }
//      }
//      space
//      vStack {
//        hStack { space ImageObserverView (size : .regular) { $image self.statusImage $tooltip self.statusMessage } space }
//        StaticLabel (title: "Status", bold: no, size : .small) { set (alignment: .center) }
//      }
    }
    separator
    stackViewRef mPageMasterView
  }
  
//xibdocument ProjectDocument root ProjectRoot {
////--- Selected Page
//  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.mSelectedPageIndex ;
//  outlet NSView mMasterView ;
//  outlet CanariViewWithKeyView mComponentsPageView ;
//  outlet CanariViewWithKeyView mLibraryPageView ;
//  outlet CanariViewWithKeyView mSchematicsPageView ;
//  outlet CanariViewWithKeyView mNetClassesPageView ;
//  outlet CanariViewWithKeyView mNetListPageView ;
//  outlet CanariViewWithKeyView mBoardBorderPageView ;
//  outlet CanariViewWithKeyView mBoardObjectsPageView ;
//  outlet CanariViewWithKeyView mProductPageView ;
//
////--- Issues
//  outlet EBImageObserverView mSchematicStatusImageViewInToolbar
//    $image root.schematicStatusImage
//    $tooltip root.schematicStatusMessage
//  ;
//  outlet EBImageObserverView mBoardStatusImageViewInToolbar $image root.boardStatusImage $tooltip root.boardStatusMessage ;
//  outlet EBImageObserverView mERCStatusImageViewInToolbar $image root.ercStatusImage $tooltip root.ercStatusMessage ;
//
////---------------------- Components Tab
//  action addComponentAction ;
//  outlet EBButton mAddComponentButton $run addComponentAction ;
//
//  outlet CanariNewComponentFromDevicePullDownButton mNewComponentFromDevicePullDownButton
//    $deviceNames root.deviceNames ;
//
//  action duplicateSelectedComponentsAction ;
//  outlet EBButton mDuplicateSelectedComponentsActionButton
//    $run duplicateSelectedComponentsAction
//    $enabled #componentController.selectedArray.count > 0
//  ;
//
//  action removeSelectedComponentsAction ;
//  outlet EBButton mRemoveSelectedComponentsActionButton
//    $run removeSelectedComponentsAction
//    $enabled #componentController.selectedArray.count > 0
//  ;
//
//  action changePackageOfSelectedComponentsAction ;
//  transient Bool canChangePackage dependsFrom #componentController.selectedArray.all.availablePackages ;
//  outlet EBButton mChangePackageOfSelectedComponentsActionButton
//    $run changePackageOfSelectedComponentsAction
//    $enabled self.canChangePackage
//  ;
//  outlet NSPanel mChangePackagePanel ;
//  outlet EBPopUpButton mChangePackagePopUpButton ;
//  outlet NSTextField mChangePackageComponentListTextField ;
//
//
//  action changeValueOfSelectedComponentsAction ;
//  outlet EBButton mChangeValueOfSelectedComponentsActionButton
//    $run changeValueOfSelectedComponentsAction
//    $enabled #componentController.selectedArray.count > 0
//  ;
//  outlet NSPanel mChangeValuePanel ;
//  outlet CanariComboBox mChangeComponentValueComboxBox ;
//  outlet NSTextField mChangeValueComponentListTextField ;
//  outlet NSButton mChangeValueValidationButton ;
//
//  action revealPackageOfSelectedComponentsAction ;
//  outlet EBButton mRevealPackageOfSelectedComponentsButton
//    $run revealPackageOfSelectedComponentsAction
////    $enabled (#componentController.selectedArray.count > 0) & #componentController.selectedArray.all.isPlacedInBoard
//    $enabled #componentController.selectedArray.count > 0
//  ;
//
//  outlet EBButton mRenameComponentButton $enabled #componentController.selectedArray.count == 1 ; // Action targeted in IB

//  tableViewController #componentController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mComponents {
//     column "name" sortkey componentName EBTextObserverField $valueObserver self.componentName
//     column "device" sortkey deviceName EBTextObserverField $valueObserver self.deviceName
//     column "package" sortkey selectedPackageName EBTextObserverField $valueObserver self.selectedPackageName
//     column "value" sortkey mComponentValue EBTextField $value self.mComponentValue (sendContinously : no)
//     column "inSchematics" sortkey placementInSchematic EBTextObserverField $valueObserver self.placementInSchematic
//     column "inBoard" sortkey componentIsPlacedInBoardString EBTextObserverField $valueObserver self.componentIsPlacedInBoardString
//  }
//  outlet EBTableView mComponentTableView $tableValue #componentController ;
//
//  transient String componentCount dependsFrom root.mComponents.count ;
//  outlet EBTextObserverField mComponentCountTextField $valueObserver self.componentCount ;
//
////---------------------- Net Class Tab
//  tableViewController #netClassController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mNetClasses {
//    column "name" EBTextObserverField $valueObserver self.mNetClassName
//    column "netcolor" EBTextObserverField $backColor self.mNetClassColor
//    column "width" EBTextObserverField $valueObserver self.trackWidthString
//    column "hole" EBTextObserverField $valueObserver self.viaHoleDiameter
//    column "pad" EBTextObserverField $valueObserver self.viaPadDiameter
//    column "used" EBTextObserverField $valueObserver self.netUsage
//    column "onFront" EBTextObserverField $valueObserver self.allowTracksOnFrontSideString
//    column "onBack" EBTextObserverField $valueObserver self.allowTracksOnBackSideString
//    column "onInner1" EBTextObserverField $valueObserver self.allowTracksOnInner1LayerString
//    column "onInner2" EBTextObserverField $valueObserver self.allowTracksOnInner2LayerString
//    column "onInner3" EBTextObserverField $valueObserver self.allowTracksOnInner3LayerString
//    column "onInner4" EBTextObserverField $valueObserver self.allowTracksOnInner4LayerString
//  }
//  outlet EBTableView mNetClassTableView $tableValue #netClassController ;
//
//  action addNetClassAction ;
//  outlet EBButton mAddNetClassButton $run addNetClassAction ;
//  outlet NSPanel mAddNetClassPanel ;
//  outlet EBTextField mAddNetClassTextField ;
//  outlet NSTextField mAddNetClassErrorMessageTextField ;
//  outlet CanariDimensionTextField mNetClassWidthDimensionTextField ;
//  outlet EBPopUpButton mNetClassWidthUnitPopUpButton ;
//  outlet EBSwitch mAllowTracksOnFrontSideSwitch ;
//  outlet EBSwitch mAllowTracksOnInner1LayerSwitch ;
//  outlet EBSwitch mAllowTracksOnInner2LayerSwitch ;
//  outlet EBSwitch mAllowTracksOnInner3LayerSwitch ;
//  outlet EBSwitch mAllowTracksOnInner4LayerSwitch ;
//  outlet EBSwitch mAllowTracksOnBackSideSwitch ;
//  outlet CanariDimensionTextField mNetClassHoleDiameterDimensionTextField ;
//  outlet EBPopUpButton mNetClassHoleDiameterUnitPopUpButton ;
//  outlet CanariDimensionTextField mNetClassPadDiameterDimensionTextField ;
//  outlet EBPopUpButton mNetClassPadDiameterUnitPopUpButton ;
//  outlet EBColorWell mNetClassColorWell ;
//  outlet NSButton mAddNetClassValidationButton ;
//
//  action removeNetClassAction ;
//  transient Bool canRemoveNetClasses dependsFrom root.mNetClasses.count, #netClassController.selectedArray.all.canRemove ;
//  outlet EBButton mRemoveNetClassButton
//    $run removeNetClassAction
//    $enabled self.canRemoveNetClasses
//  ;
//
//  action editNetClassAction ;
//  outlet EBButton mEditNetClassButton $run editNetClassAction $enabled #netClassController.selectedArray.count == 1 ;
//
////---------------------- Library Tab
//  action removeEmbeddedDevicesAction ;
//  outlet EBButton mRemoveEmbeddedDevicesButton $run removeEmbeddedDevicesAction $enabled root.mDevices.count > 0 ;
//
//  action resetDevicesAndFontsVersionAction ;
//  outlet EBButton mResetDevicesAndFontsVersionButton
//    $run resetDevicesAndFontsVersionAction
//    $enabled (root.mDevices.count > 0) | (root.mFonts.count > 0) ;
//
//  action updateDevicesAndFontsAction ;
//  outlet EBButton mUpdateDevicesAndFontsButton
//    $run updateDevicesAndFontsAction
//    $enabled (root.mDevices.count > 0) | (root.mFonts.count > 0) ;
//
////--- Fonts
//  action addFontAction ;
//  outlet EBButton mAddFontButton $run addFontAction ;
//
//  action editFontAction ;
//  outlet EBButton mEditFontButton $run editFontAction $enabled #projectFontController.selectedArray.count > 0 ;
//
//  action updateFontAction ;
//  outlet EBButton mUpdateFontButton $run updateFontAction $enabled #projectFontController.selectedArray.count > 0 ;
//
//  action removeFontAction ;
//  transient Bool canRemoveSelectedFonts dependsFrom #projectFontController.selectedArray.all.canRemoveFont ;
//  outlet EBButton mRemoveFontButton $run removeFontAction
//    $enabled #projectFontController.selectedArray.count > 0 & self.canRemoveSelectedFonts
//  ;
//
//  action resetFontVersionAction ;
//  outlet EBButton mResetFontVersionButton $run resetFontVersionAction $enabled #projectFontController.selectedArray.count > 0 ;
//
//  tableViewController #projectFontController {allowsEmptySelection:no, allowsMultipleSelection:no} root.mFonts {
//     column "name" EBTextObserverField $valueObserver self.mFontName
//     column "version" EBTextObserverField $valueObserver self.versionString
//     column "size" EBTextObserverField $valueObserver self.sizeString
//     column "texts" EBIntObserverField $valueObserver self.mTexts.count (autoFormatter : yes)
//     column "names" EBIntObserverField $valueObserver self.mComponentNames.count (autoFormatter : yes)
//     column "values" EBIntObserverField $valueObserver self.mComponentValues.count (autoFormatter : yes)
//  }
//  outlet EBTableView mFontLibraryTableView $tableValue #projectFontController ;
//
////--- Devices
//  action resetSelectedDeviceVersionAction ;
//  outlet EBButton mResetSelectedDeviceVersionButton
//    $run resetSelectedDeviceVersionAction
//    $enabled #projectDeviceController.selectedArray.count > 0
//  ;
//
//  transient Bool canRemoveSelectedDevices dependsFrom #projectDeviceController.selectedArray.all.canRemove ;
//  action removeDeviceAction ;
//  outlet EBButton mRemoveDeviceButton
//    $run removeDeviceAction
//    $enabled self.canRemoveSelectedDevices
//  ;
//
//  action editDeviceAction ;
//  outlet EBButton mEditDeviceButton
//    $run editDeviceAction
//    $enabled #projectDeviceController.selectedArray.count > 0
//  ;
//
//  outlet NSPanel mRenameDevicePanel ;
//  outlet NSTextField mRenameDeviceTitleTextField ;
//  outlet EBTextField mRenameDeviceNameTextField ;
//  outlet NSTextField mRenameDeviceErrorMessageTextField ;
//  outlet NSButton mRenameDeviceValidationButton ;
//
//  action exportDeviceAction ;
//  outlet EBButton mExportDeviceButton
//    $run exportDeviceAction
//    $enabled #projectDeviceController.selectedArray.count > 0
//  ;
//
//  action updateDeviceAction ;
//  outlet EBButton mUpdateDeviceButton
//    $run updateDeviceAction
//    $enabled #projectDeviceController.selectedArray.count > 0
//  ;
//
//
//  tableViewController #projectDeviceController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mDevices {
//     column "name" sortkey mDeviceName EBTextObserverField $valueObserver self.mDeviceName
//     column "version" sortkey versionString EBTextObserverField $valueObserver self.versionString
//     column "size" sortkey sizeString EBTextObserverField $valueObserver self.sizeString
//     column "componentCount" sortkey deviceComponentCountString EBTextObserverField $valueObserver self.deviceComponentCountString
//  }
//  outlet EBTableView mDeviceLibraryTableView $tableValue #projectDeviceController ;
//
//  transient StringArray selectedDevicePackageNames dependsFrom #projectDeviceController.selectedArray.all.packageNames ;
//  outlet StringArrayTableView mDevicePackageTableView $array self.selectedDevicePackageNames ;
//
//  transient DeviceSymbolDictionary selectedDeviceSymbols
//    dependsFrom #projectDeviceController.selectedArray.all.deviceSymbolDictionary
//  ;
//  outlet DeviceSymbolTypesTableView mDeviceSymbolTypeTableView $symbolDictionary self.selectedDeviceSymbols ;
//
//  outlet StringArrayTableView mDeviceSymbolTypePinsTableView ; // Binding by mDeviceSymbolTypeTableView
//
//  transient TwoStringArray selectedDeviceSymbolNames dependsFrom
//    #projectDeviceController.selectedArray.all.symbolAndTypesNames ;
//  outlet TwoStringArrayTableView mDeviceSymbolTableView $array self.selectedDeviceSymbolNames ;
//
//  transient ThreeStringArray pinPadAssignments dependsFrom #projectDeviceController.selectedArray.all.pinPadAssignments ;
//  outlet ThreeStringArrayTableView mPinPadAssignmentTableView $array self.pinPadAssignments ;
//
////---------------------- Schematics Tab
//  outlet CanariSegmentedControl mSchematicsInspectorSegmentedControl $selectedPage root.mSelectedSchematicInspector ;
//  outlet NSView mBaseSchematicsInspectorView ;
//  outlet CanariViewWithKeyView mSelectedObjectsSchematicsInspectorView ;
//  outlet CanariViewWithKeyView mHotKeysSchematicInspectorView ;
//  outlet CanariViewWithKeyView mGridZoomSchematicsInspectorView ;
//  outlet CanariViewWithKeyView mUnplacedSymbolsSchematicsInspectorView ;
//  outlet CanariViewWithKeyView mSchematicsSheetsInspectorView ;
//
//  outlet CanariDragSourceButton mAddCommentButton ;
//  outlet CanariDragSourceButton mAddWireButton ;
//  outlet CanariDefaultNetClassPopUpButton mCanariDefaultNetClassPopUpButton
//    $netClasses root.mDefaultNetClassName, root.allClassNames ;
//
//  outlet NSPanel mMoveSelectedObjectsToSheetPanel ;
//  outlet EBPopUpButton mMoveSelectedObjectsToSheetPopUpButton ;
//
////--- Contextual menus
//  outlet NSPanel mMergeSeveralSubnetsPanel ;
//  outlet EBPopUpButton mMergeSeveralSubnetsPopUpButton ;
//  
//  outlet NSPanel mExchangeSymbolPanel ;
//  outlet EBPopUpButton mExchangeSymbolPopUpButton ;
//
////--- Hot keys inspector
//  outlet NSTextField mConnectSchematicHotKeyTextField ;
//  outlet NSTextField mDisconnectSchematicHotKeyTextField ;
//  outlet NSTextField mAddWirePointSchematicHotKeyTextField ;
//  outlet NSTextField mRemoveWirePointSchematicHotKeyTextField ;
//  outlet NSTextField mAddLeftLabelSchematicHotKeyTextField ;
//  outlet NSTextField mAddRightLabelSchematicHotKeyTextField ;
//  outlet NSTextField mAddTopLabelSchematicHotKeyTextField ;
//  outlet NSTextField mAddBottomSchematicHotKeyTextField ;
//  outlet NSTextField mAddNCSchematicHotKeyTextField ;
//  outlet NSTextField mDisconnectAllSymbolPinsSchematicHotKeyTextField ;
//  outlet NSTextField mConnectAllSymbolPinsSchematicHotKeyTextField ;
//  outlet NSTextField mAddNCToAllSymbolPinsSchematicHotKeyTextField ;
//  outlet NSTextField mExchangeSymbolSchematicHotKeyTextField ;
//   
////--- Unplaced symbols inspector
//  outlet CanariDragSourceTableView mUnplacedSymbolsTableView $models root.unplacedSymbols ;
//  transient Int unplacedSymbolsCount dependsFrom root.unplacedSymbols ;
//  transient String unplacedSymbolsCountString dependsFrom self.unplacedSymbolsCount ;
//  outlet EBTextObserverField mUnplacedSymbolsTextField $valueObserver self.unplacedSymbolsCountString ;
//
////--- Grid and Flip inspector
//  outlet EBSwitch mSchematicsHorizontalFlipSwitch $value root.mSchematicHorizontalFlip ;
//  outlet EBSwitch mSchematicsVerticalFlipSwitch $value root.mSchematicVerticalFlip ;
//  outlet EBPopUpButton mSchematicsGridStylePopUpButton $selectedIndex root.mSchematicGridStyle ;
//  outlet EBPopUpButton mSchematicsGridDisplayFactorPopUpButton $selectedTag root.mSchematicGridDisplayFactor ;
//  outlet EBColorWell mDotColorGridForSchematicColorWell $color prefs.dotColorGridForSchematic (sendContinously:yes) ;
//  outlet EBColorWell mLineColorGridForSchematicColorWell $color prefs.lineColorGridForSchematic (sendContinously:yes) ;
//  outlet EBColorWell mSchematicBackColorColorWell $color prefs.schematicBackColor (sendContinously: yes) ;
//  outlet EBColorWell mSchematicFrameColorColorWell $color prefs.schematicFrameColor (sendContinously: yes) ;
//
////----------------- Color and Font inspector
//
////--- Symbol color for placed components
//  outlet EBColorWell mSymbolColorForSchematicColorWell $color prefs.symbolColorForSchematic (sendContinously:yes) ;
////--- Symbol color for unplaced components
//  outlet EBColorWell mUnplacedComponentsColorForSchematicColorWell $color prefs.symbolColorForUnplacedComponentsForSchematic (sendContinously:yes) ;
////--- Symbol drawing line width
//  outlet EBPopUpButton mSymbolDrawingWidthMultipliedByTenForSchematicPopUpButton $selectedTag prefs.symbolDrawingWidthMultipliedByTenForSchematic ;
////--- Component Name Color
//  outlet EBColorWell mComponentNameColorForSchematicColorWell $color prefs.componentNameColorForSchematic (sendContinously:yes) ;
////--- Component Name Font
//  outlet EBFontButton mComponentNameFontForSchematicFontButton $fontValue prefs.componentNameFontForSchematic ;
////--- Component Value Color
//  outlet EBColorWell mComponentValueColorForSchematicColorWell $color prefs.componentValueColorForSchematic (sendContinously:yes) ;
////--- Component Value Font
//  outlet EBFontButton mComponentValueFontForSchematicFontButton $fontValue prefs.componentValueFontForSchematic ;
////--- Pin Name Color
//  outlet EBColorWell mPinNameColorForSchematicColorWell $color prefs.pinNameColorForSchematic (sendContinously:yes) ;
////--- Pin Name Font
//  outlet EBFontButton mPinNameFontForSchematicFontButton $fontValue prefs.pinNameFontForSchematic ;
////--- Pin Number Color
//  outlet EBColorWell mPinNumberColorForSchematicColorWell $color prefs.pinNumberColorForSchematic (sendContinously:yes) ;
////--- Pin Number Font
//  outlet EBFontButton mPinNumberFontForSchematicFontButton $fontValue prefs.pinNumberFontForSchematic ;
////--- Connection Color
//  outlet EBColorWell mConnectionColorForSchematicColorWell $color prefs.connectionColorForSchematic (sendContinously:yes) ;
//
//
////--- Sheet inspector
//  outlet EBTextField mSchematicsTitleTextField $value root.mSchematicTitle (sendContinously : yes) ;
//  outlet EBTextField mSchematicsVersionTextField $value root.mSchematicVersion (sendContinously : yes) ;
//  outlet CanariEnumSegmentedControl mSchematicsSheetOrientationSegmentedControl
//    $selectedSegment root.mSchematicSheetOrientation
//  ;
//
//  outlet EBPopUpButton mSchematicCustomWidthUnitPopUp $selectedTag root.mSchematicCustomWidthUnit ;
//  outlet CanariDimensionTextField mSchematicCustomWidthTextField
//     $dimensionAndUnit root.mSchematicCustomWidth, root.mSchematicCustomWidthUnit
//  ;
//
//  outlet EBPopUpButton mSchematicCustomHeightUnitPopUp $selectedTag root.mSchematicCustomHeightUnit ;
//  outlet CanariDimensionTextField mSchematicCustomHeightTextField
//     $dimensionAndUnit root.mSchematicCustomHeight, root.mSchematicCustomHeightUnit
//  ;
//
//  transient Bool schematicSheetOrientationIsCustom dependsFrom root.mSchematicSheetOrientation ;
//  outlet NSView mSchematicCustomSizeView $hidden !self.schematicSheetOrientationIsCustom ;
//  
//  outlet EBTextField mSelectedSheetTitleTextField $value root.selectedSheetTitle (sendContinously : yes) ;
//
//  outlet EBPopUpButton mSheetPopUpButton ; // All bindings done programmatically
//  outlet EBButton mSheetUpButton ; // All bindings done programmatically
//  outlet EBButton mSheetDownButton ; // All bindings done programmatically
//
//  action newSheetAction ;
//  outlet EBButton mNewSheetButton $run newSheetAction ;
//
//  action removeSheetAction ;
//  outlet EBButton mRemoveSheetButton $run removeSheetAction $enabled root.mSheets.count > 1 ;
//
//
//  action setDateToNowAction ;
//  outlet EBButton mSetDateToNowButton $run setDateToNowAction ;
//
//  action openSetDateDialogAction ;
//  outlet EBButton mOpenSetDateDialogButton $run openSetDateDialogAction ;
//  outlet NSPanel mSetDatePanel ;
//  outlet NSDatePicker mSchematicsDatePicker ;
//
////--- Schematics view
//  arrayController #schematicObjectsController : root.selectedSheetObjects ;
//
//  outlet EBEnclosingGraphicView mSchematicsView
//    $underObjectsDisplay root.schematicBackgroundDisplay
//    $overObjectsDisplay root.connectedPoints
//    $horizontalFlip root.mSchematicHorizontalFlip
//    $verticalFlip root.mSchematicVerticalFlip
//    $graphicController #schematicObjectsController
//    $gridStyle root.mSchematicGridStyle
//    $gridDisplayFactor root.mSchematicGridDisplayFactor
//    $gridLineColor prefs.lineColorGridForSchematic
//    $gridCrossColor prefs.dotColorGridForSchematic
//    $zoom root.mSchematicZoom
//    $backColor prefs.schematicBackColor
//  ;
//
////--- Selected Wire In schematics
//  outlet CanariViewWithKeyView mSchematicsWireInspectorView ;
//  selectionController WireInSchematic #wireInSchematicSelectionController :
//    #schematicObjectsController.selectedArray
//  ;
//
//  outlet EBTextObserverField mWireNetNameTextField
//    $valueObserver #wireInSchematicSelectionController.netName
//  ;
//
//  outlet EBButton mWireRenameNetButton // Action set in IB
//    $enabled (#wireInSchematicSelectionController.selectedArray.count == 1) & #wireInSchematicSelectionController.hasNet
//  ;
//
//  outlet EBButton mWireRenameNetWithUniqueNewNameButton // Action set in IB
//    $enabled (#wireInSchematicSelectionController.selectedArray.count > 0) & #wireInSchematicSelectionController.hasNet
//  ;
//  
//  outlet EBButton mSchematicWireMergeSubnetButton  // Action set in IB
//    $enabled (#wireInSchematicSelectionController.selectedArray.count == 1) & #wireInSchematicSelectionController.hasNet
//  ;
//
//  outlet EBButton mSchematicWireInsulateSubnetButton  // Action set in IB
//    $enabled (#wireInSchematicSelectionController.selectedArray.count == 1) & #wireInSchematicSelectionController.hasNet
//  ;
//  
//  outlet EBPopUpButton mSchematicWireNetClassButton ;
//
////--- Selected NC In schematics
//  outlet CanariViewWithKeyView mNCInSchematicsInspectorView ;
//  selectionController NCInSchematic #ncInSchematicSelectionController :
//    #schematicObjectsController.selectedArray
//  ;
//
//  outlet CanariQuadrantSegmentedControl mNCRotationSegmentedControl
//     $quadrant #ncInSchematicSelectionController.mOrientation ;
//
////--- Selected comment in schematic inspector
//  outlet CanariViewWithKeyView mCommentInSchematicsInspectorView ;
//  selectionController CommentInSchematic #commentInSchematicSelectionController :
//    #schematicObjectsController.selectedArray
//  ;
//
//  outlet EBTextField mCommentInSchematicsTextField
//    $value #commentInSchematicSelectionController.mComment (sendContinously : yes)
//  ;
//
//  outlet EBDoubleField mCommentSizeInSchematicsTextField
//    $value #commentInSchematicSelectionController.mSize (sendContinously : no, autoFormatter : no)
//  ;
//
//  outlet EBSlider mCommentSizeInSchematicsSlider
//    $doubleValue #commentInSchematicSelectionController.mSize (sendContinously : yes)
//  ;
//
//  outlet EBColorWell mCommentColorInSchematicsTextField
//    $color #commentInSchematicSelectionController.mColor (sendContinously : yes)
//  ;
//
//  outlet CanariEnumSegmentedControl mCommentInSchematicsHorizontalAlignmentSegmentedControl
//    $selectedSegment #commentInSchematicSelectionController.mHorizontalAlignment
//  ;
//
//  outlet CanariEnumSegmentedControl mCommentInSchematicsVerticalAlignmentSegmentedControl
//    $selectedSegment #commentInSchematicSelectionController.mVerticalAlignment
//  ;
//
////--- Selected label in schematic inspector
//  outlet CanariViewWithKeyView mSchematicsLabelInspectorView ;
//  selectionController LabelInSchematic #schematicLabelSelectionController :
//    #schematicObjectsController.selectedArray
//  ;
//
//  outlet CanariQuadrantSegmentedControl mSchematicsLabelRotationSegmentedControl
//     $quadrant #schematicLabelSelectionController.mOrientation ;
//
//  outlet EBTextObserverField mSchematicsLabelNetNameTextField
//    $valueObserver #schematicLabelSelectionController.netName
//  ;
//
//  outlet EBButton mSchematicsLabelRenameNetButton // Action set in IB
//    $enabled #schematicLabelSelectionController.selectedArray.count == 1
//  ;
//  
//  outlet EBButton mSchematicLabelMergeSubnetButton  // Action set in IB
//    $enabled #schematicLabelSelectionController.selectedArray.count == 1
//  ;
//  outlet NSPanel mMergeNetDialog ;
//  outlet EBPopUpButton mMergeNetPopUpButton ;
//  
//  outlet EBButton mSchematicLabelInsulateSubnetButton  // Action set in IB
//    $enabled #schematicLabelSelectionController.selectedArray.count == 1
//  ;
//  
//  outlet EBPopUpButton mSchematicLabelNetClassButton ;
//
////--- Selected symbol in schematic inspector
//  outlet CanariViewWithKeyView mComponentSymbolInspectorView ;
//  selectionController ComponentSymbolInProject #componentSymbolSelectionController :
//    #schematicObjectsController.selectedArray
//  ;
//
//  outlet EBSwitch mComponentSymbolShowComponentValueSwitch
//    $value #componentSymbolSelectionController.mDisplayComponentValue
//  ;
//  outlet EBTextObserverField mComponentSymbolComponentNameTextField
//    $valueObserver #componentSymbolSelectionController.componentName
//  ;
//
//  outlet EBButton mRenameComponentFromComponentSymbolButton // Action set in IB
//    $enabled #schematicObjectsController.selectedArray.count == 1
//  ;
//
//  outlet EBTextField mComponentSymbolValueTextField
//    $value #componentSymbolSelectionController.componentValueProxy (sendContinously : yes)
//  ;
//
//  outlet EBTextObserverField mComponentSymbolDeviceNameTextField
//    $valueObserver #componentSymbolSelectionController.deviceName
//  ;
//
//  outlet EBTextObserverField mComponentSymbolTypeNameTextField
//    $valueObserver #componentSymbolSelectionController.mSymbolTypeName
//  ;
//
//  outlet EBTextObserverField mComponentSymbolInstanceNameTextField
//    $valueObserver #componentSymbolSelectionController.mSymbolInstanceName
//  ;
//
//  outlet CanariQuadrantSegmentedControl mSymbolRotationSegmentedControl
//     $quadrant #componentSymbolSelectionController.mRotation ;
//
//  outlet EBSwitch mSymbolMirrorSwitch $value #componentSymbolSelectionController.mMirror ;
//
////---------------------- Net Tab
//  outlet CanariNetInfoTableView mNetInfoTableView $netInfo root.netsDescription ;
//
//  transient String netCountString dependsFrom root.netsDescription ;
//  
//  outlet EBTextObserverField mNetCountTextField $valueObserver self.netCountString ;
//  
//  transient Int netCount dependsFrom root.netsDescription ;
//  
//  outlet EBButton mRenameNetInNetTabButton $enabled self.netCount > 0 ; // Action set in IB
//  outlet NSPanel mRenameNetPanel ;
//  outlet EBTextField mRenameNetTextField ;
//  outlet EBTextField mRenameNetErrorTextField ;
//  outlet EBButton mRenameNetOkButton ;
//
//  
//  outlet EBButton mSelectNetClassInNetTabButton $enabled self.netCount > 0 ; // Action set in IB
//  outlet NSPanel mSelectNetClassPanel ;
//  outlet EBPopUpButton mSelectNetClassPopUpButton ;
//
//  outlet NSImageView mNetWarningImageView $hidden root.netWarningCount == 0 ;
//  
//  outlet EBIntObserverField mNetWarningTextField
//    $valueObserver root.netWarningCount (autoFormatter: yes)
//    $hidden root.netWarningCount == 0
//  ;
//
////----------------- Board limits tab
//  arrayController #boardCurveObjectsController : root.mBorderCurves ; // $hidden root.boardShapeIsRectangular ;
//
//  outlet EBEnclosingGraphicView mBoardLimitsView
//    $underObjectsDisplay root.borderViewBackground
//    $horizontalFlip root.mBoardLimitsHorizontalFlip
//    $verticalFlip root.mBoardLimitsVerticalFlip
//    $graphicController #boardCurveObjectsController
//    $gridStyle root.mBoardLimitsGridStyle
//    $gridDisplayFactor root.mBoardLimitsGridDisplayFactor
//    $gridLineColor prefs.lineColorGridForBoard
//    $gridCrossColor prefs.crossColorGridForBoard
//    $zoom root.mBoardLimitsZoom
//    $backColor prefs.boardBackgroundColorForBoard
//    $mouseGrid root.mBoardLimitsGridStep
//    $gridStep root.mBoardLimitsGridStep
//    $arrowKeyMagnitude root.mBoardLimitsGridStep
//    $shiftArrowKeyMagnitude root.boardLimitsGridStepMultipliedByDisplayFactor
//    $xPlacardUnit root.mBoardLimitsGridStepUnit
//    $yPlacardUnit root.mBoardLimitsGridStepUnit
//  ;
//
////--- Inspectors
//  outlet CanariSegmentedControl mBoardLimitsInspectorSegmentedControl $selectedPage root.mBoardLimitsSelectedInspector ;
//  outlet NSView mBaseBoardLimitsInspectorView ;
//  outlet CanariViewWithKeyView mSelectedObjectsBoardLimitsInspectorView ;
//  outlet CanariViewWithKeyView mGridZoomBoardLimitsInspectorView ;
//  outlet CanariViewWithKeyView mOperationBoardLimitsInspectorView ;
//
////--- Limit Curve inspector view
//  selectionController BorderCurve #boardCurveSelectionController :
//    #boardCurveObjectsController.selectedArray
//  ;
//  outlet CanariViewWithKeyView mSelectedBoardLimitInspectorView ;
//  outlet EBPopUpButton mSelectedLimitDisplayUnitPopUp $selectedTag root.mBoardSelectedCurveDisplayUnit ;
//
//  outlet CanariDimensionTextField mBoardCurvePointX1TextField
//     $dimensionAndUnit #boardCurveSelectionController.mX, root.mBoardSelectedCurveDisplayUnit
//  ;
//
//  outlet CanariDimensionTextField mBoardCurvePointY1TextField
//     $dimensionAndUnit #boardCurveSelectionController.mY, root.mBoardSelectedCurveDisplayUnit
//  ;
//
//  outlet EBTextObserverField mBoardCurveX2TextField $valueObserver #boardCurveSelectionController.p2Xstring ;
//  outlet CanariDimensionTextField mBoardCurvePointX2TextField
//     $dimensionAndUnit #boardCurveSelectionController.mNextX, root.mBoardSelectedCurveDisplayUnit
//  ;
//
//  outlet EBTextObserverField mBoardCurveY2TextField $valueObserver #boardCurveSelectionController.p2Ystring ;
//  outlet CanariDimensionTextField mBoardCurvePointY2TextField
//     $dimensionAndUnit #boardCurveSelectionController.mNextY, root.mBoardSelectedCurveDisplayUnit
//  ;
//
//  outlet EBPopUpButton mSelectedLimitShapePopUpButton $selectedIndex #boardCurveSelectionController.mShape ;
//
//  outlet EBPopUpButton mBoardCurveControlPointsUnitPopUp $selectedTag root.mBoardLimitControlPointsDisplayUnit ;
//
//  outlet CanariDimensionTextField mBoardCurveControlPointX1TextField
//     $dimensionAndUnit #boardCurveSelectionController.mCPX1, root.mBoardLimitControlPointsDisplayUnit
//  ;
//
//  outlet CanariDimensionTextField mBoardCurveControlPointY1TextField
//     $dimensionAndUnit #boardCurveSelectionController.mCPY1, root.mBoardLimitControlPointsDisplayUnit
//  ;
//
//  outlet CanariDimensionTextField mBoardCurveControlPointX2TextField
//     $dimensionAndUnit #boardCurveSelectionController.mCPX2, root.mBoardLimitControlPointsDisplayUnit
//  ;
//
//  outlet CanariDimensionTextField mBoardCurveControlPointY2TextField
//     $dimensionAndUnit #boardCurveSelectionController.mCPY2, root.mBoardLimitControlPointsDisplayUnit
//  ;
//
//  outlet NSView mLimitCurveBezierControlPointsView $hidden #boardCurveSelectionController.isLine ;
//  
//  outlet NSView mMessageBoardIsRectangularView $hidden !root.boardShapeIsRectangular ;
//  
////--- Grid and Flip inspector
//  outlet EBSwitch mBoardLimitsHorizontalFlipSwitch $value root.mBoardLimitsHorizontalFlip ;
//  outlet EBSwitch mBoardLimitsVerticalFlipSwitch $value root.mBoardLimitsVerticalFlip ;
//  outlet EBPopUpButton mBoardLimitsGridStylePopUpButton $selectedIndex root.mBoardLimitsGridStyle ;
//  outlet EBPopUpButton mBoardLimitsGridDisplayFactorPopUpButton $selectedTag root.mBoardLimitsGridDisplayFactor ;
//
//  outlet EBPopUpButton mBoardLimitsGridUnitPopUp $selectedTag root.mBoardLimitsGridStepUnit ;
//  outlet CanariDimensionTextField mBoardLimitsGridTextField
//     $dimensionAndUnit root.mBoardLimitsGridStep, root.mBoardLimitsGridStepUnit
//  ;
//  
////--- Operation Inspector
//  outlet EBTextObserverField mBoardLimitsElementCountTextField $valueObserver root.borderElementCountString ; 
//
//  outlet EBTextObserverField mBoardLimitPointsTopTextField $valueObserver root.boardInteriorTop ;
//  outlet EBTextObserverField mBoardLimitPointsBottomTextField $valueObserver root.boardInteriorBottom ;
//  outlet EBTextObserverField mBoardLimitPointsLeftTextField $valueObserver root.boardInteriorLeft ;
//  outlet EBTextObserverField mBoardLimitPointsRightTextField $valueObserver root.boardInteriorRight ;  
//
//  outlet EBPopUpButton mBoardPointsBoundingBoxUnitPopUp $selectedTag root.mBoardPointsBoundingBoxUnit ;
//
//  outlet EBTextObserverField mBoardLimitBorderTopTextField $valueObserver root.boardLimitBorderTop ;
//  outlet EBTextObserverField mBoardLimitBorderBottomTextField $valueObserver root.boardLimitBorderBottom ;
//  outlet EBTextObserverField mBoardLimitBorderLeftTextField $valueObserver root.boardLimitBorderLeft ;
//  outlet EBTextObserverField mBoardLimitBorderRightTextField $valueObserver root.boardLimitBorderRight ;  
//
//  outlet EBPopUpButton mBoardLimitsBoundingBoxUnitPopUp $selectedTag root.mBoardLimitsBoundingBoxUnit ;
//
//  outlet EBPopUpButton mBoardLimitsWidthUnitPopUp $selectedTag root.mBoardLimitsWidthUnit ;
//  outlet CanariDimensionTextField mBoardLimitsWidthTextField
//     $dimensionAndUnit root.mBoardLimitsWidth, root.mBoardLimitsWidthUnit
//  ;
//
//  outlet EBPopUpButton mBoardClearanceUnitPopUp $selectedTag root.mBoardClearanceUnit ;
//  outlet CanariDimensionTextField mBoardClearanceTextField
//     $dimensionAndUnit root.mBoardClearance, root.mBoardClearanceUnit
//  ;
//
//  outlet NSView mRectangularBoardWidthHeighView $hidden !root.boardShapeIsRectangular ;
//  outlet NSView mBezierPathBoardHelperView $hidden root.boardShapeIsRectangular ;
//  
//  outlet EBPopUpButton mRectangularBoardWidthUnitPopUp $selectedTag root.mRectangularBoardWidthUnit ;
//  outlet CanariDimensionTextField mRectangularBoardWidthTextField
//     $dimensionAndUnit root.mRectangularBoardWidth, root.mRectangularBoardWidthUnit
//  ;
//
//  outlet EBPopUpButton mRectangularBoardHeightUnitPopUp $selectedTag root.mRectangularBoardHeightUnit ;
//  outlet CanariDimensionTextField mRectangularBoardHeightTextField
//     $dimensionAndUnit root.mRectangularBoardHeight, root.mRectangularBoardHeightUnit
//  ;
//
//  outlet CanariEnumSegmentedControl mBoardShapePopUp $selectedSegment root.mBoardShape ;
//
////----------------- Board Objects tab
//  outlet CanariSegmentedControl mBoardInspectorSegmentedControl $selectedPage root.mBoardSelectedInspector ;
//  outlet NSView mBaseBoardInspectorView ;
//  outlet CanariViewWithKeyView mSelectedObjectsBoardInspectorView ;
//  outlet CanariViewWithKeyView mUnplacedPackagesBoardInspectorView ;
//  outlet CanariViewWithKeyView mGridZoomBoardInspectorView ;
//  outlet CanariViewWithKeyView mDisplayBoardInspectorView ;
//  outlet CanariViewWithKeyView mRouterBoardInspectorView ;
//  outlet CanariViewWithKeyView mERCBoardInspectorView ;
//
//  outlet CanariDragSourceButton mAddRestrictRectangleButton ;
//  outlet CanariDragSourceImageButton mAddTextInBoardButton ;
//  outlet CanariChoiceMenu mLayerForNewTextMenu $selectedIndex root.mBoardLayerForNewText ;
//  outlet CanariChoiceMenu mLayerForNewLineMenu $selectedIndex root.mBoardLayerForNewLine ;
//  outlet CanariChoiceMenu mBoardSideForNewRestrictRectangleMenu $selectedIndex root.mBoardSideForNewRestrictRectangle ;
//  outlet CanariDragSourceButton mAddLineInBoardButton ;
//  outlet CanariDragSourceImageButton mAddTrackInBoardButton ;
//  outlet CanariChoiceMenu mBoardSideForNewTrackMenu $selectedIndex root.mBoardSideForNewTrack ;
//  outlet CanariChoiceMenu mBoardDirectionForNewTrackMenu $selectedIndex root.mDirectionForNewTrack ;
//  
//  outlet CanariDragSourceTableView mUnplacedPackageTableView $models root.unplacedPackages ;
//  transient Int unplacedPackageCount dependsFrom root.unplacedPackages ;
//  transient String unplacedPackagesCountString dependsFrom self.unplacedPackageCount ;
//  outlet EBTextObserverField mUnplacedPackagesCountTextField $valueObserver self.unplacedPackagesCountString ;
//
//  arrayController #boardObjectsController : root.mBoardObjects ;
//  
//  transient EBShape overDisplay dependsFrom self.rastnetShape, root.boardIssues ;
//
//  outlet EBEnclosingGraphicView mBoardView
//    $underObjectsDisplay root.borderOutlineBackground
//    $overObjectsDisplay self.overDisplay
//    $horizontalFlip root.mBoardHorizontalFlip
//    $verticalFlip root.mBoardVerticalFlip
//    $graphicController #boardObjectsController
//    $gridStyle root.mBoardGridStyle
//    $gridDisplayFactor root.mBoardGridDisplayFactor
//    $gridLineColor prefs.lineColorGridForBoard
//    $gridCrossColor prefs.crossColorGridForBoard
//    $zoom root.mBoardZoom
//    $backColor prefs.boardBackgroundColorForBoard
//    $mouseGrid root.mBoardGridStep
//    $gridStep root.mBoardGridStep
//    $arrowKeyMagnitude root.mBoardGridStep
//    $shiftArrowKeyMagnitude root.boardGridStepMultipliedByDisplayFactor
//    $xPlacardUnit root.mBoardGridStepUnit
//    $yPlacardUnit root.mBoardGridStepUnit
//  ;
//
////--- Menu items
//  outlet CanariComponentsMenuItem mSelectComponentsMenuItem $components root.componentsPlacedInBoard ;
//  outlet CanariNetsMenuItem mSelectNetsMenuItem $nets root.netNamesArray ;
//
////--- Grid and Flip inspector
//  outlet EBSwitch mBoardHorizontalFlipSwitch $value root.mBoardHorizontalFlip ;
//  outlet EBSwitch mBoardVerticalFlipSwitch $value root.mBoardVerticalFlip ;
//  outlet EBPopUpButton mBoardGridStylePopUpButton $selectedIndex root.mBoardGridStyle ;
//  outlet EBPopUpButton mBoardGridDisplayFactorPopUpButton $selectedTag root.mBoardGridDisplayFactor ;
//  
//  outlet EBPopUpButton mBoardGridUnitPopUp $selectedTag root.mBoardGridStepUnit ;
//  outlet CanariDimensionTextField mBoardGridTextField
//     $dimensionAndUnit root.mBoardGridStep, root.mBoardGridStepUnit
//  ;
//
////--- Router inspector
//  action changeLayerConfigurationAction ;
//  outlet CanariLayerPopUpButton mLayerConfigurationPopUp
//    $layerConfiguration root.mLayerConfiguration
//    $run changeLayerConfigurationAction
//  ;
//
//  outlet EBPopUpButton mLayoutClearancePopUp $selectedTag root.mLayoutClearanceUnit ;
//  outlet CanariDimensionTextField mLayoutClearanceTextField
//     $dimensionAndUnit root.mLayoutClearance, root.mLayoutClearanceUnit
//  ;
//
//  outlet EBSwitch mCheckClearanceBetweenPadsOfSameNetSwitch $value root.mCheckClearanceBetweenPadsOfSameNet ;
//
//  outlet NSView mSaveDSNFileAuxiliaryView ;
//  outlet EBSwitch mExportTrackAndViasToDSNSwitch ;
//
//  outlet IssueTableView mERCIssueTableView ;
//  outlet EBButton mHideERCIssueButton ;
//
//  outlet EBPopUpButton mAutoRouterPreferredDirectionPopUp $selectedIndex root.mAutoRouterPreferredDirections ;
//  outlet EBPopUpButton mAutorouterSnapAnglePopUp $selectedIndex root.mAutorouterSnapAngle ;
//  outlet EBPopUpButton mAutoRouterRouteDirectionPopUp $selectedIndex root.mRouteDirection ;
//  outlet EBPopUpButton mAutoRouterRouteOriginPopUp $selectedIndex root.mRouteOrigin ;
//  
//  action launchFreeRouterWithoutAnyDocument ;
//  outlet EBButton mLaunchFreeRouterWithoutDocumentButton $run launchFreeRouterWithoutAnyDocument ;
//
//  outlet EBTextObserverField mTopSideTrackCountTextField $valueObserver root.topSideTrackCountString ;
//  outlet EBTextObserverField mInner1LayerTrackCountTextField $valueObserver root.inner1LayerTrackCountString ;
//  outlet EBTextObserverField mInner2LayerTrackCountTextField $valueObserver root.inner2LayerTrackCountString ;
//  outlet EBTextObserverField mInner3LayerTrackCountTextField $valueObserver root.inner3LayerTrackCountString ;
//  outlet EBTextObserverField mInner4LayerTrackCountTextField $valueObserver root.inner4LayerTrackCountString ;
//  outlet EBTextObserverField mBackSideTrackCountTextField $valueObserver root.backSideTrackCountString ;
//  outlet EBTextObserverField mTrackCountTextField $valueObserver root.trackCountString ;
//  outlet EBTextObserverField mViaCountTextField $valueObserver root.viaCountString ;
//  outlet EBTextObserverField mTrackLengthTextField $valueObserver root.trackLengthString ;
//  outlet EBPopUpButton mTrackLengthUnitPopUp $selectedTag root.mTrackLengthUnit ;
//
////--- Autorouter Interface
//  outlet CanariTabView mAutorouterInterfaceModeTabVView $selectedTabIndex root.mAutorouterInterfaceMode ;
//  outlet EBSwitch mExportExistingTracksAndViasSwitch $value root.mExportExistingTracksAndVias ;
//  action launchFreeRouterWithRouterDocument ;
//  outlet EBButton mLaunchFreeRouterWithDocumentButton $run launchFreeRouterWithRouterDocument ;
//  action importSESFromBasicTabAction ;
//  outlet EBButton mImportSESFromBasicTabButton $run importSESFromBasicTabAction ;
//
////--- ERC Inspector
//  outlet NSTextView mERCLogTextView ;
//
////--- Board track inspector
//  outlet CanariViewWithKeyView mBoardTrackInspectorView ;
//  selectionController BoardTrack #boardTrackSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet EBSwitch mIsPreservedByAutoRouterSwitch $value #boardTrackSelectionController.mIsPreservedByAutoRouter ;
//
//  outlet EBPopUpButton mBoardTrackSidePopUpButton $selectedIndex #boardTrackSelectionController.mSide ;
//
//  outlet EBTextObserverField mTrackNetNameTextField $valueObserver #boardTrackSelectionController.netName ;
//
//  outlet EBTextObserverField mTrackNetClassNameTextField $valueObserver #boardTrackSelectionController.netClassName ;
//
//  outlet EBPopUpButton mTrackDefaultWidthUnitPopUp $selectedTag #boardTrackSelectionController.mDefaultTrackWidthUnit ;
//  outlet CanariDimensionObserverTextField mTrackDefaultWidthTextField
//     $dimensionAndUnit #boardTrackSelectionController.netClassTrackWidth, #boardTrackSelectionController.mDefaultTrackWidthUnit
//  ;
//
//  outlet EBPopUpButton mTrackCustomWidthUnitPopUp $selectedTag #boardTrackSelectionController.mCustomTrackWidthUnit ;
//  outlet CanariDimensionTextField mTrackCustomWidthTextField
//     $dimensionAndUnit #boardTrackSelectionController.mCustomTrackWidth, #boardTrackSelectionController.mCustomTrackWidthUnit
//  ;
//
//  outlet EBSwitch mUsesCustomTrackWidthSwitch $value #boardTrackSelectionController.mUsesCustomTrackWidth ;
//
//  outlet CanariAngleTextField mTrackInBoardRotationTextField
//    $angle #boardTrackSelectionController.trackDirectionInDegrees
//    $enabled #boardTrackSelectionController.trackCanRotate
//  ;
//
//  outlet CanariAngleSlider mTrackInBoardRotationSlider
//    $angle #boardTrackSelectionController.trackDirectionInDegrees
//    $enabled #boardTrackSelectionController.trackCanRotate
//  ;
//
//  outlet CanariTrackLockView mTrackLockView
//    $angle #boardTrackSelectionController.trackDirectionInDegrees
//    $manualLockP1 #boardTrackSelectionController.mManualLockP1
//    $manualLockP2 #boardTrackSelectionController.mManualLockP2
//    $p1ConnectedToSomePad #boardTrackSelectionController.p1ConnectedToSomePad
//    $p2ConnectedToSomePad #boardTrackSelectionController.p2ConnectedToSomePad
//  ;
//
//  outlet EBPopUpButton mDirectionLockOnKnobDraggingPopUpButton
//    $selectedIndex #boardTrackSelectionController.mDirectionLockOnKnobDragging
//  ;
//  
//  outlet CanariDimensionTextField mBoardTrackP1xTextField
//     $dimensionAndUnit #boardTrackSelectionController.computedP1X, #boardTrackSelectionController.mP1XUnit
//    $enabled #boardTrackSelectionController.p1CanMove
//  ;
//  outlet EBPopUpButton mBoardTrackP1xUnitPopUp $selectedTag #boardTrackSelectionController.mP1XUnit ;
//
//  outlet CanariDimensionTextField mBoardTrackP1yTextField
//    $dimensionAndUnit #boardTrackSelectionController.computedP1Y, #boardTrackSelectionController.mP1YUnit
//    $enabled #boardTrackSelectionController.p1CanMove
//  ;
//  outlet EBPopUpButton mBoardTrackP1yUnitPopUp $selectedTag #boardTrackSelectionController.mP1YUnit ;
//
//  outlet CanariDimensionTextField mBoardTrackP2xTextField
//    $dimensionAndUnit #boardTrackSelectionController.computedP2X, #boardTrackSelectionController.mP2XUnit
//    $enabled #boardTrackSelectionController.p2CanMove
//  ;
//  outlet EBPopUpButton mBoardTrackP2xUnitPopUp $selectedTag #boardTrackSelectionController.mP2XUnit ;
//
// outlet CanariDimensionTextField mBoardTrackP2yTextField
//    $dimensionAndUnit #boardTrackSelectionController.computedP2Y, #boardTrackSelectionController.mP2YUnit
//    $enabled #boardTrackSelectionController.p2CanMove
//  ;
//  outlet EBPopUpButton mBoardTrackP2yUnitPopUp $selectedTag #boardTrackSelectionController.mP2YUnit ;
//
//
//
////--- Board Connector inspector
//  outlet CanariViewWithKeyView mBoardConnectorInspectorView ;
//  selectionController BoardConnector #boardConnectorSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet EBTextObserverField mViaNetNameTextField $valueObserver #boardConnectorSelectionController.netNameFromTracks ;
//
//  outlet EBTextObserverField mViaNetClassNameTextField $valueObserver #boardConnectorSelectionController.netClassName ;
//
//  outlet EBPopUpButton mViaDefaultHoleDiameterUnitPopUp
//    $selectedTag #boardConnectorSelectionController.mDefaultHoleDiameterUnit ;
//  outlet CanariDimensionObserverTextField mViaDefaultHoleDiameterTextField
//     $dimensionAndUnit #boardConnectorSelectionController.viaDefaultHoleDiameter,
//     #boardConnectorSelectionController.mDefaultHoleDiameterUnit
//  ;
//  outlet EBPopUpButton mViaCustomHoleDiameterUnitPopUp
//    $selectedTag #boardConnectorSelectionController.mCustomHoleDiameterUnit ;
//  outlet CanariDimensionTextField mViaCustomHoleDiameterTextField
//     $dimensionAndUnit #boardConnectorSelectionController.mCustomHoleDiameter,
//     #boardConnectorSelectionController.mCustomHoleDiameterUnit
//  ;
//  outlet EBSwitch mUsesCustomHoleDiameterSwitch $value #boardConnectorSelectionController.mUsesCustomHoleDiameter ;
//
//  outlet EBPopUpButton mViaDefaultPadDiameterUnitPopUp
//    $selectedTag #boardConnectorSelectionController.mDefaultPadDiameterUnit ;
//  outlet CanariDimensionObserverTextField mViaDefaultPadDiameterTextField
//     $dimensionAndUnit #boardConnectorSelectionController.viaDefaultPadDiameter,
//     #boardConnectorSelectionController.mDefaultPadDiameterUnit
//  ;
//  outlet EBPopUpButton mViaCustomPadDiameterUnitPopUp
//    $selectedTag #boardConnectorSelectionController.mCustomPadDiameterUnit ;
//  outlet CanariDimensionTextField mViaCustomPadDiameterTextField
//     $dimensionAndUnit #boardConnectorSelectionController.mCustomPadDiameter,
//     #boardConnectorSelectionController.mCustomPadDiameterUnit
//  ;
//  outlet EBSwitch mUsesCustomPadDiameterSwitch $value #boardConnectorSelectionController.mUsesCustomPadDiameter ;
//
//
////--- Board line inspector
//  outlet CanariViewWithKeyView mBoardLineInspectorView ;
//  selectionController BoardLine #boardLineSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet EBPopUpButton mBoardLineWidthUnitPopUp $selectedTag #boardLineSelectionController.mWidthUnit ;
//  outlet CanariDimensionTextField mBoardLineWidthTextField
//     $dimensionAndUnit #boardLineSelectionController.mWidth, #boardLineSelectionController.mWidthUnit
//  ;
//
//  outlet EBPopUpButton mBoardLineLayerPopUpButton $selectedIndex #boardLineSelectionController.mLayer ;
//
//  outlet EBPopUpButton mBoardLineX1UnitPopUp $selectedTag #boardLineSelectionController.mX1Unit ;
//  outlet CanariDimensionTextField mBoardLineX1TextField
//     $dimensionAndUnit #boardLineSelectionController.mX1, #boardLineSelectionController.mX1Unit
//  ;
//
//  outlet EBPopUpButton mBoardLineY1UnitPopUp $selectedTag #boardLineSelectionController.mY1Unit ;
//  outlet CanariDimensionTextField mBoardLineY1TextField
//     $dimensionAndUnit #boardLineSelectionController.mY1, #boardLineSelectionController.mY1Unit
//  ;
//
//  outlet EBPopUpButton mBoardLineX2UnitPopUp $selectedTag #boardLineSelectionController.mX2Unit ;
//  outlet CanariDimensionTextField mBoardLineX2TextField
//     $dimensionAndUnit #boardLineSelectionController.mX2, #boardLineSelectionController.mX2Unit
//  ;
//
//  outlet EBPopUpButton mBoardLineY2UnitPopUp $selectedTag #boardLineSelectionController.mY2Unit ;
//  outlet CanariDimensionTextField mBoardLineY2TextField
//     $dimensionAndUnit #boardLineSelectionController.mY2, #boardLineSelectionController.mY2Unit
//  ;
//
//
//
//
////--- Restrict rectangle inspector
//  outlet CanariViewWithKeyView mRestrictRectangleInspectorView ;
//  selectionController BoardRestrictRectangle #restrictRectangleSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet EBSwitch mFrontRestrictRectangleSwitch
//    $value #restrictRectangleSelectionController.mIsInFrontLayer
//    $enabled #restrictRectangleSelectionController.mIsInBackLayer
//  ;
//
//  outlet EBSwitch mBackRestrictRectangleSwitch
//    $value #restrictRectangleSelectionController.mIsInBackLayer
//    $enabled #restrictRectangleSelectionController.mIsInFrontLayer
//  ;
//
////--- Text inspector
//  outlet CanariViewWithKeyView mBoardTextInspectorView ;
//  selectionController BoardText #boardTextSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet EBTextField mBoardTextTextField $value #boardTextSelectionController.mText (sendContinously : yes) ;
//
//  outlet EBDoubleField mBoardTextFontSizeField
//    $value #boardTextSelectionController.mFontSize (sendContinously : no, autoFormatter : no)
//  ;
//
//  outlet EBPopUpButton mBoardTextLayerPopUpButton $selectedIndex #boardTextSelectionController.mLayer ;
//
//  outlet CanariEnumSegmentedControl mBoardTextHorizontalAlignmentSegmentedControl
//    $selectedSegment #boardTextSelectionController.mHorizontalAlignment
//  ;
//
//  outlet CanariEnumSegmentedControl mBoardTextVerticalAlignmentSegmentedControl
//    $selectedSegment #boardTextSelectionController.mVerticalAlignment
//  ;
//  
//  outlet CanariAngleTextField mBoardTextRotationTextField $angle #boardTextSelectionController.mRotation ;
//  outlet CanariAngleSlider mBoardTextRotationSlider $angle #boardTextSelectionController.mRotation ;
//  
//  outlet CanariBoardTextFontPopUpButton mBoardTextFontPopUpButton ;
//  
//  outlet EBDoubleField mBoardTextWeightTextField
//    $value #boardTextSelectionController.mWeight ( sendContinously : no, autoFormatter: no)
//  ;
//  
//  outlet EBSwitch mBoardTextObliqueSwitch $value #boardTextSelectionController.mOblique ;
//
////--- Component inspector
//  outlet CanariViewWithKeyView mComponentInBoardInspectorView ;
//  selectionController ComponentInProject #componentInBoardSelectionController :
//    #boardObjectsController.selectedArray
//  ;
//
//  outlet CanariBoolPopUpButton mSlavePadsShouldBeRoutedPopUpButton
//    $value #componentInBoardSelectionController.mSlavePadsShouldBeRouted (
//      item0: "should be insulated",
//      item1: "should be routed"
//    )
//    $enabled #componentInBoardSelectionController.hasSlavePads
//  ;
//
//
//  outlet EBSwitch mDisplayLegendSwitch $value #componentInBoardSelectionController.mDisplayLegend ;
//
//  outlet EBSwitch mShowRotationKnobInBoardSwitch $value prefs.mShowRotationKnobInBoard ;
//
//  outlet EBPopUpButton mComponentInBoardCenterXPopUp $selectedTag #componentInBoardSelectionController.mXUnit ;
//  outlet CanariDimensionTextField mComponentInBoardCenterXTextField
//     $dimensionAndUnit #componentInBoardSelectionController.mX, #componentInBoardSelectionController.mXUnit
//  ;
//
//  outlet EBPopUpButton mComponentInBoardCenterYPopUp $selectedTag #componentInBoardSelectionController.mYUnit ;
//  outlet CanariDimensionTextField mComponentInBoardCenterYTextField
//     $dimensionAndUnit #componentInBoardSelectionController.mY, #componentInBoardSelectionController.mYUnit
//  ;
//
//  outlet CanariBoardComponentPackagePopUpButton mComponentPackagePopUpButton ;
//
//  outlet CanariAngleTextField mBoardComponentRotationTextField $angle #componentInBoardSelectionController.mRotation ;
//  outlet CanariAngleSlider mBoardComponentRotationSlider $angle #componentInBoardSelectionController.mRotation ;
//  outlet CanariOrientationSegmentedControl mBoardComponentRotationSegmentedControl
//    $angle #componentInBoardSelectionController.mRotation
//  ;
//
//  outlet EBPopUpButton mBoardComponentSidePopUpButton $selectedIndex #componentInBoardSelectionController.mSide ;
//
//  outlet EBSwitch mDisplayComponentNameSwitch
//    $value #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//  outlet EBDoubleField mComponentNameFontSizeField
//    $value #componentInBoardSelectionController.mNameFontSize (sendContinously : no, autoFormatter : no)
//    $enabled #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//  
//  outlet CanariAngleTextField mComponentNameRotationTextField
//    $angle #componentInBoardSelectionController.mNameRotation
//    $enabled #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//  outlet CanariAngleSlider mComponentNameRotationSlider
//    $angle #componentInBoardSelectionController.mNameRotation
//    $enabled #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//  outlet CanariOrientationSegmentedControl mComponentNameRotationSegmentedControl
//    $angle #componentInBoardSelectionController.mNameRotation
//    $enabled #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//
//  outlet EBTextObserverField mBoardComponentNameTextField
//    $valueObserver #componentInBoardSelectionController.componentName
//  ;
//
//  outlet CanariBoardComponentNameFontPopUpButton mBoardComponentNameFontPopUpButton
//    $enabled #componentInBoardSelectionController.mNameIsVisibleInBoard
//  ;
//
//
//  outlet EBSwitch mDisplayComponentValueSwitch $value #componentInBoardSelectionController.mValueIsVisibleInBoard ;
//  outlet EBDoubleField mComponentValueFontSizeField
//    $value #componentInBoardSelectionController.mValueFontSize (sendContinously : no, autoFormatter : no)
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//
//  outlet CanariAngleTextField mComponentValueRotationTextField
//    $angle #componentInBoardSelectionController.mValueRotation
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//  outlet CanariAngleSlider mComponentValueRotationSlider
//    $angle #componentInBoardSelectionController.mValueRotation
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//  outlet CanariOrientationSegmentedControl mComponentValueRotationSegmentedControl
//    $angle #componentInBoardSelectionController.mValueRotation
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//
//  outlet EBTextField mBoardComponentValueTextField
//    $value #componentInBoardSelectionController.mComponentValue (sendContinously : yes)
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//
//  outlet CanariBoardComponentValueFontPopUpButton mBoardComponentValueFontPopUpButton
//    $enabled #componentInBoardSelectionController.mValueIsVisibleInBoard
//  ;
//  
////--- Display inspector
//  outlet EBSwitch mDisplayFrontPadsSwitch $value prefs.displayFrontPadsForBoard ;
//  outlet EBColorWell mDisplayFrontPadsColorWell $color prefs.frontSidePadColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayBackPadsSwitch $value prefs.displayBackPadsForBoard ;
//  outlet EBColorWell mDisplayBackPadsColorWell $color prefs.backSidePadColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayPadNumbersSwitch $value prefs.displayPadNumbersForBoard ;
//  outlet EBColorWell mDisplayPadNumbersColorWell $color prefs.padNumberColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayFrontLegendSwitch $value prefs.displayFrontLegendForBoard ;
//  outlet EBColorWell mDisplayFrontLegendColorWell $color prefs.frontSideLegendColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayBackLegendSwitch $value prefs.displayBackLegendForBoard ;
//  outlet EBColorWell mDisplayBackLegendColorWell $color prefs.backSideLegendColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayFrontLayoutSwitch $value prefs.displayFrontLayoutForBoard ;
//  outlet EBColorWell mDisplayFrontLayoutColorWell $color prefs.frontSideLayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayInner1LayoutSwitch $value prefs.displayInner1LayoutForBoard ;
//  outlet EBColorWell mDisplayInner1LayoutColorWell $color prefs.inner1LayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayInner2LayoutSwitch $value prefs.displayInner2LayoutForBoard ;
//  outlet EBColorWell mDisplayInner2LayoutColorWell $color prefs.inner2LayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayInner3LayoutSwitch $value prefs.displayInner3LayoutForBoard ;
//  outlet EBColorWell mDisplayInner3LayoutColorWell $color prefs.inner3LayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayInner4LayoutSwitch $value prefs.displayInner4LayoutForBoard ;
//  outlet EBColorWell mDisplayInner4LayoutColorWell $color prefs.inner4LayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayBackLayoutSwitch $value prefs.displayBackLayoutForBoard ;
//  outlet EBColorWell mDisplayBackLayoutColorWell $color prefs.backSideLayoutColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayFrontRestrictRectanglesSwitch $value prefs.displayFrontRestrictRectangles ;
//  outlet EBColorWell mDisplayFrontRestrictRectanglesColorWell $color prefs.frontSideRestrictRectangleColorForBoard (sendContinously:yes) ;
//
//  outlet EBSwitch mDisplayBackRestrictRectanglesSwitch $value prefs.displayBackRestrictRectangles ;
//  outlet EBColorWell mDisplayBackRestrictRectanglesColorWell $color prefs.backSideRestrictRectangleColorForBoard (sendContinously:yes) ;
//
//  outlet EBColorWell mDisplayBoardLimitsColorWell $color prefs.boardLimitsColorForBoard (sendContinously:yes) ;
//
//  outlet EBColorWell mDisplayBoardClearanceColorWell $color prefs.boardClearanceColorForBoard (sendContinously:yes) ;
//
//  outlet EBColorWell mBoardBackgroundColorWell $color prefs.boardBackgroundColorForBoard (sendContinously:yes) ;
//  
//  outlet EBSlider mErrorOrWarningIssueSlider $doubleValue root.mErrorOrWarningIssueSize (sendContinously : yes) ;
//  
//  outlet EBSlider mControlKeyHiliteDiameterSlider $doubleValue root.mControlKeyHiliteDiameter (sendContinously : yes) ;
//  
//  outlet EBPopUpButton mRastnetDisplayPopUpButton $selectedIndex root.mRastnetDisplay ;
//  transient Bool rastnetDisplayOneNet dependsFrom root.mRastnetDisplay ;
//  outlet CanariSelectionPopUpButton mRasnetNetNameSelectionPopUpButton
//    $selectedNameInArray root.mRastnetDisplayedNetName, root.netNamesArray
//    $hidden !self.rastnetDisplayOneNet
//  ;
//  transient Bool rastnetDisplayComponentNet dependsFrom root.mRastnetDisplay ;
//  outlet CanariSelectionPopUpButton mRasnetComponentNameSelectionPopUpButton
//    $selectedNameInArray root.mRastnetDisplayedComponentName, root.placedComponentNameArray
//    $hidden !self.rastnetDisplayComponentNet
//  ;
//  transient EBShape rastnetShape dependsFrom
//    root.mRastnetDisplay,
//    root.mRastnetDisplayedNetName,
//    root.mRastnetDisplayedComponentName,
//    root.mBoardObjects.all.netNameAndPadLocation,
//    #boardObjectsController.selectedArray.all.componentName
//  ;
//
//
////--- Artwork
//  outlet EBTextObserverField mArtworkNameTextField $valueObserver root.mArtworkName ;
//  outlet NSTextField mNoArtworkMessageTextField $hidden !root.mArtwork.none ;
//  outlet NSTabView mProductGenerationTabView ;
//  outlet NSTabView mArtworkSettingsTabView $hidden root.mArtwork.none ;
//  outlet NSTextView mProductFileGenerationLogTextView ;
//
//  action importArtworkAction ;
//  transient String artworlImportButtonTitle dependsFrom root.mArtwork.none ;
//  outlet EBButton mArtworlImportButton $run importArtworkAction $title self.artworlImportButtonTitle ;
//
//  action generateProductFilesAction ;
//  outlet EBButton mGenerateProductFilesActionButton $run generateProductFilesAction $enabled !root.mArtwork.none ;
//  
//  transient Bool documentFilePathOk dependsFrom self.documentFileName ;
//  outlet NSView mIncorrectFileNameMessageView $hidden self.documentFilePathOk ;
//
//  outlet EBColorWell mPDFBoardBackgroundColorWell $color root.mPDFBoardBackgroundColor (sendContinously : no) ;
//
////---------------- Minima Page
//  outlet EBPopUpButton mMinPPTPTTTWinEBUnitPopUp $selectedTag root.minPPTPTTTWdisplayUnit ;
//  outlet CanariDimensionObserverTextField mMinPPTPTTTWdisplayUnitTextField
//     $dimensionAndUnit root.minPPTPTTTW, root.minPPTPTTTWdisplayUnit
//  ;
//
//  outlet EBPopUpButton mOARUnitPopUp $selectedTag root.minValueForOARdisplayUnit ;
//  outlet CanariDimensionObserverTextField mOARValueTextField
//     $dimensionAndUnit root.minValueForOARinEBUnit, root.minValueForOARdisplayUnit
//  ;
//
//  outlet EBPopUpButton mPHDUnitPopUp $selectedTag root.minValueForPHDdisplayUnit ;
//  outlet CanariDimensionObserverTextField mPHDValueTextField
//     $dimensionAndUnit root.minValueForPHDinEBUnit, root.minValueForPHDdisplayUnit
//  ;
//
//  outlet EBPopUpButton minValueForBoardLimitUnitPopUp $selectedTag root.minValueForBoardLimitWidthDisplayUnit ;
//  outlet CanariDimensionObserverTextField minValueForBoardLimitTextField
//     $dimensionAndUnit root.minValueForBoardLimitWidth, root.minValueForBoardLimitWidthDisplayUnit
//  ;
//
////--- Drill Page
//  outlet EBTextObserverField mDrillDataFileExtensionTextField $valueObserver root.drillDataFileExtension ;
//
////--- Data Tab
//  outlet EBTableView mDataTableView $tableValue #mDataController ;
//  selectionController ArtworkFileGenerationParameters #mDataSelection : #mDataController.selectedArray ;
//  tableViewController #mDataController {allowsEmptySelection:no, allowsMultipleSelection:no} root.fileGenerationParameterArray {
//     column "name" sortkey name EBTextObserverField $valueObserver self.name
//  }
//
//  outlet EBTextObserverField mExtensionTextField $valueObserver #mDataSelection.fileExtension ;
////  outlet CanariObserverSwitch mDrawBoardInternalLimitsSwitch $valueObserver #mDataSelection.drawInternalBoardLimits ;
//  outlet CanariObserverSwitch mDrawBoardLimitsSwitch $valueObserver #mDataSelection.drawBoardLimits ;
//  outlet CanariObserverSwitch mDrawComponentValuesTopSideSwitch $valueObserver #mDataSelection.drawComponentValuesTopSide ;
//  outlet CanariObserverSwitch mDrawComponentValuesBottomSideSwitch $valueObserver #mDataSelection.drawComponentValuesBottomSide ;
//  outlet CanariObserverSwitch mDrawComponentNamesTopSideSwitch $valueObserver #mDataSelection.drawComponentNamesTopSide ;
//  outlet CanariObserverSwitch mDrawComponentNamesBottomSideSwitch $valueObserver #mDataSelection.drawComponentNamesBottomSide ;
//  outlet CanariObserverSwitch mDrawPackageLegendTopSideSwitch $valueObserver #mDataSelection.drawPackageLegendTopSide ;
//  outlet CanariObserverSwitch mDrawPackageLegendBottomSideSwitch $valueObserver #mDataSelection.drawPackageLegendBottomSide ;
////  outlet CanariObserverSwitch mDrawPadHolesInPDFSwitch $valueObserver #mDataSelection.drawPadHolesInPDF ;
//  outlet CanariObserverSwitch mDrawPadsTopSideSwitch $valueObserver #mDataSelection.drawPadsTopSide ;
//  outlet CanariObserverSwitch mDrawPadsBottomSideSwitch $valueObserver #mDataSelection.drawPadsBottomSide ;
//  outlet CanariObserverSwitch mDrawTextsLayoutTopSideSwitch $valueObserver #mDataSelection.drawTextsLayoutTopSide ;
//  outlet CanariObserverSwitch mDrawTextsLayoutBottomSideSwitch $valueObserver #mDataSelection.drawTextsLayoutBottomSide ;
//  outlet CanariObserverSwitch mDrawTextsLegendTopSideSwitch $valueObserver #mDataSelection.drawTextsLegendTopSide ;
//  outlet CanariObserverSwitch mDrawTextsLegendBottomSideSwitch $valueObserver #mDataSelection.drawTextsLegendBottomSide ;
//  outlet CanariObserverSwitch mDrawTracksTopSideSwitch $valueObserver #mDataSelection.drawTracksTopSide ;
//  outlet CanariObserverSwitch mDrawTracksBottomSideSwitch $valueObserver #mDataSelection.drawTracksBottomSide ;
//  outlet CanariObserverSwitch mDrawTracksInner1LayerSwitch $valueObserver #mDataSelection.drawTracksInner1Layer ;
//  outlet CanariObserverSwitch mDrawTracksInner2LayerSwitch $valueObserver #mDataSelection.drawTracksInner2Layer ;
//  outlet CanariObserverSwitch mDrawTracksInner3LayerSwitch $valueObserver #mDataSelection.drawTracksInner3Layer ;
//  outlet CanariObserverSwitch mDrawTracksInner4LayerSwitch $valueObserver #mDataSelection.drawTracksInner4Layer ;
//  outlet CanariObserverSwitch mDrawTraversingPadsSwitch $valueObserver #mDataSelection.drawTraversingPads ;
//  outlet CanariObserverSwitch mDrawViasSwitch $valueObserver #mDataSelection.drawVias ;
//  outlet CanariObserverSwitch mHorizontalMirrorSwitch $valueObserver #mDataSelection.horizontalMirror ;
//
//  outlet EBTextObserverView mArtworkCommentTextView $valueObserver root.artworkComments ;
//  outlet EBIntObserverField mArtworkVersionTextField $valueObserver root.mArtworkVersion (autoFormatter: no) ;
//  outlet EBTextObserverField mArtworkTitleTextField $valueObserver root.artworkTitle ;
//  outlet EBTextObserverField mArtworkLayerConfigurationTextField $valueObserver self.layerConfigurationString ;
//  
//  transient String layerConfigurationString dependsFrom root.artworkLayerConfiguration ;
}

//------------------------------------------------------------------------------
